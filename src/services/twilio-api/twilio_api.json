{
  "openapi": "3.0.2",
  "info": {
    "title": "Twilio REST API",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "81ff5a4"
  },
  "paths": {
    "/v1/Credentials": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Credential type, one of \"gcm\", \"fcm\", or \"apn\"",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate. Strip everything outside of the headers, e.g. `-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==-----END CERTIFICATE-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key. Strip everything outside of the headers, e.g. `-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\n.-----END RSA PRIVATE KEY-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs (string `true` or `false`)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging. Yes, you can use the server key from the Firebase console for GCM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Credentials/AWS": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of AWS Credentials belonging to the account used to make the request",
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": "Create a new AWS Credential",
        "parameters": [
          {
            "name": "Credentials",
            "in": "query",
            "description": "String containing AWS access credentials with format <AWS_ACCESS_KEY_ID>:<AWS_SECRET_ACCESS_KEY>, e.g. AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with. Needs to be a valid Subaccount of the account issuing the request",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Credentials/AWS/{Sid}": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the AWS credentials specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Credentials/PublicKeys": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of Public Key Credentials belonging to the account used to make the request",
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": "Create a new Public Key Credential",
        "parameters": [
          {
            "name": "PublicKey",
            "in": "query",
            "description": "URL encoded representation of the public key, e.g. -----BEGIN PUBLIC KEY-----MIIBIjANB.pa9xQIDAQAB-----END PUBLIC KEY-----",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with. Needs to be a valid Subaccount of the account issuing the request",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Credentials/PublicKeys/{Sid}": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the public key specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Twilio Subaccount from the account making the request",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the account to create, defaults to `SubAccount Created at {YYYY-MM-DD HH:MM meridian}`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieves a collection of Accounts belonging to the account used to make the request",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only return the Account resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only return Account resources with the given status. Can be `closed`, `suspended` or `active`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "active",
                "suspended",
                "closed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the account specified by the provided Account Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Account Sid that uniquely identifies the account to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Account Sid that uniquely identifies the account to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Update the human-readable description of this Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Alter the status of this account: use `closed` to irreversibly close this account, `suspended` to temporarily suspend it, or `active` to reactivate it.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "active",
                "suspended",
                "closed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "Your name or business name, or that of your customer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The number and street address where you or your customer is located.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The city in which you or your customer is located.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "The state or region in which you or your customer is located.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "The postal code in which you or your customer is located.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "The ISO country code of your or your customer's address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable description of the new address. Maximum 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmergencyEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AutoCorrectAddress",
            "in": "query",
            "description": "If you don't set a value for this parameter, or if you set it to `true`, then the system will, if necessary, auto-correct the address you provide. If you don't want the system to auto-correct the address, you will explicitly need to set this value to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "Only return the Address resources with customer names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only return the Address resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "Only return the Address resources in this country.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable description of the address. Maximum 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "Your name or business name, or that of your customer.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The number and street address where you or your customer is located.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The city in which you or your customer is located.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "The state or region in which you or your customer is located.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "The postal code in which you or your customer is located.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmergencyEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AutoCorrectAddress",
            "in": "query",
            "description": "If you don't set a value for this parameter, or if you set it to `true`, then the system will, if necessary, auto-correct the address you provide. If you don't want the system to auto-correct the address, you will explicitly need to set this value to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new application within your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the new application, maximum of 64 characters.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "Requests to this application's URLs will start a new TwiML session with this API version. Either `2010-04-01` or `2008-08-01`. Defaults to your account's default API version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials a phone number assigned to this application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceFallbackUrl`. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Do a lookup of a caller's name from the CNAM database and post it to your app. Either `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when a phone number assigned to this application receives an incoming SMS message.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsStatusCallback",
            "in": "query",
            "description": "Twilio will make a `POST` request to this URL to pass status parameters (such as sent or failed) to your application if you specify this application's `Sid` as the `ApplicationSid` on an [outgoing SMS request](https://www.twilio.com/docs/sms/send-messages).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "MessageStatusCallback",
            "in": "query",
            "description": "Twilio will make a `POST` request to this URL to pass status parameters (such as sent or failed) to your application if you use the `/Messages` endpoint to send the message and specify this application's `Sid` as the `ApplicationSid` on an [outgoing SMS request](https://www.twilio.com/docs/sms/send-messages).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of applications representing an application within the requesting account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only return application resources with friendly names that match exactly with this name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete the application by the specified application sid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The application sid the uniquely identifies this application",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch the application specified by the provided sid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The application Sid that that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the application's properties",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the application, with maximum length 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "Requests to this application's URLs will start a new TwiML session with this API version. Either `2010-04-01` or `2008-08-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials a phone number assigned to this application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `VoiceUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Look up the caller's caller-ID name from the CNAM database (additional charges apply). Either `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when a phone number assigned to this application receives an incoming SMS message.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsStatusCallback",
            "in": "query",
            "description": "The URL that Twilio will `POST` to when a message is sent via the `/SMS/Messages` endpoint if you specify the `Sid` of this application on an [outgoing SMS request](https://www.twilio.com/docs/sms/send-messages).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "MessageStatusCallback",
            "in": "query",
            "description": "Twilio will make a `POST` request to this URL to pass status parameters (such as sent or failed) to your application if you use the `/Messages` endpoint to send the message and specify this application's `Sid` as the `ApplicationSid` on an [outgoing SMS request](https://www.twilio.com/docs/sms/send-messages).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of authorized-connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an authorized-connect-app",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConnectAppSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "Find phone numbers in the specified area code. (US and Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "A pattern on which to match phone numbers. Valid characters are `'*'` and `[0-9a-zA-Z]`. The `'*'` character will match any single digit. See [Example 2](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-3) below. *NOTE:* Patterns must be at least two characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive text messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive MMS messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive calls. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require any [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with an Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a local [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a local Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a foreign [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a foreign Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within `Distance` miles. Distance defaults to 25 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `Distance` miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "Specifies the search radius for a `Near-` query in miles. If not specified this defaults to 25 miles. Maximum searchable distance is 500 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region (i.e.  State/Province). Given a phone number, search within the same Region as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires InLata to be set as well. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific Local access and transport area ([LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality (i.e.  City). Given a phone number, search within the same Locality as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive faxes. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "Find phone numbers in the specified area code. (US and Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "A pattern on which to match phone numbers. Valid characters are `'*'` and `[0-9a-zA-Z]`. The `'*'` character will match any single digit. See [Example 2](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-3) below. *NOTE:* Patterns must be at least two characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive text messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive MMS messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive calls. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require any [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with an Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a local [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a local Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a foreign [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a foreign Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within `Distance` miles. Distance defaults to 25 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `Distance` miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "Specifies the search radius for a `Near-` query in miles. If not specified this defaults to 25 miles. Maximum searchable distance is 500 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region (i.e. State/Province). Given a phone number, search within the same Region as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires InLata to be set as well. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific Local access and transport area ([LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality (i.e.  City). Given a phone number, search within the same Locality as that number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive faxes. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "Find phone numbers in the specified area code. (US and Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "A pattern on which to match phone numbers. Valid characters are `'*'` and `[0-9a-zA-Z]`. The `'*'` character will match any single digit. See [Example 2](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/api/rest/available-phone-numbers#local-get-basic-example-3) below. *NOTE:* Patterns must be at least two characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive text messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive MMS messages. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive calls. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require any [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with an Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a local [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a local Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Indicates whether the response includes phone numbers which require a foreign [Address](https://www.twilio.com/docs/usage/api/addresses). Possible values are `true` or `false`. If not specified, the default is `false`, and results could include phone numbers with a foreign Address required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within `Distance` miles. Distance defaults to 25 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `Distance` miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "Specifies the search radius for a `Near-` query in miles. If not specified this defaults to 25 miles. Maximum searchable distance is 500 miles. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region (i.e.  State/Province). Given a phone number, search within the same Region as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires InLata to be set as well. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific Local access and transport area ([LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](http://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. *Limited to US and Canadian phone numbers.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality (i.e.  City). Given a phone number, search within the same Locality as that number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "This indicates whether the phone numbers can receive faxes. Possible values are `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The 34 character string that uniquely identifies your account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Balance.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique SID identifier of the Account.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The phone number, SIP address, or client identifier to call.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `To` parameter is a phone number, `From` must also be a phone number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "The HTTP method Twilio should use when making its request to the `Url` parameter's value. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "FallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML at `Url`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackMethod",
            "in": "query",
            "description": "The HTTP method that Twilio should use to request the `FallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio will send asynchronous webhook requests to on every call event specified in the `StatusCallbackEvent` parameter. If no event is specified, Twilio will send `completed` by default. If an `ApplicationSid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": "The call progress events that will trigger a webhook from Twilio. Available values are `initiated`, `ringing`, `answered`, and `completed`. If no event is specified, defaults to `completed`. If you want to receive multiple events, please provide multiple `StatusCallbackEvent` values as individual parameters in the `POST` request. See the code sample for [monitoring call progress](https://www.twilio.com/docs/voice/api/call?code-sample=code-create-a-call-and-specify-a-statuscallbackevent). If an `ApplicationSid` is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the `StatusCallback` URL. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SendDigits",
            "in": "query",
            "description": "A string of keys to dial after connecting to the number, maximum of 32 digits. Valid digits in the string include: any digit (`0`-`9`), '`#`', '`*`' and '`w`' (to insert a half second pause). For example, if you connected to a company phone number and wanted to pause for one second, dial extension 1234, and then the pound key, use `SendDigits=ww1234#`. Remember to URL-encode this string, since the '`#`' character has special meaning in a URL. If both `SendDigits` and `MachineDetection` parameters are provided, then `MachineDetection` will be ignored.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IfMachine",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "The integer number of seconds that Twilio should allow the phone to ring before assuming there is no answer. Default is `60` seconds, the maximum is `600` seconds. For some call flows, Twilio will add a 5-second buffer to the timeout value provided, so if you enter a timeout value of 10 seconds, you could see actual timeout closer to 15 seconds. Note, you could set this to a low value like `15` to hang up before reaching an answering machine or voicemail.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": "Set this parameter to `true` to record the entirety of a phone call. The `RecordingUrl` will be sent to the `StatusCallback` URL. Defaults to false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "`mono` or `dual` \u2013 defaults to `mono`. Set this parameter to specify the number of channels in the final recording. In a mono-channel recording, both legs of the call are mixed down into a single channel within a single recording file. With dual-channel recording, both legs use separate channels within a single recording file. In dual-channel recordings, the parent call will always be in the first channel, and the child call will always be in the second channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "A URL that Twilio will send a webhook request to when the recording is available for access.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the `RecordingStatusCallback` URL. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MachineDetection",
            "in": "query",
            "description": "Detect if a human, answering machine, or fax has picked up the call. Use `Enable` if you would like Twilio to return an `AnsweredBy` value as soon as it identifies the called party. If you would like to leave a message on an answering machine, specify `DetectMessageEnd`. If both `SendDigits` and `MachineDetection` parameters are provided, then MachineDetection will be ignored. [Detailed documentation is here](https://www.twilio.com/docs/voice/answering-machine-detection).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MachineDetectionTimeout",
            "in": "query",
            "description": "The number of seconds that Twilio should attempt to perform answering machine detection before timing out and firing a voice request with `AnsweredBy` of `unknown`. Defaults to 30 seconds.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "The recording status events that will trigger Twilio to send webhooks on to the URL specified in `RecordingStatusCallback`. The available values are `in-progress`, `completed` and `absent`. Defaults to `completed`. To specify multiple values, separate them with a space.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "`trim-silence` or `do-not-trim`. Set this parameter to define whether leading and trailing silence is trimmed from the recording.  Defaults to `trim-silence`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallerId",
            "in": "query",
            "description": "The phone number, SIP address, or Client identifier that made this Call. Phone numbers are in [E.164 format](https://www.twilio.com/docs/glossary/what-e164) (e.g., +16175551212). SIP addresses are formatted as `name@company.com`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieves a collection of Calls made to and from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Only show calls to this phone number, SIP address, Client identifier or SIM SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Only show calls from this phone number, SIP address, Client identifier or SIM SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentCallSid",
            "in": "query",
            "description": "Only show calls spawned by the Call with this SID.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only show calls currently in the specified status. May be `queued`, `ringing`, `in-progress`, `canceled`, `completed`, `failed`, `busy`, or `no-answer`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ]
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "description": "Only show calls that started on this date, given as `YYYY-MM-DD`. Also supports inequalities, such as `StartTime<=YYYY-MM-DD` for calls that started at or before midnight on a date, and `StartTime>=YYYY-MM-DD` for calls that started at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "description": "Only show calls that ended on this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Call Sid that uniquely identifies the Call to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch the Call specified by the provided Call Sid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Call Sid that uniquely identifies the Call to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Initiates a call redirect or terminates a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Call Sid that uniquely identifies the Call to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": "that hosts instructions for the call. Twilio will consult this URL when the call connects. See the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "The HTTP method Twilio should use when making its request to the `Url` parameter's value. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Either\u00a0`canceled`\u00a0or\u00a0`completed`. Specifying\u00a0`canceled`\u00a0will attempt to hang up calls that are queued or ringing, but will not affect calls already in progress. Specifying\u00a0`completed`\u00a0will attempt to hang up a call even if it's already in progress.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "canceled",
                "completed"
              ]
            }
          },
          {
            "name": "FallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs when requesting or executing the TwiML at `Url`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackMethod",
            "in": "query",
            "description": "The HTTP method that Twilio should use to request the `FallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio will send asynchronous webhook requests to on every call event specified in the `StatusCallbackEvent` parameter. If no event is specified, Twilio will send `completed` by default. If an `ApplicationSid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the `StatusCallback` URL. Defaults to `POST`. If an `ApplicationSid` parameter is present, this parameter is ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Feedback.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Update a Feedback resource for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call sid that uniquely identifies the call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QualityScore",
            "in": "query",
            "description": "The call quality expressed as an integer from `1` to `5` where `1` represents very poor call quality and `5` represents a perfect call.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Issue",
            "in": "query",
            "description": "One or more issues experienced during the call. The issues can be: `imperfect-audio`, `dropped-call`, `incorrect-caller-id`, `post-dial-delay`, `digits-not-captured`, `audio-latency`, or `one-way-audio`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ]
              }
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a Feedback resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call sid that uniquely identifies the call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a FeedbackSummary resource for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to also include Feedback resources from all subaccounts. `true` includes feedback from all subaccounts and `false`, the default, includes feedback from only the specified account.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that we will request when the feedback summary is complete.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method (`GET` or `POST`) we use to make the request to the `StatusCallback` URL.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a FeedbackSummary resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a FeedbackSummary resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Log",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MessageDate",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a recording for the call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "The recording status changes that should generate a request to the URL specified in RecordingStatusCallback. Possible values: `in-progress`, `completed` and `absent`. To specify multiple values separate them with a space. Defaults to `completed`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "The URL which Twilio will make its GET or POST request to for the recording events specified in parameter RecordingStatusCallbackEvent. See [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when making a request to the RecordingStatusCallback URL. Possible values: `GET`, `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "Possible values: `trim-silence` or `do-not-trim`. `trim-silence` will trim the silence from the beginning and end of the recording. `do-not-trim` will not trim the silence. Defaults to `do-not-trim`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "Possible values: `mono` or `dual`. `mono` records all parties of your call into one channel. `dual` records a 2 party call into separate channels. Defaults to `mono`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "Only show recordings created on the given date. Should be formatted as `YYYY-MM-DD`. You can also specify inequality, such as `DateCreated<=YYYY-MM-DD` for recordings generated at or before midnight on a date, and `DateCreated>=YYYY-MM-DD` for recordings generated at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: Pass \u2018Twilio.CURRENT\u2019 instead of recording sid to reference current active recording.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording sid to update. (or use 'Twilio.CURRENT' instead of recording sid to reference current active recording)",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status to change the recording to.  Possible values: `stopped`, `paused`, `in-progress`",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          {
            "name": "PauseBehavior",
            "in": "query",
            "description": "Only applicable when setting Status parameter to `paused`. Possible values: `skip` or `silence`. `skip` will result in no recording at all during the pause period. `silence` will replace the actual audio of the call with silence during the pause period.  Defaults to `silence`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of conferences belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "Only show conferences that started on this date, given as `YYYY-MM-DD`. You can also specify inequality \u2013 for conferences that started at or before midnight on a date use  `DateCreated<=YYYY-MM-DD`, or specify  conferences that started at or after midnight on a date with `DateCreated>=YYYY-MM-DD`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "Only show conferences that were last updated on this date, given as `YYYY-MM-DD`. You can also specify inequality \u2013 for conferences that were last updated at or before midnight on a date use `DateUpdated<=YYYY-MM-DD`, or specify conferences updated at or after midnight on a given date with   `DateUpdated>=YYYY-MM-DD`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show results who's friendly name exactly matches the string",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string representing the status of the conference. May be `init`, `in-progress`, or `completed`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "init",
                "in-progress",
                "completed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a conference",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The conference Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Specifying `completed` will end the conference and kick all participants",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "completed"
              ]
            }
          },
          {
            "name": "AnnounceUrl",
            "in": "query",
            "description": "The 'AnnounceUrl' attribute lets you specify a URL for announcing something into a conference. The URL may return an MP3, a WAV or a TwiML document with `<Play>` or `<Say>`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AnnounceMethod",
            "in": "query",
            "description": "Specify GET or POST, defaults to POST",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "Only show recordings created on the given date. Should be formatted as `YYYY-MM-DD`. You can also specify inequality, such as `DateCreated<=YYYY-MM-DD` for recordings generated at or before midnight on a date, and `DateCreated>=YYYY-MM-DD` for recordings generated at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: To use `Twilio.CURRENT`, pass it as recording sid.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording sid to update. (or use 'Twilio.CURRENT' instead of recording sid to reference current active recording)",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status to change the recording to.  Possible values: `stopped`, `paused`, `in-progress`",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          {
            "name": "PauseBehavior",
            "in": "query",
            "description": "Only applicable when setting Status parameter to `paused`. Possible values: `skip` or `silence`. `skip` will result in no recording at all during the pause period. `silence` will replace the actual audio of the call with silence during the pause period.  Defaults to `silence`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The conference Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The conference Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The recording Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a connect-app",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The connect-app Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a connect-app with the specified parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AuthorizeRedirectUrl",
            "in": "query",
            "description": "The URL the user's browser will redirect to after Twilio authenticates the user and obtains authorization for this Connect App.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "The company name set for this Connect App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeauthorizeCallbackMethod",
            "in": "query",
            "description": "The HTTP method to be used when making a request to the `DeauthorizeCallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "DeauthorizeCallbackUrl",
            "in": "query",
            "description": "The URL to which Twilio will send a request when a user de-authorizes this Connect App.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "A more detailed human readable description of the Connect App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the Connect App, with maximum length 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HomepageUrl",
            "in": "query",
            "description": "The public URL where users can obtain more information about this Connect App.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "description": "A comma-separated list of permssions you will request from users of this ConnectApp.  Valid permssions are `get-all` or `post-all`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of incoming-phone-numbers belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this phone number.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show the incoming phone number resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Only show the incoming phone number resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on the origin, by default, phone numbers of all origin are included. Possible values are either `twilio` or `hosted`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Purchase a phone-number for the account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this phone number.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The Twilio REST API version to use for incoming calls made to this number. If omitted, uses `2010-04-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to the new number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when receiving an incoming SMS message to this number.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to the new number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Do a lookup of a caller's name from the CNAM database and post it to your app. Either `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceFallbackUrl`. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials the new phone number. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EmergencyStatus",
            "in": "query",
            "description": "The configuration status parameter determining whether this phone number is enabled for emergency calling",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "Active",
                "Inactive"
              ]
            }
          },
          {
            "name": "EmergencyAddressSid",
            "in": "query",
            "description": "The 34 character sid of the EmergencyAddress configuration to leverage emergency calling for this phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TrunkSid",
            "in": "query",
            "description": "The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceReceiveMode",
            "in": "query",
            "description": "The configuration parameter for this phone number to receive incoming voice calls or faxes. Must be either `fax` or `voice`. Defaults to `voice`",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "voice",
                "fax"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Add-on installations currently assigned to this Number.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Assign an Add-on installation to the Number specified.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "InstalledAddOnSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Add-on installation.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Add-on installation currently assigned to this Number.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Installed Add-on Sid that uniquely identifies the assignment",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Remove the assignment of an Add-on installation from the Number specified.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Installed Add-on Sid that uniquely identifies the assignment to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Extensions for the Assigned Add-on.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignedAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Extension for the Assigned Add-on.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ResourceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignedAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Extension Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show the incoming phone number resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Only show the incoming phone number resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on the origin, by default, phone numbers of all origin are included. Possible values are either `twilio` or `hosted`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number you want to purchase. The number should be formatted starting with a '+' followed by the country code and the number in [E.164](http://en.wikipedia.org/wiki/E.164) format e.g., '+15105555555'. **You must include either this or an `AreaCode` parameter to have your POST succeed.**",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The Twilio REST API version to use for incoming calls made to this number. If omitted, uses `2010-04-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the new incoming phone number. Maximum 64 characters. Defaults to a formatted version of the number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to the new number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody sends an SMS to the phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to the new number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Do a lookup of a caller's name from the CNAM database and post it to your app. Either `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceFallbackUrl`. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML at `Url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials the new phone number. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The 34 character sid of the address Twilio should associate with the number.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show the incoming phone number resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Only show the incoming phone number resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on the origin, by default, phone numbers of all origin are included. Possible values are either `twilio` or `hosted`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number you want to purchase. The number should be formatted starting with a '+' followed by the country code and the number in [E.164](http://en.wikipedia.org/wiki/E.164) format e.g., '+15105555555'. **You must include either this or an `AreaCode` parameter to have your POST succeed.**",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The Twilio REST API version to use for incoming calls made to this number. If omitted, uses `2010-04-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the new incoming phone number. Maximum 64 characters. Defaults to a formatted version of the number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to the new number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody sends an SMS to the phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to the new number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Do a lookup of a caller's name from the CNAM database and post it to your app. Either `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceFallbackUrl`. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML at `Url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials the new phone number. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The 34 character sid of the address Twilio should associate with the number.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Include phone numbers new to the Twilio platform. Possible values are either `true` or `false`. Default is `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show the incoming phone number resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Only show the incoming phone number resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on the origin, by default, phone numbers of all origin are included. Possible values are either `twilio` or `hosted`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number you want to purchase. The number should be formatted starting with a '+' followed by the country code and the number in [E.164](http://en.wikipedia.org/wiki/E.164) format e.g., '+15105555555'. **You must include either this or an `AreaCode` parameter to have your POST succeed.**",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The Twilio REST API version to use for incoming calls made to this number. If omitted, uses `2010-04-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the new incoming phone number. Maximum 64 characters. Defaults to a formatted version of the number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to the new number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody sends an SMS to the phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to the new number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Do a lookup of a caller's name from the CNAM database and post it to your app. Either `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceFallbackUrl`. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML at `Url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `VoiceUrl`. Must be either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody dials the new phone number. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The 34 character sid of the address Twilio should associate with the number.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of medias belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "Only show media created on the given date. Should be formatted as `YYYY-MM-DD`. You can also specify inequality, such as `DateCreated<=YYYY-MM-DD` for media generated at or before midnight on a date, and `DateCreated>=YYYY-MM-DD` for media generated at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete media from your account. Once delete, you will no longer be billed",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The media Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a single media instance belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The media Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of members in the queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The Queue in which to query the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific members of the queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The Queue in which to find the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Dequeue a member from a queue and have the member's call begin executing the TwiML document at that URL",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The Queue in which to find the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Send a message from the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The destination phone number for SMS/MMS or a [Channel user address](https://www.twilio.com/docs/sms/channels#channel-addresses) for other 3rd party channels. Destination phone numbers should be formatted with a '+' and country code e.g., `+16175551212` ([E.164](https://www.twilio.com/docs/glossary/what-e164) format).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL where Twilio will POST each time your message status changes to one of the following: `queued`, `failed`, `sent`, `delivered`, or `undelivered`. Twilio will POST its [standard request parameters](https://www.twilio.com/docs/sms/twiml#request-parameters) as well as some additional parameters including `MessageSid`, `MessageStatus`, and `ErrorCode`(see more details [below](#statuscallback-request-parameters)). If you include this parameter in addition to a `MessagingServiceSid`, Twilio will override the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/sms/services/api). URLs must contain a valid hostname \u2013 underscores are not allowed.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ApplicationSid",
            "in": "query",
            "description": "Twilio will POST a `MessageSid` as well as `MessageStatus=sent` or `MessageStatus=failed` to the URL in the `MessageStatusCallback` property of this [application](https://www.twilio.com/docs/usage/api/applications). If the `StatusCallback` parameter is also passed, the application's `MessageStatusCallback` parameter will take precedence.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MaxPrice",
            "in": "query",
            "description": "The total maximum price up to the fourth decimal (0.0001) in US dollars acceptable for the message to be delivered. *All messages will be queued for delivery regardless of the price point.* A POST request will later be made to your Status Callback URL with a status change of `Sent` or `Failed`. When the price of the message is greater than this value, the message will fail and not be sent. When `MaxPrice` is not set, all prices for the message are accepted.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "ProvideFeedback",
            "in": "query",
            "description": "Set this value to `true` if you are sending messages that have a trackable user action and you intend to confirm delivery of the message using the [Message Feedback API](https://www.twilio.com/docs/sms/api/message-feedback). This parameter is `false` by default.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ValidityPeriod",
            "in": "query",
            "description": "The number of seconds that the message can remain in a Twilio queue. After exceeding this time limit, the message will fail and a POST request will later be made to your Status Callback URL. Valid values are between 1 and 14400 seconds (the default). Please note that Twilio cannot guarantee that a message will not be queued by the carrier after they accept the message. We do not recommend setting validity periods of less than 5 seconds.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MaxRate",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ForceDelivery",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProviderSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ContentRetention",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "retain",
                "discard"
              ]
            }
          },
          {
            "name": "AddressRetention",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "retain",
                "discard"
              ]
            }
          },
          {
            "name": "SmartEncoded",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InteractiveData",
            "in": "query",
            "description": "A JSON string that represents interactive message which is a category of messages including list picker, time picker, and an Apple Pay request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of messages belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Only show messages to this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Only show messages from this phone number or alphanumeric sender ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateSent",
            "in": "query",
            "description": "Only show messages sent on this date (in [GMT](https://en.wikipedia.org/wiki/Greenwich_Mean_Time) format), given as `YYYY-MM-DD`. Example: `DateSent=2009-07-06`. You can also specify inequality, such as `DateSent<=YYYY-MM-DD` for messages that were sent on or before midnight on a date, and `DateSent>=YYYY-MM-DD` for messages sent on or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Deletes a message record from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The message sid that uniquely identifies the message to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a message belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The message Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "To redact a message-body from a post-flight message record, post to the message instance resource with an empty body",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The message to redact",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The text of the message you want to send, limited to 1600 characters.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Outcome",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "confirmed",
                "umconfirmed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of notifications belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Log",
            "in": "query",
            "description": "Only show notifications for this log, using the integer log values shown above.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MessageDate",
            "in": "query",
            "description": "Only show notifications for this date. Should be formatted as `YYYY-MM-DD`. You can also specify inequality, such as `MessageDate<=YYYY-MM-DD` for messages logged at or before midnight on a date, and `MessageDate>=YYYY-MM-DD` for messages logged at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a notification belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The notification Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a notification identified by the NotificationSid from an accounts log",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The notification Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to verify. Should be formatted with a '+' and country code e.g., +16175551212 ([E.164](http://en.wikipedia.org/wiki/E.164) format).  Twilio will also accept unformatted US numbers e.g., (415) 555-1212, 415-555-1212.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description for the new caller ID with maximum length 64 characters. Defaults to a nicely formatted version of the number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallDelay",
            "in": "query",
            "description": "The number of seconds, between 0 and 60, to delay before initiating the verification call. Defaults to 0.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Extension",
            "in": "query",
            "description": "Digits to dial after connecting the verification call.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio will request when the verification call ends to notify your app if the verification process was successful or not. See [StatusCallback parameter](https://www.twilio.com/docs/api/voice/outgoing-caller-ids#statuscallback-parameter) below.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the above URL. Defaults to POST.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an outgoing-caller-id belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The outgoing-caller-id Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the caller-id",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The outgoing-caller-id Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of a Caller ID, with maximum length of 64 characters. Defaults to a nicely formatted version of the phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete the caller-id specified from the account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The outgoing-caller-id Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that created this conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The string that uniquely identifies the conference this participant is in.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The `from` phone number that will dial the new conference participant. Values may be a phone number or client id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The phone number, client id, or sip address you are inviting to this conference.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The absolute URL where Twilio should send a webhook with conference event information that you request with the `StatusCallbackEvent` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The method Twilio should use when requesting your `StatusCallback` URL. Options are `GET` and `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": "Specifies which conference state changes should generate a webhook to the `StatusCallback` URL. Options are `initiated`, `ringing`, `answered`, and `completed`. To specify multiple values, separate each with a space. Defaults to `completed`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "The number of seconds (integer) that Twilio should allow the phone to ring before assuming there is no answer. Defaults to 60 seconds. Minimum allowed timeout is `5`, max is `600`. Twilio always adds a 5-second timeout buffer to outgoing calls, so if you enter a timeout value of 10 seconds, you will see an actual timeout closer to 15 seconds.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": "Records the agent and their conferences, including downtime between conferences. Values may be `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Specify whether the agent can speak in the conference. Values can be `true` or `false`. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": "Play a notification beep to the conference when this participant joins. Options are `true`, `false`, `onEnter`, or `onExit`. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": "If the conference has not already begun, `true` will start the conference when this participant joins. Specifying `false` will mute the participant and play background music until the conference begins. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": "If `true`, will end the conference when this participant leaves. Defaults to `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": "Specify an absolute URL that hosts music to play before the  conference starts. Defualts to Twilio's standard [hold music](https://www.twilio.com/labs/twimlets/holdmusic).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": "Specify which method, `GET` or `POST`, Twilio should use to request the `WaitUrl` for this conference. Be sure to use `GET` if you are directly requesting static audio files so that Twilio properly caches the files. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": "Allow an agent to hear the state of the outbound call, including ringing or disconnect messages. Can be `true` or `false`. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": "The maximum number of participants within this agent conference. Values can be positive integers from `2`-`10`. Defaults to `10`.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": "Records the conference that this participant is joining. Options are `true`, `false`, `record-from-start`, and `do-not-record`. Deafults to `false`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": "Specify whether to trim leading and trailing silence from your recorded conference audio files. Options are `trim-silence` and `do-not-trim`. Defaults to `trim-silence`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": "The absolute URL Twilio should request with conference events specified in `ConferenceStatusCallbackEvent`. This value is set by the first Participant to join the conference, and subsequent callback URLs will be ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the `ConferenceStatusCallback` URL. Either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": "Specifies which conference state changes should generate a webhook to the URL specified in the `ConferenceStatusCallback` attribute. Available values are `start`, `end`, `join`, `leave`, `mute`, `hold`, and `speaker`. To specify multiple values, separate them with a space. Defaults to `start` and `end`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "Set the recording channels for the final agent/conference recording. Either `mono` or `dual`. Defaults to `mono`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "Specifies the `absolute URL` that Twilio should request when the recording is available if the agent and conference are recorded.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting the `RecordingStatusCallback`. `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": "SIP username used for authenticating.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": "SIP password for authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Specifies the [region](https://support.twilio.com/hc/en-us/articles/223132167-How-global-low-latency-routing-and-region-selection-work-for-conferences-and-Client-calls) where Twilio should mix the recorded audio. Options are `us1`, `ie1`, `de1`, `sg1`, `br1`, `au1`, `jp1`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": "The `absolute URL` Twilio should request when the conference recording is available.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio should use when requesting your recording status callback URL, either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "Specifies which recording state changes should generate a webhook to the URL specified in the `RecordingStatusCallback` attribute. Available values are `in-progress`, `completed`, `failed`. To specify multiple values, separate them with a space. Defaults to `in-progress`, `completed`, `failed`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackEvent",
            "in": "query",
            "description": "Specifies which conference recording state changes should generate a webhook to the URL specified in the `ConferenceRecordingStatusCallback` attribute. Available values are `in-progress`, `completed`, `failed`. To specify multiple values, separate them with a space. Defaults to `in-progress`, `completed`, `failed`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of participants belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that created this conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The string that uniquely identifies the conference this participant is in.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Only return participants that are muted or unmuted. Either `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Hold",
            "in": "query",
            "description": "Only return participants that are on hold or not on hold. Either `true` or `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a participant",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that created this conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The string that uniquely identifies the conference this participant is in.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Participant's unique Call SID.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the properties of this participant",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that created this conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The string that uniquely identifies the conference this participant is in.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID that uniquely identifies this Participant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Specifying `true` will mute the participant, while `false` will un-mute. Anything other than `true` or `false` is interpreted as `false`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Hold",
            "in": "query",
            "description": "Specifying `true` will hold the participant, while `false` will remove them from hold.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HoldUrl",
            "in": "query",
            "description": "The 'HoldUrl' attribute lets you specify a URL for music that plays when a participant is on hold. The URL may be an MP3, a WAV or a TwiML document that uses `<Play>`, `<Say>` or `<Redirect>`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "HoldMethod",
            "in": "query",
            "description": "Specify the HTTP method Twilio should use to request your `HoldUrl`, either `GET` or `POST`. Defaults to `GET`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "AnnounceUrl",
            "in": "query",
            "description": "The 'AnnounceUrl' attribute lets you specify a URL for announcing something to the participant. The URL may return an MP3, a WAV or a TwiML document with `<Play>` or `<Say>`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AnnounceMethod",
            "in": "query",
            "description": "Specify the HTTP method Twilio should use to request your `AnnounceUrl`, either `GET` or `POST`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Kick a participant from a given conference",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that created this conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The string that uniquely identifies the conference this participant is in.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call Sid that uniquely identifies this Participant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of queues belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this queue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxSize",
            "in": "query",
            "description": "The upper limit of calls allowed to be in the queue. The default is 100. The maximum is 5000.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a queue identified by the QueueSid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The queue Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the queue with the new parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the queue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxSize",
            "in": "query",
            "description": "The maximum number of members that can be in the queue at a time",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Remove an empty queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The queue Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of recordings belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "Only show recordings created on the given date. Should be formatted `YYYY-MM-DD`. You can also specify inequality: `DateCreated<=YYYY-MM-DD` will return recordings generated at or before midnight on a given date, and `DateCreated>=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CallSid",
            "in": "query",
            "description": "Only show recordings made during the call indicated by this call SID",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "query",
            "description": "The unique ID for the conference associated with the recording, if the recording is of a conference.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a recording",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique recording SID that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique ID of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this recording.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique recording SID that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of results belonging to the recording",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Add-on result",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The result Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a result and purge all associated Payloads",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The result Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of payloads belonging to the Add-on result",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a result payload",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The paylod Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a payload from the result along with all associated Data",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The payload Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{PayloadSid}/Data.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PayloadSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of short-codes belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Only show the ShortCode resources with friendly names that exactly match this name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShortCode",
            "in": "query",
            "description": "Only show the ShortCode resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a short code",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The short-code Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a short code with the following parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is just the short code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "SMSs to this short code will start a new TwiML session with this API version. Either `2010-04-01` or `2008-08-01`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when receiving an incoming SMS message to this short code.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the `SmsFallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies this credential list resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new IP Access Control List mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies IP Access Control List",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of IP Access Control List mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of an IP Access Control List mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The IP Access Control List Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete an IP Access Control List mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The IP Access Control List Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies this credential list resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of credentials.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credentials.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list to include the created credential.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "description": "The username that will be passed when authenticating SIP requests. The username should be sent in response to Twilio\u2019s challenge of the initial INVITE. It can be up to 32 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg \u201cIWasAtSignal2018\u201d)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a single credential.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credential.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that includes this credential.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to update.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg \u201cIWasAtSignal2018\u201d)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credentials.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Get All Credential Lists",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text that describes the CredentialList, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Get a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for a CredentialList, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The credential list Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a CredentialListMapping resource for an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP Domain for which the CredentialList resource will be mapped.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the CredentialList resource to map to the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Read multiple CredentialListMapping resources from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to read.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a single CredentialListMapping resource from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a CredentialListMapping resource from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of domains belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text, up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL Twilio will request when this domain receives a call.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above Url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by VoiceUrl.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the VoiceFallbackUrl. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the StatusCallback URL. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipRegistration",
            "in": "query",
            "description": "This boolean can be enabled to allow SIP Endpoints to register with this domain to receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The domain sid that uniquely identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the attributes of a domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The domain sid that uniquely identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text, up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the VoiceFallbackUrl. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by VoiceUrl.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method to use with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the StatusCallback URL. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL Twilio will request when this domain receives a call.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SipRegistration",
            "in": "query",
            "description": "This boolean can be enabled to allow SIP Endpoints to register with this domain to receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\".",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete an instance of a Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP domain in Twilio.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of IpAccessControlLists that belong to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new IpAccessControlList resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text that describes the IpAccessControlList, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of an IpAccessControlList",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Rename an IpAccessControlList",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to udpate.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete an IpAccessControlList from the requested account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "The unique id of the IP access control list to map to the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of IpAccessControlListMapping resources.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the SIP domain.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Read multiple IpAddress resources.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to read.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid with which to associate the created IpAddress resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Read one IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the IpAddress resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to update.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that identifies the IpAddress resource to update.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete an IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the [Account](https://www.twilio.com/docs/api/rest/account) responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Regions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Feature",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ApplicationSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ProvideFeedback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateSent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Tokens.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new token",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "The duration in seconds for which the generated credentials are valid, the default value is 86400 (24 hours).",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of transcriptions belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a Transcription",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID that identifies this Transcription",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a transcription from the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID that identifies this Transcription",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of usage-records belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The Account that accrued the usage.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "`true` to include usage from the master account and all subaccounts. `false` to only retrieve usage from the specified account. `IncludeSubaccounts` is `true` by default.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The category of usage.  See [Usage Categories](https://www.twilio.com/docs/api/rest/usage-records#usage-categories) below.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Only include usage of this [usage category](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `StartDate=-30days` will make `StartDate` be 30 days before today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.  Format is YYYY-MM-DD.  All dates are in GMT.  As a convenience, you can also specify offsets to today.  For example, `EndDate=+30days` will make `EndDate` be 30 days from today.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new UsageTrigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this url when the trigger fires.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "TriggerValue",
            "in": "query",
            "description": "The trigger will fire when usage reaches this value.  For convenience, you can use an offset like `+30`, which tells Twilio to create the UsageTrigger with its TriggerValue 30 units higher than the current usage. (just be sure to urlencode the `+` as `%2B`).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UsageCategory",
            "in": "query",
            "description": "The trigger will watch this usage category.  One of the supported [usage categories](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "Twilio will use this HTTP method when making a request to the CallbackUrl.  `GET` or `POST`.  The default is `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the new trigger.  Maximum 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Recurring",
            "in": "query",
            "description": "How this trigger recurs. Empty for non-recurring triggers. One of `daily`, `monthly`, or `yearly` for recurring triggers.  A trigger will only fire once during each recurring period.  Recurring periods are in GMT.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          {
            "name": "TriggerBy",
            "in": "query",
            "description": "The field in the [UsageRecord](https://www.twilio.com/docs/api/rest/usage-records) that will fire the trigger.  One of `count`, `usage`, or `price` as described in the [UsageRecords documentation](https://www.twilio.com/docs/api/rest/usage-records#usage-count-price).  The default is `usage`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "count",
                "usage",
                "price"
              ]
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of usage-triggers belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Recurring",
            "in": "query",
            "description": "Only show UsageTriggers that count over this interval.  One of `daily`, `monthly`, or `yearly`.  To retrieve non-recurring triggers, leave this empty or use `alltime`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          {
            "name": "TriggerBy",
            "in": "query",
            "description": "Only show UsageTriggers that trigger by this field in the UsageRecord.  Must be one of: `count`, `usage`, or `price` as described in the [UsageRecords documentation](https://www.twilio.com/docs/api/rest/usage-records#usage-count-price).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "count",
                "usage",
                "price"
              ]
            }
          },
          {
            "name": "UsageCategory",
            "in": "query",
            "description": "Only show UsageTriggers that watch this usage category.  Must be one of the supported [usage categories](https://www.twilio.com/docs/api/rest/usage-records#usage-categories).",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch and instance of a usage-trigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The usage-trigger Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an instance of a usage trigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making a request to the CallbackUrl.  `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this url when the trigger fires.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-specified, human-readable name for the trigger.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{FactorSid}/Challenges": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Challenge for the Factor",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FactorSid",
            "in": "path",
            "description": "The unique SID identifier of the Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExpirationDate",
            "in": "query",
            "description": "The future date in which this Challenge will expire, given in ISO 8601 format (https://en.wikipedia.org/wiki/ISO_8601).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "description": "Details provided to give context about the Challenge. Shown to the end user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HiddenDetails",
            "in": "query",
            "description": "Details provided to give context about the Challenge. Not shown to the end user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{FactorSid}/Challenges/{Sid}": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete a specific Challenge.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FactorSid",
            "in": "path",
            "description": "The unique SID identifier of the Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Challenge.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a specific Challenge.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FactorSid",
            "in": "path",
            "description": "The unique SID identifier of the Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Challenge. It also allows the keyword `latest` to fetch the most recent active Challenge created for a Factor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Verify a specific Challenge.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FactorSid",
            "in": "path",
            "description": "The unique SID identifier of the Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Challenge. It also allows the keyword `latest` to fetch the most recent active Challenge created for a Factor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AuthPayload",
            "in": "query",
            "description": "The optional payload needed to verify the Challenge. E.g., a TOTP would use the numeric code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Entity for the Service",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Customer unique identity for the Entity of the Service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Entities for a Service.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete a specific Entity.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity of the Service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a specific Entity.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity of the Service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Factor for the Entity",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Binding",
            "in": "query",
            "description": "A unique binding for this Factor that identifies it. E.g. a phone number for `sms` factors. Required when creating a new Factor. This value is never returned because it can contain customer secrets.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The friendly name of this Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FactorType",
            "in": "query",
            "description": "The Type of this Factor. One of `app-push`, `sms`, `totp`, etc.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "app-push",
                "sms",
                "totp"
              ]
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Factors for an Entity.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete a specific Factor.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch a specific Factor.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Factor. This endpoint can be used to Verify a Factor if passed an `AuthPayload` param.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Customer unique identity for the Entity owner of the Factor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Factor.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AuthPayload",
            "in": "query",
            "description": "The optional payload needed to verify the Factor for the first time. E.g. for a TOTP, the numeric code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Forms/{FormType}": {
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the forms for a specific Form Type.",
        "parameters": [
          {
            "name": "FormType",
            "in": "path",
            "description": "The Type of this Form. One of `form-app-push`, `form-sms` or `form-totp`.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "form-app-push",
                "form-sms",
                "form-totp"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services": {
      "servers": [
        {
          "url": "https://verify.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Verification Service.",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A 1-64 character string with friendly name of service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeLength",
            "in": "query",
            "description": "The length of the verification code to be generated. Must be an integer value between 4-10",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "LookupEnabled",
            "in": "query",
            "description": "Boolean value that indicates if a lookup should be performed with each verification started and associated info returned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SkipSmsToLandlines",
            "in": "query",
            "description": "Boolean value that indicates whether or not to ignore SMS verifications for landlines, depends on lookup_enabled flag",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DtmfInputRequired",
            "in": "query",
            "description": "Boolean value that indicates whether or not to require a random number input to deliver the verify code via phone calls",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TtsName",
            "in": "query",
            "description": "Alternative to be used as Service friendly name in phone calls, only applies to TTS languages",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Phone Verification Services for an account.",
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Services/{Sid}": {
      "servers": [
        {
          "url": "https://verify.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch specific Verification Service Instance.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of Verification Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Verification Service Instance.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of Verification Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Phone Verification Service.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A 1-64 character string with friendly name of service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeLength",
            "in": "query",
            "description": "The length of the verification code to be generated. Must be an integer value between 4-10",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "LookupEnabled",
            "in": "query",
            "description": "Boolean value that indicates if a lookup should be performed with each verification started and associated info returned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SkipSmsToLandlines",
            "in": "query",
            "description": "Boolean value that indicates whether or not to ignore SMS verifications for landlines, depends on lookup_enabled flag",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DtmfInputRequired",
            "in": "query",
            "description": "Boolean value that indicates whether or not to require a random number input to deliver the verify code via phone calls",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TtsName",
            "in": "query",
            "description": "Alternative to be used as Service friendly name in phone calls, only applies to TTS languages",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A text description for the Assistant. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LogQueries",
            "in": "query",
            "description": "A boolean that specifies whether queries should be logged for 30 days past training. If `false`, no queries will be stored. If `true`, queries will be stored for 30 days and deleted thereafter. Defaults to `true` if no value is provided.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path when addressing this resource. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallbackEvents",
            "in": "query",
            "description": "A space-separated list of callback events that will trigger callbacks",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "A JSON object that defines the assistant [style sheet](https://www.twilio.com/docs/autopilot/api/assistant/stylesheet)",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Defaults",
            "in": "query",
            "description": "A JSON object that defines the assistant's [default tasks](https://www.twilio.com/docs/autopilot/api/assistant/defaults) for various scenarios, including initation actions and fallback tasks.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A text description for the Assistant. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LogQueries",
            "in": "query",
            "description": "A boolean that specifies whether queries should be logged for 30 days past training. If `false`, no queries will be stored. If `true`, queries will be stored for 30 days and deleted thereafter. Defaults to `true` if no value is provided.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path when addressing this resource. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallbackEvents",
            "in": "query",
            "description": "A space-separated list of callback events that will trigger callbacks",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "A JSON object that defines the assistant [style sheet](https://www.twilio.com/docs/autopilot/api/assistant/stylesheet)",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Defaults",
            "in": "query",
            "description": "A JSON object that defines the assistant's [default tasks](https://www.twilio.com/docs/autopilot/api/assistant/defaults) for various scenarios, including initation actions and fallback tasks.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Defaults": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Defaults",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Dialogues": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ]
    },
    "/v1/Assistants/{AssistantSid}/Dialogues/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldType",
            "in": "query",
            "description": "The Field Type of this field. It can be either a [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or sid of a custom Field Type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/FieldTypes": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/FieldTypes/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "The unique ID of the Field Type associated with this Field Value",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string that specifies the language used for this field value. For example: en-US",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "The unique ID of the Field Type associated with this Field Value",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string that specifies the language used for this field value. For example: en-US",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Value",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SynonymOf",
            "in": "query",
            "description": "A string value that indicates which word this field value is a synonym of.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "The unique ID of the Field Type associated with this Field Value",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "The unique ID of the Field Type associated with this Field Value",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/ModelBuilds": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Queries": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An [ISO language-country string](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) that specifies the language used for this query. For example: `en-US`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ModelBuild",
            "in": "query",
            "description": "The Sid or unique name of the [Model Build](https://www.twilio.com/docs/autopilot/api/model-build) to be queried.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string that described the query status. The values can be: `pending_review`, `reviewed`, `discarded`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An [ISO language-country string](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) that specifies the language used for this query. For example: `en-US`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tasks",
            "in": "query",
            "description": "Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated *task-unique-name-1*, *task-unique-name-2*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ModelBuild",
            "in": "query",
            "description": "The Sid or unique name of the [Model Build](https://www.twilio.com/docs/autopilot/api/model-build) to be queried.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Queries/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SampleSid",
            "in": "query",
            "description": "An optional reference to the Sample created from this query.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string that described the query status. The values can be: `pending_review`, `reviewed`, `discarded`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An [ISO language-country string](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) that specifies the language used for this sample. For example: `en-US`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An [ISO language-country string](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) that specifies the language used for this sample. For example: `en-US`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaggedText",
            "in": "query",
            "description": "The text example of how end-users may express this task. The sample may contain [Field tag blocks](https://www.twilio.com/docs/autopilot/api/task-sample#field-tagging).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceChannel",
            "in": "query",
            "description": "The communication channel from which the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included, the value will be `null`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An [ISO language-country string](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) that specifies the language used for this sample. For example: `en-US`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaggedText",
            "in": "query",
            "description": "The text example of how end-users may express this task. The sample may contain [Field tag blocks](https://www.twilio.com/docs/autopilot/api/task-sample#field-tagging).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceChannel",
            "in": "query",
            "description": "The communication channel from which the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included, the value will be `null`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/StyleSheet": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": "Returns Style sheet JSON object for this Assistant",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the style sheet for an assistant identified by {AssistantSid} or {AssistantUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "The JSON Style sheet string",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "ActionsUrl",
            "in": "query",
            "description": "User-provided HTTP endpoint where the assistant can fetch actions.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{Sid}": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can be up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path when addressing this resource. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "ActionsUrl",
            "in": "query",
            "description": "User-provided HTTP endpoint where the assistant can fetch actions.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34-character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Actions": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": "Returns JSON actions for this Task.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "The JSON [actions](https://www.twilio.com/docs/autopilot/actions) that instruct the Assistant how to perform this task.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Statistics": {
      "servers": [
        {
          "url": "https://autopilot.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the [Task](https://www.twilio.com/docs/autopilot/api/task).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel. Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.  Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional metadata field you can use to store any data you wish. No processing or validation is done on this field.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel - `public` or `private`. Defaults to `public`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "public",
                "private"
              ]
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "public",
                  "private"
                ]
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel. Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.  Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional metadata field you can use to store any data you wish. No processing or validation is done on this field.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Credentials/{Sid}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate. Strip everything outside of the headers, e.g. `-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==-----END CERTIFICATE-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key. Strip everything outside of the headers, e.g. `-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\n.-----END RSA PRIVATE KEY-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs (string `true` or `false`)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging. Yes, you can use the server key from the Firebase console for GCM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/v1/user) in this [Service](https://www.twilio.com/docs/api/chat/rest/v1/service). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)[/docs/api/chat/guides/create-tokens] docs for more details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The [Role](https://www.twilio.com/docs/api/chat/rest/v1/role) assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/v1/user) in this [Service](https://www.twilio.com/docs/api/chat/rest/v1/service). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)[/docs/api/chat/guides/create-tokens] docs for more details.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/v1/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/v1/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)[/docs/api/chat/guides/create-tokens] docs for more details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The [Role](https://www.twilio.com/docs/api/chat/rest/v1/roles) assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/v1/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/v1/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)[/docs/api/chat/guides/create-tokens] docs for more details.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The [Role](https://www.twilio.com/docs/api/chat/rest/v1/roles) assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "An Integer representing index of the last [Message](https://www.twilio.com/docs/api/chat/rest/v1/messages) this Member has read within this [Channel](https://www.twilio.com/docs/api/chat/rest/v1/channels)",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The new message body string. You can also send structured data by serializing it into a string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "The new attributes metadata field you can use to store any data you wish.  The string value must contain structurally valid JSON if specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Roles": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The human-readable name of this role.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "What kind of role this is. Either `channel` for [Channel](https://www.twilio.com/docs/api/chat/rest/v1/channel) roles or `deployment` for [Service](https://www.twilio.com/docs/api/chat/rest/v1/services) roles.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "channel",
                "deployment"
              ]
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "(multiple) A permission this role should have. Consult the table above for the list of possible permissions.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "(multiple) A permission this role should have. Consult the table above for the list of possible permissions.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The identifier of the User, defined by your application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Segment",
            "in": "query",
            "description": "The list of segments this User belongs to. Segments can be used to select recipients of a notification. Maximum 20 Segments per User allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The identifier of the User, defined by your application.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Segment",
            "in": "query",
            "description": "The list of segments this User belongs to. Segments can be used to select recipients of a notification. Maximum 20 Segments per User allowed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The unique id of the [Role][role] assigned to this user.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string used to contain any metadata or other information for the User.  The string must contain structurally valid JSON if specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "An optional human readable string representing the user.  Often used for display purposes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Bindings": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The push technology used for the returned Bindings.  Supported values are apn, gcm and fcm.  See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more information.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "gcm",
                  "apn",
                  "fcm"
                ]
              }
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this channel belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel. Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.  Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel - `public` or `private`. Defaults to `public`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "public",
                "private"
              ]
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The optional ISO8601 time specifying the datetime the Channel should be set as being created.  Will be set to the current time by the Chat service if not specified.  Note that this should only be used in cases where a a Channel is being recreated from a backup/separate source",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The optional ISO8601 time specifying the datetime the Channel should be set as having been last updated.  Will be set to the `null` by the Chat service if not specified.  Note that this should only be used in cases where a Channel is being recreated from a backup/separate source  and where a Message was previously updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "description": "Optional field to specify the Identity of the User that created the Channel.  Will be set to \"system\" if not specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) channel belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel - `public` or `private`. Defaults to `public`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "public",
                  "private"
                ]
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) channel belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the channel to fetch. Could be Sid or UniqueName.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) channel belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the channel to delete. Could be Sid or UniqueName.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this channel belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the channel to fetch. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel. Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.  Optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The optional ISO8601 time specifying the datetime the Channel should be set as being created.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The optional ISO8601 time specifying the datetime the Channel should be set as having been last updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "description": "Optional field to specify the Identity of the User that created the Channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "webhook",
                "trigger",
                "studio"
              ]
            }
          },
          {
            "name": "Configuration.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "GET",
                "POST"
              ]
            }
          },
          {
            "name": "Configuration.filters",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.triggers",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.flowSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.retryCount",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "GET",
                "POST"
              ]
            }
          },
          {
            "name": "Configuration.filters",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.triggers",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.flowSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.retryCount",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Credentials": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Credential type, one of \"gcm\", \"fcm\", or \"apn\"",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate, e.g.\n`-----BEGIN CERTIFICATE-----\nMIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==\n-----END CERTIFICATE-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key, e.g.\n`-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.\n-----END RSA PRIVATE KEY-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs (string `true` or `false`)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"API key\" for project from Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Credentials/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate, e.g.\n`-----BEGIN CERTIFICATE-----\nMIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==\n-----END CERTIFICATE-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key, e.g.\n`-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.\n-----END RSA PRIVATE KEY-----`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs (string `true` or `false`)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"API key\" for project from Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] This is the \"Server key\" of your project from Firebase console under Settings / Cloud messaging.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) docs for more details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) docs for more details.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this member belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this member belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) docs for more details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The role to be assigned to this member. Defaults to the roles specified on the [Service](https://www.twilio.com/docs/chat/api/services).",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "Field used to specify the last consumed Message index for the Channel for this Member.  Should only be used when recreating a Member from a backup/separate source.",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "LastConsumptionTimestamp",
            "in": "query",
            "description": "ISO8601 time indicating the last datetime the Member consumed a Message in the Channel.  Should only be used when recreating a Member from a backup/separate source",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Members should be set as being created.  Will be set to the current time by the Chat service if not specified.  Note that this should only be used in cases where a Member is being recreated from a backup/separate source",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Member should be set as having been last updated.  Will be set to the `null` by the Chat service if not specified.  Note that this should only be used in cases where a Member is being recreated from a backup/separate source  and where a Member was previously updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this member belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this member belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this [User](https://www.twilio.com/docs/api/chat/rest/users) in this [Service](https://www.twilio.com/docs/api/chat/rest/services). See the [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) docs for more details.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this member belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this member belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the member to fetch. Could be Member Sid or Identity",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this member belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this member belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the member to delete. Could be Member Sid or Identity",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this member belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this member belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the member to update. Could be Member Sid or User Identity.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The role to be assigned to this member. Defaults to the roles specified on the [Service](https://www.twilio.com/docs/chat/api/services).",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "Field used to specify the last consumed Message index for the Channel for this Member.  Should only be used when recreating a Member from a backup/separate source.",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "LastConsumptionTimestamp",
            "in": "query",
            "description": "ISO8601 time indicating the last datetime the Member consumed a Message in the Channel.  Should only be used when recreating a Member from a backup/separate source",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Members should be set as being created.  Will be set to the current time by the Chat service if not specified.  Note that this should only be used in cases where a Member is being recreated from a backup/separate source",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Member should be set as having been last updated.  Will be set to the `null` by the Chat service if not specified.  Note that this should only be used in cases where a Member is being recreated from a backup/separate source  and where a Member was previously updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this message belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this message belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the message's author. Defaults to `system`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified. **Note** that this will always be null for resources returned via LIST GET operations, but will be present for single GET operations.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Message should be set as being created. Will be set to the current time by the Chat service if not specified.  Note that this should only be used in cases where a Chat's history is being recreated from a backup/separate source.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Message should be set as having been last updated. Will be set to the `null` by the Chat service if not specified.  Note that this should only be used in cases where a Chat's history is being recreated from a backup/separate source  and where a Message was previously updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastUpdatedBy",
            "in": "query",
            "description": "Specify the Identity of the User that last updated the Message (if relevant)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "A string message to send to this channel. You can also send structured data by serializing it into a string. May be empty string or `null`, will be set as empty string as a result in this cases.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaSid",
            "in": "query",
            "description": "The [Media](https://www.twilio.com/docs/api/chat/rest/media) Sid to be attached to this Message.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this message belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this message belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": "Specifies sorting order for messages list, possible values are: `asc` or `desc`. If no value is specified, then `asc` is used as the default.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this message belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) message belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the message to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this message belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this message belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the message to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this message belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "Key of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) this message belongs to. Could be Sid or UniqueName",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the message to update.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The message body string. You can also send structured data by serializing it into a string. May be updated to empty string or `null`, will be set as empty string as a result in this cases.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified. **Note** that this will always be null for resources returned via LIST GET operations, but will be present for single GET operations.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Message should be set as being created.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO8601 time specifying the datetime the Message should be set as having been last updated.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastUpdatedBy",
            "in": "query",
            "description": "Specify the Identity of the User that last updated the Message (if relevant)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the message's author.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Roles": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The human-readable name of this role.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "What kind of role this is. Either `channel` for [Channel](https://www.twilio.com/docs/chat/api/channels) roles or `deployment` for [Service](https://www.twilio.com/docs/api/chat/rest/services) roles.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "channel",
                "deployment"
              ]
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "(multiple) A permission this role should have. Consult the table above for the list of possible permissions.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "(multiple) A permission this role should have. Consult the table above for the list of possible permissions.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human-readable name for this service instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v2/Services/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human-readable name for this service instance",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DefaultServiceRoleSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelRoleSid",
            "in": "query",
            "description": "Channel role assigned on channel join (see [Roles](https://www.twilio.com/docs/chat/api/roles) data model for the details)",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelCreatorRoleSid",
            "in": "query",
            "description": "Channel role assigned to creator of channel when joining for first time",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReadStatusEnabled",
            "in": "query",
            "description": "`true` if the member read status feature is enabled, `false` if not.  Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReachabilityEnabled",
            "in": "query",
            "description": "`true` if the reachability feature should be enabled.  Defaults to `false`",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TypingIndicatorTimeout",
            "in": "query",
            "description": "The duration in seconds indicating the timeout after \"started typing\" event when client should assume that user is not typing anymore even if no \"ended typing\" message received",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConsumptionReportInterval",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Notifications.newMessage.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.newMessage.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.newMessage.sound",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.newMessage.badgeCountEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.addedToChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.addedToChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.addedToChannel.sound",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.removedFromChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.removedFromChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.removedFromChannel.sound",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.invitedToChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.invitedToChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.invitedToChannel.sound",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreWebhookUrl",
            "in": "query",
            "description": "The webhook URL for PRE-Event webhooks. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "PostWebhookUrl",
            "in": "query",
            "description": "The webhook URL for POST-Event webhooks. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WebhookMethod",
            "in": "query",
            "description": "The webhook request format to use.  Must be POST or GET. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "WebhookFilters",
            "in": "query",
            "description": "The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Limits.channelMembers",
            "in": "query",
            "description": "The maximum number of Members that can be added to Channels within this Service.  The maximum allowed value is 1,000",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Limits.userChannels",
            "in": "query",
            "description": "The maximum number of Channels Users can be a Member of within this Service.  The maximum value allowed is 1,000",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Media.compatibilityMessage",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreWebhookRetryCount",
            "in": "query",
            "description": "Count of times webhook will be retried in case of timeout (5 seconds) or 429/503/504 HTTP responses. Default retry count is 0 times.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "PostWebhookRetryCount",
            "in": "query",
            "description": "Count of times webhook will be retried in case of timeout (5 seconds) or 429/503/504 HTTP responses. Default retry count is 0 times.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Notifications.logEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this user belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string that identifies the user within this service - often a username or email address. See the [identity][identity] docs for more details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The unique id of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to this user.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string used to contain any metadata or other information for the User.  The string must contain structurally valid JSON if specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "An optional human readable string representing the user.  Often used for display purposes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) users belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this user belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the user to fetch. Could be Sid or Identity.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this user belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the user to delete. Could be Sid or Identity.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Sid of the [Service](https://www.twilio.com/docs/api/chat/rest/services) this user belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Key that uniquely defines the user to update. Could be Sid or Identity.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The unique id of the [Role][role] assigned to this user.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string used to contain any metadata or other information for the User.  The string must contain structurally valid JSON if specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "An optional human readable string representing the user.  Often used for display purposes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The push technology used for the returned Bindings.  Supported values are apn, gcm and fcm.  See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more information.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "gcm",
                  "apn",
                  "fcm"
                ]
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": "List all Channels for a given User.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique id of the [Service](https://www.twilio.com/docs/api/chat/rest/services) those channels belong to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique id of a User.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels/{ChannelSid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique id of the [Service](https://www.twilio.com/docs/api/chat/rest/services) those channels belong to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique id of a User.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique id of a Channel.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique id of the [Service](https://www.twilio.com/docs/api/chat/rest/services) those channels belong to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique id of a User.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique id of a Channel.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "NotificationLevel",
            "in": "query",
            "description": "Push notification level to be assigned to Channel of the User.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "default",
                "muted"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Faxes": {
      "servers": [
        {
          "url": "https://fax.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all faxes.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "Filters the returned list to only include faxes sent from the supplied number, given in E.164 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Filters the returned list to only include faxes sent to the supplied number, given in E.164 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreatedOnOrBefore",
            "in": "query",
            "description": "Filters the returned list to only include faxes created on or before the supplied date, given in ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Filters the returned list to only include faxes created after the supplied date, given in ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new fax to send to a phone number or SIP endpoint",
        "parameters": [
          {
            "name": "To",
            "in": "query",
            "description": "The phone number or SIP address to send the fax to, E.164-formatted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaUrl",
            "in": "query",
            "description": "The HTTP or HTTPS URL where the fax media PDF resides that Twilio will make a GET request to. (See our [security](https://www.twilio.com/docs/security) page for information on how to ensure the request for your media comes from Twilio)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Quality",
            "in": "query",
            "description": "A [quality value](https://www.twilio.com/docs/api/fax/rest/faxes#fax-quality-values), which defaults to `fine`",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "standard",
                "fine",
                "superfine"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A [status callback](https://www.twilio.com/docs/api/fax/rest/faxes#fax-status-callback) URL that will receive a POST when the status of the fax changes",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The phone number to use as the caller id, E.164-formatted. If using a phone number, it must be a Twilio number or a verified outgoing caller id for your account. If sending to a SIP address, this can be any alphanumeric string (plus the characters `+`, `_`, `.`, and `-`) to use in the From header of the SIP request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": "The username to use for authentication when sending to a SIP address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": "The password to use for authentication when sending to a SIP address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StoreMedia",
            "in": "query",
            "description": "Whether or not to store a copy of the sent media on Twilio's servers for later retrieval (defaults to `true`)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "How many minutes from when a fax was initiated should Twilio attempt to send a fax.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Faxes/{Sid}": {
      "servers": [
        {
          "url": "https://fax.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific fax.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific fax.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The updated status of this fax. The only valid option is `canceled`. This may fail if the status has already started transmission.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "canceled"
              ]
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific fax and its associated media.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Faxes/{FaxSid}/Media": {
      "servers": [
        {
          "url": "https://fax.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all fax media instances for the specified fax.",
        "parameters": [
          {
            "name": "FaxSid",
            "in": "path",
            "description": "The unique SID identifier of the fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Faxes/{FaxSid}/Media/{Sid}": {
      "servers": [
        {
          "url": "https://fax.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific fax media instance.",
        "parameters": [
          {
            "name": "FaxSid",
            "in": "path",
            "description": "The unique SID identifier of the fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this fax media.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific fax media instance.",
        "parameters": [
          {
            "name": "FaxSid",
            "in": "path",
            "description": "The unique SID identifier of the fax.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this fax media.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Callbacks": {
      "servers": [
        {
          "url": "https://integrations.twilio.com"
        }
      ]
    },
    "/v1/Callbacks/{RequestSid}": {
      "servers": [
        {
          "url": "https://integrations.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "requestSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/PhoneNumbers/{PhoneNumber}": {
      "servers": [
        {
          "url": "https://lookups.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "description": "Optional [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the phone number. This is used to specify the country when the number is provided in a national format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Indicates the type of information you would like returned with your request. Possible values are `carrier` or `caller-name`. If not specified, the default is null.  Carrier information costs $0.005 per phone number looked up.  Caller Name information costs $0.01 per phone number looked up, and is currently ONLY available in the US.  You can retrieve both types of information by including two `Type` arguments or making two separate requests.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddOns",
            "in": "query",
            "description": "Indicates the particular Add-on you would like to use to get more information. Possible values are the *Add-on Unique Names* of Add-ons installed on your account. You can specify multiple instances of this parameter to invoke different Add-ons. See [Add-ons documentation](https://www.twilio.com/docs/api/addons) for information on installing Add-ons. Add-on pricing is available in your list of Installed Add-ons in the Console.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddOnsData",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Alerts": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "LogLevel",
            "in": "query",
            "description": "Only show alerts for this log-level.  One of 'error', 'warning', 'notice', or 'debug'.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only show Alerts on or after this date.  Useful in combination with `EndDate` to define a date-range of Alerts.  Input is a [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC), but time of day is ignored by the filter. Queries for Alerts older than 30 days are not supported.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only show Alerts on or before this date.  Useful in combination with `StartDate` to define a date-range of Alerts.  Input is a [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC), but time of day is ignored by the filter. Queries for Alerts older than 30 days are not supported.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Alerts/{Sid}": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Events": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a list of Events in this account, sorted by event-date.",
        "parameters": [
          {
            "name": "ActorSid",
            "in": "query",
            "description": "Only include Events initiated by this Actor. Useful for auditing actions taken by specific users or API credentials.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EventType",
            "in": "query",
            "description": "Only include Events of this EventType.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResourceSid",
            "in": "query",
            "description": "Only include Events referring to this resource. Useful for discovering the history of a specific resource.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SourceIpAddress",
            "in": "query",
            "description": "Only include Events that originated from this IP address. Useful for tracking suspicious activity originating from the API or the Twilio Console.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only show events on or after this date. Useful in combination with `EndDate` to define a date-range of events. Input is a [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC), but time of day is ignored by the filter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only show events on or before this date. Useful in combination with `StartDate` to define a date-range of events. Input is a [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC), but time of day is ignored by the filter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Events/{Sid}": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this event.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Bindings": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The Identity to which this Binding belongs to. Identity is defined by your application. Up to 20 Bindings can be created for the same Identity in a given Service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The type of the Binding. This determines the transport technology to use. Allowed values: `apn`, `fcm`, `gcm`, `sms`, and `facebook-messenger`.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "apn",
                "gcm",
                "sms",
                "fcm",
                "facebook-messenger",
                "alexa"
              ]
            }
          },
          {
            "name": "Address",
            "in": "query",
            "description": "The address specific to the channel. For APNS it is the device token. For FCM and GCM it is the registration token. For SMS it is a phone number in E.164 format. For Facebook Messenger it is the Messenger ID of the user or a phone number in E.164 format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "description": "The list of tags associated with this Binding. Tags can be used to select the Bindings to use when sending a notification. Maximum 20 tags are allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "NotificationProtocolVersion",
            "in": "query",
            "description": "The version of the protocol (data format) used to send the notification. This defaults to the value of DefaultXXXNotificationProtocolVersion in the [Service](https://www.twilio.com/docs/api/notify/rest/services). The current version is `\"3\"` for `apn`, `fcm`, and `gcm` type Bindings. The parameter is not applicable to `sms` and `facebook-messenger` type Bindings as the data format is fixed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CredentialSid",
            "in": "query",
            "description": "The unique identifier (SID) of the Credential resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applicable only to `apn`, `fcm`, and `gcm` type Bindings.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Endpoint",
            "in": "query",
            "description": "DEPRECATED*",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only list Bindings created on or after the given date. Should be formatted as YYYY-MM-DD. All dates considered in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only list Bindings created on or before the given date. Should be formatted as YYYY-MM-DD. All dates considered in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Only list Bindings that have any of the specified Identities.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "description": "Only list Bindings that have all of the specified Tags. The following implicit tags are available: all, apn, fcm, gcm, sms, facebook-messenger. Maximum 5 tags are allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Notifications": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "(optional for all except Alexa) Indicates the notification body text. Translates to `data.twi_body` for FCM and GCM, `aps.alert.body` for APNS, `Body` for SMS and Facebook Messenger and `request.message.data` for Alexa.  For SMS either this, `body`, or the `media_url` attribute of the `Sms` parameter is required.  For Facebook Messenger either this parameter or the body attribute in the `FacebookMessenger` parameter is required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Two priorities defined: `low` and `high` (default). `low` optimizes the client app's battery consumption, and notifications may be delivered with unspecified delay. This is the same as Normal priority for FCM and GCM or priority 5 for APNS. `high` sends the notification immediately, and can wake up a sleeping device. This is the same as High priority for FCM and GCM or priority 10 for APNS.  This feature is not supported by SMS and Facebook Messenger and will be ignored for deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "high",
                "low"
              ]
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "This parameter specifies how long (in seconds) the notification is valid. Delivery should be attempted if the device is offline. The maximum time to live supported is 4 weeks. The value zero means that the notification delivery is attempted immediately once but not stored for future delivery. The default value is 4 weeks.  This feature is not supported by SMS and Facebook Messenger and will be ignored for deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "(optional for all except Alexa) Indicates the notification title. This field is not visible on iOS phones and tablets but it is on Apple Watch and Android devices. Translates to `data.twi_title` for FCM and GCM, `aps.alert.title` for APNS and `displayInfo.content[0].title`, `displayInfo.content[].toast.primaryText` of `request.message` for Alexa. It is not supported for SMS and Facebook Messenger and will be omitted from deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sound",
            "in": "query",
            "description": "Indicates a sound to be played. Translates to `data.twi_sound` for FCM and GCM and `aps.sound` for APNS.  This parameter is not supported by SMS and Facebook Messenger and is omitted from deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "description": "Specifies the actions to be displayed for the notification. Translates to `data.twi_action` for GCM and `aps.category` for APNS.  This parameter is not supported by SMS and Facebook Messenger and is omitted from deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "This parameter specifies the custom key-value pairs of the notification's payload. Translates to `data` dictionary in FCM and GCM payload. FCM and GCM [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used for those channels. For APNS, attributes of `Data` will be inserted into the APNS payload as custom properties outside of the `aps` dictionary. For Alexa they are added to `request.message.data`. For all channels, the `twi_` prefix is reserved for Twilio for future use. Requests including custom data with keys starting with `twi_` will be rejected as 400 Bad request and no delivery will be attempted.  This parameter is not supported by SMS and Facebook Messenger and is omitted from deliveries via those channels.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Apn",
            "in": "query",
            "description": "APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType. This value is mapped to the Payload item, therefore the `aps` key has to be used to change standard attributes. Adds custom key-value pairs to the root of the dictionary. Refer to [APNS documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html) for more details. The `twi_` key prefix for custom key-value pairs is reserved for Twilio for future use. Custom data with keys starting with `twi_` is not allowed.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Gcm",
            "in": "query",
            "description": "GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.  This value is mapped to the root json dictionary. Refer to [GCM documentation](https://developers.google.com/cloud-messaging/http-server-ref) for more details.  Target parameters `to`, `registration_ids`, and `notification_key` are not allowed. The `twi_` key prefix for custom key-value pairs is reserved for Twilio for future use. Custom data with keys starting with `twi_` is not allowed. FCM and GCM [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used for those channels.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Sms",
            "in": "query",
            "description": "SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.  Each attribute in this JSON object is mapped to the corresponding form parameter of the Twilio [Message](https://www.twilio.com/docs/api/rest/sending-messages) resource.  The following parameters of the Message resource are supported in snake case format: `body`, `media_urls`, `status_callback`, and `max_price`.  The `status_callback` parameter overrides the corresponding parameter in the messaging service if configured. The `media_urls` expects a JSON array.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "FacebookMessenger",
            "in": "query",
            "description": "Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.  This value is mapped to the root json dictionary of Facebook's [Send API request](https://developers.facebook.com/docs/messenger-platform/send-api-reference).  Overriding the `recipient` parameter is not allowed.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Fcm",
            "in": "query",
            "description": "FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.  This value is mapped to the root json dictionary. Refer to [FCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref#downstream) for more details.  Target parameters `to`, `registration_ids`, `condition`, and `notification_key` are not allowed. The `twi_` key prefix for custom key-value pairs is reserved for Twilio for future use. Custom data with keys starting with `twi_` is not allowed. Custom data with keys starting with `twi_` is not allowed. FCM and GCM [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used for those channels.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Segment",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Alexa",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "ToBinding",
            "in": "query",
            "description": "The destination address in a JSON object (see attributes below).  Multiple ToBinding parameters can be included but the total size of the request entity should not exceed 1MB. This is typically sufficient for 10,000 phone numbers. ",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Notifications/{Sid}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ]
    },
    "/v1/Services/{ServiceSid}/Segments": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/SegmentMemberships": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Segment",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/SegmentMemberships/{Segment}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Segment",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Segment",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/Bindings": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "apn",
                "gcm",
                "sms",
                "fcm",
                "facebook-messenger",
                "alexa"
              ]
            }
          },
          {
            "name": "Address",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "NotificationProtocolVersion",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CredentialSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Endpoint",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/HostedNumber/AuthorizationDocuments": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this AuthorizationDocument. One of `opened`, `signing`, `signed`, `canceled`, or `failed`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.",
        "parameters": [
          {
            "name": "AddressSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ContactPhoneNumber",
            "in": "query",
            "description": "E164 formatted phone number of the contact person that will be signing the AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactTitle",
            "in": "query",
            "description": "Formal title of the contact person that will be signing the AuthorizationDocument. For example, `Mr`, `Product Manager`, or `Marketing Director`, etc.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HostedNumberOrderSids",
            "in": "query",
            "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "Optional. A list of emails that this AuthorizationDocument will be carbon copied to.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/HostedNumber/AuthorizationDocuments/{Sid}": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "A list of emails that this AuthorizationDocument will be carbon copied to.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HostedNumberOrderSids",
            "in": "query",
            "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this AuthorizationDocument. User can only update this to `opened` when AuthorizationDocument is in `signing`, or `signing` when AuthorizationDocument is in `opened`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete the AuthorizationDocument and remove any associations with HostedNumberOrders.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/HostedNumber/AuthorizationDocuments/{SigningDocumentSid}/DependentOrders": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "SigningDocumentSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 128 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status of this HostedNumberOrder. One of `twilio-processing`, `received`, `pending-verification`, `verified`, `pending-loa`, `carrier-processing`, `testing`, `completed`, `failed`, or `action-required`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/HostedNumber/Orders": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 128 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status of this HostedNumberOrder. One of `twilio-processing`, `received`, `pending-verification`, `verified`, `pending-loa`, `carrier-processing`, `testing`, `completed`, `failed`, or `action-required`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Host a phone number's capability on Twilio's platform.",
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsCapability",
            "in": "query",
            "description": "Used to specify that the SMS capability will be hosted on Twilio's platform.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "Optional. A 34 character string that uniquely identifies the Account.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Optional. A human readable description of this resource, up to 128 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "Optional. The 34 character string that uniquely identifies the Application Twilio should use to handle SMS messages sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "Optional. The SMS Fallback Method attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "Optional. The SMS Fallback URL attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "Optional. The SMS Method attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "Optional. The SMS URL attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "Optional. The Status Callback Method attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackUrl",
            "in": "query",
            "description": "Optional. The Status Callback URL attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VerificationCallDelay",
            "in": "query",
            "description": "Optional. A value between 0-60 specifying the number of seconds to delay initiating the ownership verification call.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "VerificationCallExtension",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VerificationDocumentSid",
            "in": "query",
            "description": "Optional. A 34 character string that uniquely identifies the Identity Document resource that represents the document for verifying ownership of the number to be hosted.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VerificationType",
            "in": "query",
            "description": "Optional. The method used for verifying ownership of the number to be hosted. One of `phone-call` (default) or `phone-bill`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/HostedNumber/Orders/{Sid}": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Cancel the HostedNumberOrder (only available when the status is in `twilio-processing`, `received`, `pending-verification`, `verified`, and `pending-loa`).",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Optional. A human readable description of this resource, up to 128 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Optional. The status of this HostedNumberOrder. User can only update this to `pending-verification`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          {
            "name": "VerificationCallDelay",
            "in": "query",
            "description": "Optional. A value between 0-60 specifying the number of seconds to delay initiating the ownership verification call.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "VerificationCallExtension",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VerificationDocumentSid",
            "in": "query",
            "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is `phone-bill`.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VerificationType",
            "in": "query",
            "description": "Optional. The method used for verifying ownership of the number to be hosted. One of `phone-call` (default) or `phone-bill`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/BulkExports/Exports/{ResourceType}/Days": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ResourceType",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/BulkExports/Exports/{ResourceType}/Days/{Day}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ResourceType",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Day",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/BulkExports/Exports": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/BulkExports/Exports/{ResourceType}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ResourceType",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/BulkExports/Exports/{ResourceType}/Configuration": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ResourceType",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ResourceType",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WebhookUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WebhookMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Certificates": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Enroll a new Certificate credential to the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CertificateData",
            "in": "query",
            "description": "Provides a URL encoded representation of the public certificate in PEM format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Certificate credentials belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Filters the resulting list of Certificates by a unique string identifier of an authenticated Device.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Certificates/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch information about a specific Certificate credential in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Unregister a specific Certificate credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the given properties of a specific Certificate credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Deployment, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SyncServiceSid",
            "in": "query",
            "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Deployments belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch information about a specific Deployment in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Deployment, up to 64 characters long",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SyncServiceSid",
            "in": "query",
            "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Device in the Fleet, optionally giving it a unique name, friendly name, and assigning to a Deployment and/or human identity.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this Device, to be used in addition to SID, up to 128 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeploymentSid",
            "in": "query",
            "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Devices belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DeploymentSid",
            "in": "query",
            "description": "Filters the resulting list of Devices by a unique string identifier of the Deployment they are associated with.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch information about a specific Device in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Device from the Fleet, also removing it from associated Deployments.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the given properties of a specific Device in the Fleet, giving it a friendly name, assigning to a Deployment, or a human identity.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeploymentSid",
            "in": "query",
            "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Fleet for scoping of deployed devices within your account.",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Fleets belonging to your account.",
        "parameters": [],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch information about a specific Fleet in your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Fleet from your account, also destroys all nested resources: Devices, Deployments, Certificates, Keys.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the friendly name property of a specific Fleet in your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DefaultDeploymentSid",
            "in": "query",
            "description": "Provides a string identifier of a Deployment that is going to be used as a default one for this Fleet.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Key credential in the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Keys credentials belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Filters the resulting list of Keys by a unique string identifier of an authenticated Device.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch information about a specific Key credential in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Key credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update the given properties of a specific Key credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/Configuration": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "UiVersion",
            "in": "query",
            "description": "Pinned UI version",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/Flex/FlexFlows": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StudioFlowSid",
            "in": "query",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChatServiceSid",
            "in": "query",
            "description": "The unique SID identifier of the chat service",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelType",
            "in": "query",
            "description": "Channel type (web | facebook | sms)",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          {
            "name": "ContactIdentity",
            "in": "query",
            "description": "Channel contact Identity (number / contact)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/FlexFlows/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StudioFlowSid",
            "in": "query",
            "description": "The unique SID identifier of the Flow.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChatServiceSid",
            "in": "query",
            "description": "The unique SID identifier of the chat service",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelType",
            "in": "query",
            "description": "Channel type (web | facebook | sms)",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          {
            "name": "ContactIdentity",
            "in": "query",
            "description": "Channel contact Identity (number / contact)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/WebChannels": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FlexFlowSid",
            "in": "query",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Chat identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatFriendlyName",
            "in": "query",
            "description": "Chat channel friendly name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomerFriendlyName",
            "in": "query",
            "description": "Customer friendly name (chat participant)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatStatus",
            "in": "query",
            "description": "Chat status (active | inactive)",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "active",
                "inactive"
              ]
            }
          },
          {
            "name": "PreEngagementData",
            "in": "query",
            "description": "Pre-engagement data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/WebChannels/Instance": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ChatChannelSid",
            "in": "query",
            "description": "The unique SID identifier of the chat channel",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChatStatus",
            "in": "query",
            "description": "Chat status (active | inactive)",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "active",
                "inactive"
              ]
            }
          },
          {
            "name": "PostEngagementData",
            "in": "query",
            "description": "Post-engagement data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/WebChannels/Users": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Identity",
            "in": "query",
            "description": "Chat identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatChannelSid",
            "in": "query",
            "description": "The unique SID identifier of the chat channel",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Flex/Worker": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/Flex/Worker/Instance": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "query",
            "description": "The unique ID of the worker.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkspaceSid",
            "in": "query",
            "description": "The unique ID of the Workflow this worker is associated with.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": "The unique ID of the Activity describing the worker's state.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "JSON object describing this worker. For example: `{ 'email: 'Bob@foo.com', 'phone': '8675309' }`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Capacities",
            "in": "query",
            "description": "JSON object describing channel capacities and availability for workers.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/HostedNumbers/AuthorizationDocuments": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.",
        "parameters": [
          {
            "name": "HostedNumberOrderSids",
            "in": "query",
            "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactTitle",
            "in": "query",
            "description": "The title of the person authorized to sign the Authorization Document for this phone number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactPhoneNumber",
            "in": "query",
            "description": "The contact phone number of the person authorized to sign the Authorization Document.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "Email recipients who will be informed when an Authorization Document has been sent and signed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/HostedNumbers/AuthorizationDocuments/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "HostedNumberOrderSids",
            "in": "query",
            "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "Email recipients who will be informed when an Authorization Document has been sent and signed",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          },
          {
            "name": "ContactTitle",
            "in": "query",
            "description": "The title of the person authorized to sign the Authorization Document for this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactPhoneNumber",
            "in": "query",
            "description": "The contact phone number of the person authorized to sign the Authorization Document.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/HostedNumbers/AuthorizationDocuments/{SigningDocumentSid}/DependentHostedNumberOrders": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.",
        "parameters": [
          {
            "name": "SigningDocumentSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/HostedNumbers/HostedNumberOrders": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this HostedNumberOrder. One of `received`, `pending-verification`, `verified`, `pending-loa`, `carrier-processing`, `testing`, `completed`, `failed`, or `action-required`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Host a phone number's capability on Twilio's platform.",
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The number to host in [+E.164](https://en.wikipedia.org/wiki/E.164) format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsCapability",
            "in": "query",
            "description": "Used to specify that the SMS capability will be hosted on Twilio's platform.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "This defaults to the AccountSid of the authorization the user is using. This can be provided to specify a subaccount to add the HostedNumberOrder to.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A 64 character string that is a human readable text that describes this resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Optional. Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "Optional. A list of emails that the LOA document for this HostedNumberOrder will be carbon copied to.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL that Twilio should request when somebody sends an SMS to the phone number. This will be copied onto the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the SmsUrl. Must be either `GET` or `POST`.  This will be copied onto the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl. This will be copied onto the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method that should be used to request the SmsFallbackUrl. Must be either `GET` or `POST`. This will be copied onto the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackUrl",
            "in": "query",
            "description": "Optional. The Status Callback URL attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "Optional. The Status Callback Method attached to the IncomingPhoneNumber resource.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "Optional. The 34 character sid of the application Twilio should use to handle SMS messages sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "Optional. A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Optional. Email of the owner of this phone number that is being hosted.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VerificationType",
            "in": "query",
            "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          },
          {
            "name": "VerificationDocumentSid",
            "in": "query",
            "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/HostedNumbers/HostedNumberOrders/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Cancel the HostedNumberOrder (only available when the status is in `received`).",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A 64 character string that is a human readable text that describes this resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email of the owner of this phone number that is being hosted.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CcEmails",
            "in": "query",
            "description": "Optional. A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "User can only post to `pending-verification` status to transition the HostedNumberOrder to initiate a verification call or verification of ownership with a copy of a phone bill.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          {
            "name": "VerificationCode",
            "in": "query",
            "description": "A verification code that is given to the user via a phone call to the phone number that is being hosted.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VerificationType",
            "in": "query",
            "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          },
          {
            "name": "VerificationDocumentSid",
            "in": "query",
            "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Extension",
            "in": "query",
            "description": "Digits to dial after connecting the verification call.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallDelay",
            "in": "query",
            "description": "The number of seconds, between 0 and 60, to delay before initiating the verification call. Defaults to 0.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/iam/Accounts/{AccountSid}/authenticate": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/iam/Accounts/{AccountSid}/Tokens/refresh": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/iam/Accounts/{AccountSid}/saml2": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SAMLResponse",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelayState",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/iam/Accounts/{AccountSid}/Tokens": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/iam/Accounts/{AccountSid}/Tokens/validate": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/insights/Calls/Report/Aspects/{Aspect}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Aspect",
            "in": "path",
            "description": "The report aspect to read. The aspect can be: `Clients`, `IpAddresses`, `Browsers`, `OperatingSystems`, `Regions`, or `Direction`.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "Clients",
                "IpAddresses",
                "Browsers",
                "OperatingSystems",
                "Regions",
                "Direction"
              ]
            }
          },
          {
            "name": "Browser",
            "in": "query",
            "description": "Query by browser type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Query by region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OperatingSystem",
            "in": "query",
            "description": "Query by operating system of client",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Client",
            "in": "query",
            "description": "Query by client",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "description": "Query by call direction (inbound/outbound)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": "Query by IP Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "query",
            "description": "Date to scope query start",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "description": "Date to scope query end",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/insights/Calls/Report/Aspects": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/insights/Calls/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/insights/Calls/{CallSid}/Events": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/insights/Calls/{CallSid}/Metrics": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/insights/Calls/Report": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "StartDateTime",
            "in": "query",
            "description": "Date to scope query start",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "description": "Date to scope query end",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/insights/Calls/{CallSid}/Summary": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call sid that uniquely identifies the call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/AvailableAddOns": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Add-ons currently available to be installed.",
        "parameters": [],
        "responses": null
      }
    },
    "/marketplace/AvailableAddOns/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Add-on currently available to be installed.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Available Add-on Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Extensions for the Available Add-on.",
        "parameters": [
          {
            "name": "AvailableAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Extension for the Available Add-on.",
        "parameters": [
          {
            "name": "AvailableAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Extension Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/InstalledAddOns": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Install an Add-on for the Account specified.",
        "parameters": [
          {
            "name": "AvailableAddOnSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the Add-on to be installed.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AcceptTermsOfService",
            "in": "query",
            "description": "A boolean that reflects your decision whether to accept the Terms of Service",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "The JSON object representing the configuration of the new Add-on installation.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "The human-readable string that uniquely identifies this Add-on installation for an Account.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of Add-ons currently installed on this Account.",
        "parameters": [],
        "responses": null
      }
    },
    "/marketplace/InstalledAddOns/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "delete": {
        "description": "Remove an Add-on installation from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Installed Add-on Sid that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Fetch an instance of an Add-on currently installed on this Account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Installed Add-on Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an Add-on installation for the Account specified.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "Valid JSON object that conform to the configuration schema exposed by the associated Available Add-on resource. This is only required by Add-ons that need to be configured",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "The human-readable string that uniquely identifies this Add-on installation for an Account.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Extensions for the Installed Add-on.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an Extension for the Installed Add-on.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The Extension Sid that uniquely identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an Extension for an Add-on installation.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "A Boolean indicating if the Extension will be invoked.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/Numbers/ActiveNumbers": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Active Numbers for an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The unique SID identifier of the Account.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number, in E.164 (i.e. \"+1]\") format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The Type of this Active Number. One of `local`, `tollfree`, `mobile`, `national`, `voip`, `machine-to-machine` or `shared-cost`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ]
            }
          },
          {
            "name": "Geography.isoCountry",
            "in": "query",
            "description": "The ISO country code of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.lata",
            "in": "query",
            "description": "The LATA of this phone number. Only available for countries in the North American Numbering Plan (NANPA).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.latitude",
            "in": "query",
            "description": "The latitude coordinate of this phone number.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Geography.longitude",
            "in": "query",
            "description": "The longitude coordinate of this phone number.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Geography.locality",
            "in": "query",
            "description": "The locality/city of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.postalCode",
            "in": "query",
            "description": "The postal (zip) code of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.rateCenter",
            "in": "query",
            "description": "The rate center of this phone number. Only available for countries in the North American Numbering Plan (NANPA).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.region",
            "in": "query",
            "description": "The two-letter state or province abbreviation of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Capabilities.voice.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound voice connectivity into Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound voice connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.e911",
            "in": "query",
            "description": "Indicates if this is a Emergency 911 connectivity capable number.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.fax",
            "in": "query",
            "description": "Indicates is this is a fax capable number",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.callsPerSecond",
            "in": "query",
            "description": "Integer stating how many calls can be initiated per second.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.concurrentCallsLimit",
            "in": "query",
            "description": "Integer stating how many calls can be active at one time.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.longRecordLength",
            "in": "query",
            "description": "The length in seconds that a number can record a voicemail.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.inboundCalledDtmf",
            "in": "query",
            "description": "Indicates if this number supports Dual-Tone Multi Frequency (dtmf) with inbound called party.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.inboundCallerDtmf",
            "in": "query",
            "description": "Indicates if this number supports Dual-Tone Multi Frequency (dtmf) with inbound caller party.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.sipTrunking",
            "in": "query",
            "description": "Sip Trunking capable number.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.inboundCallerIdPreservation",
            "in": "query",
            "description": "Inbound voice Caller ID (+E.164 format) preservation of a number. One of `none`, `domestic` or `international`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "domestic",
                "international"
              ]
            }
          },
          {
            "name": "Capabilities.voice.inboundReachability",
            "in": "query",
            "description": "Inbound voice reachability of a number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound sms connectivity into Twilio",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound sms connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.gsm7",
            "in": "query",
            "description": "Indicates if GSM-7 is supported for this ActiveNumber. GSM-7 is a character encoding standard which packs the most commonly used letters and symbols in many languages into 7 bits each for usage on GSM networks.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.ucs2",
            "in": "query",
            "description": "Indicates if USC-2 is supported for this ActiveNumber. UCS-2 is a character encoding standard in which characters are represented by a fixed-length 16 bits (2 bytes).",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.inboundSenderIdPreservation",
            "in": "query",
            "description": "Inbound SMS Sender Id Preservation of this Active Number. One of `none`, `domestic` or `international`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "domestic",
                "international"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundReachability",
            "in": "query",
            "description": "Inbound SMS Reachability of this Active Number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundMps",
            "in": "query",
            "description": "Integer showing the sms inbound message per second limit.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.mms.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound mms connectivity into Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.mms.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound mms connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.mms.inboundReachability",
            "in": "query",
            "description": "The Capabilities.Mms.Inbound Reachability of this Active Number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.mms.inboundMps",
            "in": "query",
            "description": "Integer showing the mms inbound message per second limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Regulatory.addressRequirements",
            "in": "query",
            "description": "This indicates whether the phone number requires you or your customer to have an Address registered with Twilio. One of `none`, `any`, `local` or `foreign`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new Active Number for an account",
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Phone numbers are in E.164 (i.e +1) format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.friendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.url",
            "in": "query",
            "description": "The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.method",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting Voice `Url`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.fallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.fallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the Voice `FallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.applicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.url",
            "in": "query",
            "description": "The URL Twilio will request when receiving an incoming SMS message to this number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.method",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.fallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML from Sms Url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.fallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the Sms FallbackUrl. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.applicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.statusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.statusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Numbers/ActiveNumbers/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Active Number.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Active Number.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Active Number.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Active Number.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configurations.friendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.url",
            "in": "query",
            "description": "The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.method",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting Voice `Url`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.fallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.fallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the Voice `FallbackUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.voice.applicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.url",
            "in": "query",
            "description": "The URL Twilio will request when receiving an incoming SMS message to this number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.method",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.fallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML from Sms Url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.fallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making requests to the Sms FallbackUrl. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.sms.applicationSid",
            "in": "query",
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.statusCallback",
            "in": "query",
            "description": "The URL that Twilio will request to pass status parameters (such as call ended) to your application.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configurations.statusCallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Active Number.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Active Number.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Numbers/AvailableNumbers": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a list of AvailableNumbers that match the specified filters, each representing a phone number that is currently available for provisioning to your account.",
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number, in E.164 (i.e. \"+1]\") format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Lifecycle",
            "in": "query",
            "description": "The Lifecycle of this Available Number. One of `developer-preview`, `private-offering`, `beta` or `generally-available`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "developer-preview",
                  "private-offering",
                  "beta",
                  "generally-available"
                ]
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The Type of this Available Number. One of `local`, `tollfree`, `mobile`, `national`, `voip`, `machine-to-machine` or `shared-cost`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ]
            }
          },
          {
            "name": "SavedSearch",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Geography.isoCountry",
            "in": "query",
            "description": "The ISO country code of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.lata",
            "in": "query",
            "description": "The LATA of this phone number. Only available for countries in the North American Numbering Plan (NANPA).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.rateCenter",
            "in": "query",
            "description": "The rate center of this phone number. Only available for countries in the North American Numbering Plan (NANPA).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.latitude",
            "in": "query",
            "description": "The latitude coordinate of this phone number.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Geography.longitude",
            "in": "query",
            "description": "The longitude coordinate of this phone number.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Geography.region",
            "in": "query",
            "description": "The two-letter state or province abbreviation of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.locality",
            "in": "query",
            "description": "The locality/city of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Geography.postalCode",
            "in": "query",
            "description": "The postal (zip) code of this phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Capabilities.voice.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound voice connectivity into Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound voice connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.e911",
            "in": "query",
            "description": "Indicates if this is a Emergency 911 connectivity capable number.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.fax",
            "in": "query",
            "description": "Indicates is this is a fax capable number",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.sipTrunking",
            "in": "query",
            "description": "Sip Trunking capable number.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.callsPerSecond",
            "in": "query",
            "description": "Integer stating how many calls can be initiated per second.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.concurrentCallsLimit",
            "in": "query",
            "description": "Integer stating how many calls can be active at one time.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.longRecordLength",
            "in": "query",
            "description": "The length in seconds that a number can record a voicemail.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.voice.inboundCalledDtmf",
            "in": "query",
            "description": "Indicates if this number supports Dual-Tone Multi Frequency (dtmf) with inbound called party.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.inboundCallerDtmf",
            "in": "query",
            "description": "Indicates if this number supports Dual-Tone Multi Frequency (dtmf) with inbound caller party.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.voice.inboundCallerIdPreservation",
            "in": "query",
            "description": "Inbound voice Caller ID (+E.164 format) preservation of a number. One of `none`, `domestic` or `international`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "domestic",
                "international"
              ]
            }
          },
          {
            "name": "Capabilities.voice.inboundReachability",
            "in": "query",
            "description": "Inbound voice reachability of a number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound sms connectivity into Twilio",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound sms connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.gsm7",
            "in": "query",
            "description": "Indicates if GSM-7 is supported for this ActiveNumber. GSM-7 is a character encoding standard which packs the most commonly used letters and symbols in many languages into 7 bits each for usage on GSM networks.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.ucs2",
            "in": "query",
            "description": "Indicates if USC-2 is supported for this ActiveNumber. UCS-2 is a character encoding standard in which characters are represented by a fixed-length 16 bits (2 bytes).",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.inboundSenderIdPreservation",
            "in": "query",
            "description": "Inbound SMS Sender Id Preservation of this Available Number. One of `none`, `domestic` or `international`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "domestic",
                "international"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundReachability",
            "in": "query",
            "description": "Inbound SMS Reachability of this Available Number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.sms.inboundMps",
            "in": "query",
            "description": "Integer showing the sms inbound message per second limit.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Capabilities.sms.gsm7Concatenation",
            "in": "query",
            "description": "Indicates if GSM-7 concatenation is supported. Concatenated short message service (or concatenated SMS) is used overcome the limitation on the number of characters that can be sent in a single SMS text message transmission (which is usually 160), and split the sms into smaller messages by the sending device and recombined at the receiving end.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.sms.ucs2Concatenation",
            "in": "query",
            "description": "Indicates if UCS-2 concatenation is supported. Concatenated short message service (or concatenated SMS) is used overcome the limitation on the number of characters that can be sent in a single SMS text message transmission (which is usually 160), and split the sms into smaller messages by the sending device and recombined at the receiving end.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.mms.inboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has inbound mms connectivity into Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.mms.outboundConnectivity",
            "in": "query",
            "description": "Indicates whether a number has outbound mms connectivity from Twilio.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities.mms.inboundReachability",
            "in": "query",
            "description": "The Capabilities.Mms.Inbound Reachability of this Available Number. One of `domestic`, `foreign` or `global`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "domestic",
                "foreign",
                "global"
              ]
            }
          },
          {
            "name": "Capabilities.mms.inboundMps",
            "in": "query",
            "description": "Integer showing the mms inbound message per second limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Regulatory.addressRequirements",
            "in": "query",
            "description": "This indicates whether the phone number requires you or your customer to have an Address registered with Twilio. One of `none`, `any`, `local` or `foreign`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          {
            "name": "MinBaseRecurringPrice",
            "in": "query",
            "description": "Minimum base recurring price for a number in US dollars (i.e., >= $1.00). Combined with Maximum, this filter acts as a BETWEEN filter.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "MaxBaseRecurringPrice",
            "in": "query",
            "description": "Maximum base recurring price for a number in US dollars (i.e., <= $2.00). Combined with Minimum, this filter acts as a BETWEEN filter.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "MinBaseSetupPrice",
            "in": "query",
            "description": "Minimum base setup price for a number in US dollars (i.e., >= $1.00). Combined with Maximum, this filter acts as a BETWEEN filter",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "MaxBaseSetupPrice",
            "in": "query",
            "description": "Maximum base setup price for a number in US dollars (i.e., <= $2.00). Combined with Minimum, this filter acts as a BETWEEN filter.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": null
      }
    },
    "/PortIn/Orders/{PortOrderSid}/AuthorizationDocuments": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the port in of the phone number(s) in to Twilio's platform.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/PortIn/Orders/{PortOrderSid}/AuthorizationDocuments/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Cancel a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/PortIn/Orders/{PortOrderSid}/Numbers": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of PortInNumbers belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortInOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "Phone number to be ported into Twilio. This must be in [E.164](https://en.wikipedia.org/wiki/E.164) format, e.g., +16175551212",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the [IncomingPhoneNumber](https://www.twilio.com/docs/api/rest/incoming-phone-numbers) resource that represents the phone number being ported into Twilio.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this PortInNumber. One of `twilio-processing`, `initialized`, `pending-carrier-processing`, `carrier-processing`, `accepted`, `rejected`, `ported-in`, `pending-cancelation`, `canceled`, `failed`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "initialized",
                "pending-carrier-processing",
                "carrier-processing",
                "accepted",
                "rejected",
                "ported-in",
                "pending-cancelation",
                "canceled",
                "failed"
              ]
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Type of phone number that is porting into Twilio and can be `local`, `tollfree`, `mobile` depending on the country.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CarrierAccountNumber",
            "in": "query",
            "description": "External carrier account number of this phone number used for ownerhsip authorization.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CurrentCarrier",
            "in": "query",
            "description": "The current carrier of the phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CurrentRespOrg",
            "in": "query",
            "description": "Current responsible organization of this phone number if it is a toll-free phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConfirmedActivationDate",
            "in": "query",
            "description": "The confirmed Firm Order Commitment (FOC) date and time, given as ISO 8601 format \u2013 i.e., the date and time at which the number will port. This will be overridden if the earliest possible FOC date is on a later date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PartnerReferenceId",
            "in": "query",
            "description": "External ID of the port order for a phone number on the partnered provider sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/PortIn/Orders/{PortOrderSid}/Numbers/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific PortInNumber.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInNumber.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Cancel the PortInNumber (only available when the status is in `initialized`, `pending-carrier-processing`, `carrier-processing`, `accepted`, `rejected`).",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInNumber.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific PortInNumber.",
        "parameters": [
          {
            "name": "PortOrderSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the PortOrder this resource belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInNumber.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CarrierAccountNumber",
            "in": "query",
            "description": "External carrier account number of this phone number used for ownerhsip authorization.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumberPin",
            "in": "query",
            "description": "PIN number of the account (with your current provider/carrier) that is associated with the porting phone number in this port request. This is mandatory for Wireless numbers but optional for Landline and Toll Free numbers.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/PortIn/Orders": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of PortInOrder belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "The country in iso (ISO_3166-1) format the service address associated with the porting phone number. This is a 2 letter country code, e.g., \u201cCA\u201d or \u201cUS\u201d.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of this PortOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "Name of the company that owns the porting phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "Authorized signatory First Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Authorized signatory Last Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StreetNumber",
            "in": "query",
            "description": "Street number of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StreetName",
            "in": "query",
            "description": "Street name of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "City name of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Name of the region in the service address associated with the porting phone number. This can be a 2 letter state code in US, e.g., \u201cCA\u201d.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "Zip or Postal code of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestedActivationDate",
            "in": "query",
            "description": "Desired Firm Order Commitment (FOC) date and time, given as ISO 8601 format \u2013 i.e., the date and time at which the number will port. This will be overridden if the earliest possible FOC date is on a later date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "StatusUpdatesEmail",
            "in": "query",
            "description": "Email of the owner of this phone number that is being ported into Twilio.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallbackUrl",
            "in": "query",
            "description": "Optional. The Status Callback URL used to send status updates to when PortInOrders transition.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "BillingPhoneNumber",
            "in": "query",
            "description": "The billing telephone number used by losing carrier to authorize legitimate port outs from their network.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this PortInOrder. One of `twilio-processing`, `received`, `pending-loa`, `processing`, `customer-action-required`, `review`, `completed`, `canceled`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-loa",
                "processing",
                "customer-action-required",
                "review",
                "completed",
                "failed"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Port-In one or more phone numbers to Twilio's platform.",
        "parameters": [],
        "responses": null
      }
    },
    "/PortIn/Orders/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific PortInOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Cancel the PortInOrder (only available when the status is in `received`).",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates a specific PortInOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this PortInOrder.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "The country in iso (ISO_3166-1) format the service address associated with the porting phone number. This is a 2 letter country code, e.g., \u201cCA\u201d or \u201cUS\u201d.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of this PortOrder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "Name of the company that owns the porting phone number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "Authorized signatory First Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Authorized signatory Last Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StreetNumber",
            "in": "query",
            "description": "Street number of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StreetName",
            "in": "query",
            "description": "Street name of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "City name of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "Name of the region in the service address associated with the porting phone number. This can be a 2 letter state code in US, e.g., \u201cCA\u201d.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "Zip or Postal code of the numbers service address with current provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestedActivationDate",
            "in": "query",
            "description": "Desired Firm Order Commitment (FOC) date and time, given as ISO 8601 format \u2013 i.e., the date and time at which the number will port. This will be overridden if the earliest possible FOC date is on a later date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "StatusUpdatesEmail",
            "in": "query",
            "description": "Email of the owner of this phone number that is being ported into Twilio.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallbackUrl",
            "in": "query",
            "description": "Optional. The Status Callback URL used to send status updates to when PortInOrders transition.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "BillingPhoneNumber",
            "in": "query",
            "description": "The billing telephone number used by losing carrier to authorize legitimate port outs from their network.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Studio/Flows/{FlowSid}/Engagements": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Engagements for the Flow.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Triggers a new Engagement for the Flow",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Studio/Flows/{FlowSid}/Engagements/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Studio/Flows": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Flows.",
        "parameters": [],
        "responses": null
      }
    },
    "/Studio/Flows/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Flow.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Studio/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Steps for an Engagement.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Studio/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Verification/Services": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Verification Service.",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "A 1-64 character string with friendly name of service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeLength",
            "in": "query",
            "description": "The length of the verification code to be generated. Must be an integer value between 4-10",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Phone Verification Services for an account.",
        "parameters": [],
        "responses": null
      }
    },
    "/Verification/Services/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch specific Verification Service Instance.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of Verification Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Phone Verification Service.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "A 1-64 character string with friendly name of service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeLength",
            "in": "query",
            "description": "The length of the verification code to be generated. Must be an integer value between 4-10",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/Verification/Services/{ServiceSid}/Verifications": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Verification for a To number using a Service",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The To phonenumber of the phone being verified",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Channel",
            "in": "query",
            "description": "The method in which the phone will be verified. Either sms or call",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomMessage",
            "in": "query",
            "description": "A character string containing a custom message for this verification",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Verification/Services/{ServiceSid}/VerificationCheck": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": "challenge a specific Verification Check.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Code",
            "in": "query",
            "description": "The 4-10 character string being verified",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The To phonenumber of the phone being verified",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Documents": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can update the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebhookUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ReachabilityWebhooksEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AclEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/Sync/Services/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WebhookUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReachabilityWebhooksEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AclEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "inclusive",
                "exclusive"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "inclusive",
                "exclusive"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LogQueries",
            "in": "query",
            "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "A user-provided URL to send event callbacks to.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallbackEvents",
            "in": "query",
            "description": "Space-separated list of callback events that will trigger callbacks.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FallbackActions",
            "in": "query",
            "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "InitiationActions",
            "in": "query",
            "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "The JSON object that holds the style sheet for the assistant",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LogQueries",
            "in": "query",
            "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "A user-provided URL to send event callbacks to.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallbackEvents",
            "in": "query",
            "description": "Space-separated list of callback events that will trigger callbacks.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FallbackActions",
            "in": "query",
            "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "InitiationActions",
            "in": "query",
            "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "The JSON object that holds the style sheet for the assistant",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/FallbackActions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FallbackActions",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/InitiationActions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "InitiationActions",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Dialogues": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ]
    },
    "/understand/Assistants/{AssistantSid}/Dialogues/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldType",
            "in": "query",
            "description": "The unique name or sid of the FieldType. It can be any [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or the Field Type sid of a custom Field Type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the value. For example: *en-US*",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the value.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Value",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SynonymOf",
            "in": "query",
            "description": "A value that indicates this field value is a synonym of. Empty if the value is not a synonym.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Queries": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ModelBuild",
            "in": "query",
            "description": "The Model Build Sid or unique name of the Model Build to be queried.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tasks",
            "in": "query",
            "description": "Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated *task-unique-name-1*, *task-unique-name-2*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ModelBuild",
            "in": "query",
            "description": "The Model Build Sid or unique name of the Model Build to be queried.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Field",
            "in": "query",
            "description": "Constraints the query to a given Field with an task. Useful when you know the Field you are expecting. It accepts one field in the format *task-unique-name-1*:*field-unique-name*",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Queries/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SampleSid",
            "in": "query",
            "description": "An optional reference to the Sample created from this query.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaggedText",
            "in": "query",
            "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceChannel",
            "in": "query",
            "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaggedText",
            "in": "query",
            "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceChannel",
            "in": "query",
            "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/StyleSheet": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Returns Style sheet JSON object for this Assistant",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the style sheet for an assistant identified by {AssistantSid} or {AssistantUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StyleSheet",
            "in": "query",
            "description": "The JSON Style sheet string",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "ActionsUrl",
            "in": "query",
            "description": "User-provided HTTP endpoint where from the assistant fetches actions",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "ActionsUrl",
            "in": "query",
            "description": "User-provided HTTP endpoint where from the assistant fetches actions",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Actions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Returns JSON actions for this Task.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "description": "The JSON actions that instruct the Assistant how to perform this task.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Statistics": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/Commands": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Device",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Command",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Device",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CommandMode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/Commands/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/RatePlans": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DataLimit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DataMetering",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MessagingEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CommandsEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NationalRoamingEnabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InternationalRoaming",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/RatePlans/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/Sims": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Iccid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EId",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SimRegistrationCode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/Sims/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CommandsCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CommandsCallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      }
    },
    "/wireless/Sims/{SimSid}/Usage": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "End",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/payment/Credentials/ACICommerceGateway": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of ACI Commerce Gateway Credential metadata (not actual credentials) belonging to the account used to make the request",
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": "Create a new ACI Commerce Gateway Credential",
        "parameters": [
          {
            "name": "Credentials",
            "in": "query",
            "description": "Json String containing ACI Commerce Gateway credentials with format (name and value must be in double quotes) {account_id:<TRANSPORTAL_IDENTIFICATION_NUMBER>, password_hash:<SHA1_TRANSPORTAL_PASSWORD>} e.g: {account_id:\"12345\", password_hash:\"abcdef=\"}",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with. Needs to be a valid Subaccount of the account issuing the request",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/payment/Credentials/ACICommerceGateway/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the ACI Commerce Gateway credential metadata (not actual credentials) specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Modify the ACI Commerce Gateway credentials of a given sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Credentials",
            "in": "query",
            "description": "Json String containing ACI Commerce Gateway credentials with format (name and value must be in double quotes) {account_id:<TRANSPORTAL_IDENTIFICATION_NUMBER>, password_hash:<SHA1_TRANSPORTAL_PASSWORD>} e.g: {account_id:\"12345\", password_hash:\"abcdef=\"}",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/payment/Credentials/Stripe": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of Stripe Credential metadata (not actual credentials) belonging to the account used to make the request",
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": "Create a new Stripe Credential",
        "parameters": [
          {
            "name": "Credentials",
            "in": "query",
            "description": "Following Json format containing Stripe credentials are supported (name and value must be in double quotes). 1.{api_key:<API_KEY>} e.g. {api_key:\"rk_test_N12345678\"}",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with. Needs to be a valid Subaccount of the account issuing the request",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/payment/Credentials/Stripe/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the Stripe credentials metadata (not actual credentials) specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Modify the Stripe credentials of a given sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Credential Sid that uniquely identifies the Credential to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Credentials",
            "in": "query",
            "description": "Following Json format containing Stripe credentials are supported (name and value must be in double quotes). 1.{api_key:<API_KEY>} e.g. {api_key:\"rk_test_N12345678\"}",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Messaging": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v1/Messaging/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Messaging/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/PhoneNumbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v1/PhoneNumbers/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v1/PhoneNumbers/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Voice": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v1/Voice/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Voice/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Voice/Numbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v1/Voice/Numbers/{Number}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Number",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Voice": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v2/Voice/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v2/Voice/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Country.",
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": "This fetches the origin-based voice pricing information for a specific country",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v2/Voice/Numbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ]
    },
    "/v2/Voice/Numbers/{DestinationNumber}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a pricing for a specific destination and, optionally, origination phone number.",
        "parameters": [
          {
            "name": "DestinationNumber",
            "in": "path",
            "description": "This fetches the origin-based voice pricing information for a phone number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OriginationNumber",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Interactions": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Interactions for a Session.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "InboundParticipantStatus",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          },
          {
            "name": "OutboundParticipantStatus",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Interactions/{Sid}": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Interactions for a given [Session](https://www.twilio.com/docs/proxy/api/session).",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Interaction.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Interaction.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Interaction.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants/{ParticipantSid}/MessageInteractions": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new message Interaction to send directly from your system to one [Participant](https://www.twilio.com/docs/proxy/api/participants).  The `inbound` properties for this Interaction will always be empty.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": "The unique SID identifier of the [Participant](https://www.twilio.com/docs/proxy/api/participants).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants/{ParticipantSid}/MessageInteractions/{Sid}": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Participants in a Session.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identifier",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Add a new Participant to the Session",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identifier",
            "in": "query",
            "description": "The phone number of this Participant.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable description of this resource, up to 64 characters. Should not include PII.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProxyIdentifier",
            "in": "query",
            "description": "The proxy phone number to use for this Participant. If not specified, Proxy will select a number from the pool.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProxyIdentifierSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Participant.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Participant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Participant. This is a soft-delete. The participant remains associated with the session and cannot be re-added. Participants are only permanently deleted when the [Session](https://www.twilio.com/docs/proxy/api/session) is deleted.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SessionSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Session](https://www.twilio.com/docs/proxy/api/session).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Participant.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumberSid",
            "in": "query",
            "description": "Phone Number SID for the Phone Number being added to the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Sessions for this Service.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "closed",
                "failed",
                "unknown",
                "completed"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Create a new Session",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Your unique identifier for this Session such as a Job ID or conversation ID. *Should not contain PII.*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateExpiry",
            "in": "query",
            "description": "An absolute time (ISO 8601) at which this Session should close. If this is populated, it takes precedence over TTL values.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "The time, in seconds, after the latest of Session create time or the Session's last Interaction time at which the session will expire.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Mode",
            "in": "query",
            "description": "The type of communications mediums allowed on a Session. Defaults to `voice-and-message`. Other options are `voice-only` or `message-only`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "message-only",
                "voice-only",
                "voice-and-message"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Set this value to `closed` to close the session. A Session can be re-opened by posting to a closed session with the value `in-progress`.  This will be `open` by default on create.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "closed",
                "failed",
                "unknown",
                "completed"
              ]
            }
          },
          {
            "name": "Participants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Sessions/{Sid}": {
      "servers": [
        {
          "url": "https://proxy.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Session.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Session.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Session.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Session.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Session.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the parent [Service](https://www.twilio.com/docs/proxy/api/service).",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Session.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateExpiry",
            "in": "query",
            "description": "The date that this Session should expire, given in ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "The time, in seconds, after the latest of Session create time or the Session's last Interaction time at which the session will expire.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Mode",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "message-only",
                "voice-only",
                "voice-and-message"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this Session. Set to `in-progress` to re-open a session or `closed` to close a session.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "closed",
                "failed",
                "unknown",
                "completed"
              ]
            }
          },
          {
            "name": "Participants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/ShortCodes": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ShortCodeSid",
            "in": "query",
            "description": "ShortCodeSid for the Shortcode being added to the Service..",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/ShortCodes/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Activities": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by an Activity's friendly name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Filter by activities that are available or unavailable. (Note: This can be 'true', '1'' or 'yes' to indicate a true value. All other values will represent false)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Activity, such as 'On Call', 'Break', 'Email', etc. Must be unique in this Workspace. These names will be used to calculate and expose statistics about workers, and give you visibility into the state of each of your workers.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Boolean value indicating whether the worker should be eligible to receive a Task when they occupy this Activity. For example, a call center might have an activity named 'On Call' with an availability set to 'false'. Note: This can be 'true', '1' or 'yes' to indicate a true value. All other values will represent false. Defaults to false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Activities/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Activity, such as 'on-call', 'break', 'email', etc. These names will be used to calculate and expose statistics about workers, and give you visibility into the state of each of your workers.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Events": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter events by an end date. This is helpful for defining a range of events to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EventType",
            "in": "query",
            "description": "Filter events by those of a certain event type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter events by up to 'x' minutes in the past. This is helpful for events for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ReservationSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular reservation",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter events by a start date. This is helpful for defining a range of events to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular queue",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular worker",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Events/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Retrieve the list of all Tasks in the workspace with the specified priority.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "AssignmentStatus",
            "in": "query",
            "description": "Returns the list of all Tasks in the workspace with the specified AssignmentStatus. Allowed AssignmentStatus values are pending, reserved, assigned, canceled, and completed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified Sid value.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowName",
            "in": "query",
            "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified FriendlyName value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Returns the list of Tasks that are currently waiting in the TaskQueue identified by the Sid specified.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Returns the list of Tasks that are currently waiting in the TaskQueue identified by the FriendlyName specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EvaluateTaskAttributes",
            "in": "query",
            "description": "Provide a task attributes expression, and this will return tasks which match the attributes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ordering",
            "in": "query",
            "description": "Use this parameter to control the order of the Tasks returned. The value should be passed in `Attribute:Order` format, where Attribute can be either `Priority` or `DateCreated` and Order can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered by Priority in descending order. To sort the Tasks by Priority and DateCreated pass `Priority:desc,DateCreated:asc`. By Default Tasks are returned sorted by DateCreated in ascending order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasAddons",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "The amount of time in seconds the task is allowed to live up to a maximum of 2 weeks. Defaults to 24 hours. On timeout, `task.canceled` event will fire with description \"Task TTL Exceeded\".",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Override priority for the Task. When supplied, the Task will take on the given priority unless it matches a Workflow Target with a Priority set. When not supplied, the Task will take on the priority of the matching Workflow Target.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "When MultiTasking is enabled specify the type of the task by passing either TaskChannel Unique Name or Task Channel Sid. Default value is \"default\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": "The WorkflowSid for the Workflow that you would like to handle routing for this Task. If there is only one Workflow defined for the Workspace that you are posting a task to, then this is an optional parameter, and that single workflow will be used.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "Url-encoded JSON string describing the attributes of this task. This data will be passed back to the Workflow's AssignmentCallbackURL when the Task is assigned to a Worker. An example task: `{ \"task_type\": \"call\", \"twilio_call_sid\": \"CAxxx\", \"customer_ticket_number\": \"12345\" }`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "The user-defined JSON data describing the custom attributes of this task.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentStatus",
            "in": "query",
            "description": "A 'pending' or 'reserved' Task may be canceled by posting AssignmentStatus='canceled'. Post AssignmentStatus='wrapping' to move Task to 'wrapup' state and AssignmentStatus='completed' to move a Task to 'completed' state.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "pending",
                "reserved",
                "assigned",
                "canceled",
                "completed",
                "wrapping"
              ]
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "description": "This is only required if the Task is canceled or completed. This logs the reason the task was either canceled or completed and queues the task for deletion after 5 minutes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Override priority for the Task. When supplied, the Task will take on the given priority unless it matches a Workflow Target with a Priority set.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskChannels": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "String representing user-friendly name for the TaskChannel",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "String representing unique name for the TaskChannel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Toggle the FriendlyName for the TaskChannel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a human readable description of a TaskQueue (for example \"Customer Support\" or \"2014 Election Campaign\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EvaluateWorkerAttributes",
            "in": "query",
            "description": "Provide a Worker attributes expression, and this will return the list of TaskQueues that would distribute tasks to a worker with these attributes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkerSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this TaskQueue (for example \"Support \u2013 Tier 1\", \"Sales\" or \"Escalation\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkers",
            "in": "query",
            "description": "A string describing the Worker selection criteria for any Tasks that enter this TaskQueue. For example `'\"language\" == \"spanish\"'` If no TargetWorkers parameter is provided, Tasks will wait in this TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxReservedWorkers",
            "in": "query",
            "description": "The maximum amount of workers to create reservations for the assignment of a task while in this queue. Defaults to 1, with a Maximum of 50.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskOrder",
            "in": "query",
            "description": "TaskOrder will determine which order the Tasks will be assigned to Workers. Set this parameter to LIFO to assign most recently created Task first or FIFO to assign the oldest Task. Default is FIFO. [Click here](https://www.twilio.com/docs/api/taskrouter/last-first-out-lifo) to learn more.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          {
            "name": "ReservationActivitySid",
            "in": "query",
            "description": "ActivitySID to assign workers once a task is reserved for them",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignmentActivitySid",
            "in": "query",
            "description": "ActivitySID to assign workers once a task is assigned for them",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this TaskQueue (for example \"Support \u2013 Tier 1\", \"Sales\" or \"Escalation\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkers",
            "in": "query",
            "description": "A string describing the Worker selection criteria for any Tasks that enter this TaskQueue. For example '\"language\" == \"spanish\"' If no TargetWorkers parameter is provided, Tasks will wait in this queue until they are either deleted or moved to another queue. Additional examples on how to describing Worker selection criteria below.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReservationActivitySid",
            "in": "query",
            "description": "ActivitySID that will be assigned to Workers when they are reserved for a task from this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignmentActivitySid",
            "in": "query",
            "description": "ActivitySID that will be assigned to Workers when they are assigned a task from this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MaxReservedWorkers",
            "in": "query",
            "description": "The maximum amount of workers to create reservations for the assignment of a task while in this queue. Maximum of 50.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskOrder",
            "in": "query",
            "description": "TaskOrder will determine which order the Tasks will be assigned to Workers. Set this parameter to LIFO to assign most recently created Task first or FIFO to assign the oldest Task. Default is FIFO. [Click here](https://www.twilio.com/docs/api/taskrouter/last-first-out-lifo) to learn more.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter the TaskQueue stats based on a TaskQueue's name (only for list resource)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Returns the list of reservations for a task with a specified ReservationStatus",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "New reservation status",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          {
            "name": "WorkerActivitySid",
            "in": "query",
            "description": "New worker activity sid if rejecting a reservation",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Instruction",
            "in": "query",
            "description": "Assignment instruction for reservation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeuePostWorkActivitySid",
            "in": "query",
            "description": "New worker activity sid after executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DequeueFrom",
            "in": "query",
            "description": "Caller ID for the call to the worker when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueRecord",
            "in": "query",
            "description": "Attribute to record both legs of a call when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueTimeout",
            "in": "query",
            "description": "Timeout for call when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DequeueTo",
            "in": "query",
            "description": "Contact URI of the worker when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackUrl",
            "in": "query",
            "description": "Callback URL for completed call event when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallFrom",
            "in": "query",
            "description": "Caller ID for the outbound call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallRecord",
            "in": "query",
            "description": "Attribute to record both legs of a call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallTimeout",
            "in": "query",
            "description": "Timeout for call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CallTo",
            "in": "query",
            "description": "Contact URI of the worker when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallUrl",
            "in": "query",
            "description": "TwiML URI executed on answering the worker's leg as a result of the Call instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallStatusCallbackUrl",
            "in": "query",
            "description": "Callback URL for completed call event when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallAccept",
            "in": "query",
            "description": "Flag to determine if reservation should be accepted when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectCallSid",
            "in": "query",
            "description": "Call sid of the call parked in the queue when executing a Redirect instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RedirectAccept",
            "in": "query",
            "description": "Flag to determine if reservation should be accepted when executing a Redirect instruction",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectUrl",
            "in": "query",
            "description": "TwiML URI to redirect the call to when executing the Redirect instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Contact URI of the worker when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Caller ID for the call to the worker when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "initiated",
                  "ringing",
                  "answered",
                  "completed"
                ]
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "Timeout for call when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "start",
                  "end",
                  "join",
                  "leave",
                  "mute",
                  "hold",
                  "speaker"
                ]
              }
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackEvent",
            "in": "query",
            "description": "Call progress events sent via webhooks as a result of a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PostWorkActivitySid",
            "in": "query",
            "description": "New worker activity sid after executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SupervisorMode",
            "in": "query",
            "description": "Supervisor mode when executing the Supervise instruction",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "monitor",
                "whisper",
                "barge"
              ]
            }
          },
          {
            "name": "Supervisor",
            "in": "query",
            "description": "Supervisor sid/uri when executing the Supervise instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndConferenceOnCustomerExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BeepOnCustomerEntrance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ActivityName",
            "in": "query",
            "description": "Filter by workers that are in a particular Activity by Friendly Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": "Filter by workers that are in a particular Activity by SID",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Filter by workers that are available or unavailable. (Note: This can be 'true', '1' or 'yes' to indicate a true value. All other values will represent false)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a worker's friendly name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkersExpression",
            "in": "query",
            "description": "Filter by workers that would match an expression on a TaskQueue. This is helpful for debugging which workers would match a potential queue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Filter by workers that are eligible for a TaskQueue by Friendly Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter by workers that are eligible for a TaskQueue by SID",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "String representing user-friendly name for the Worker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": "A valid Activity describing the worker's initial state. See Activities for more information. If not provided, new Workers will be use the DefaultActivitySid configured on the Workspace.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "JSON object describing this worker. For example: `{ 'email: 'Bob@foo.com', 'phone': '8675309' }`. This data will be passed to the Assignment Callback URL whenever TaskRouter assigns a Task to this worker. Defaults to {}.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Capacity",
            "in": "query",
            "description": "The total number of Tasks worker should handle for this TaskChannel type. TaskRouter will only create reservations for Tasks of this TaskChannel type up to the capacity configured. If the capacity is 0, no new reservations will be created",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Toggle the availability of the WorkerChannel. Set this to 'False' to make worker unavailable to receive any new Tasks of this TaskChannel type.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Filter by a worker's reservation status (pending, accepted, rejected, timeout, canceled, rescinded)",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          {
            "name": "WorkerActivitySid",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Instruction",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeuePostWorkActivitySid",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DequeueFrom",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueTimeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DequeueTo",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallFrom",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallTimeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CallTo",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallUrl",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallStatusCallbackUrl",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallAccept",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectCallSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RedirectAccept",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "initiated",
                  "ringing",
                  "answered",
                  "completed"
                ]
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "start",
                  "end",
                  "join",
                  "leave",
                  "mute",
                  "hold",
                  "speaker"
                ]
              }
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PostWorkActivitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndConferenceOnCustomerExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BeepOnCustomerEntrance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter the real-time and cumulative statistics based on Workers tied to a particular queue",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Filter the real-time and cumulative statistics based on Workers tied to a particular queue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a string of the format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this Workflow (for example \"Customer Support\" or \"2014 Election Campaign\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string representing a human readable name for this Workflow. Examples include 'Inbound Call Workflow' or '2014 Outbound Campaign'.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "JSON document configuring the rules for this Workflow. See [Configuring Workflows](https://www.twilio.com/docs/api/taskrouter/workflow-configuration) for more information.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentCallbackUrl",
            "in": "query",
            "description": "A valid URL for the application that will process task assignment events. See [Handling Task Assignment Callback](https://www.twilio.com/docs/api/taskrouter/handling-assignment-callbacks) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackAssignmentCallbackUrl",
            "in": "query",
            "description": "If the request to the AssignmentCallbackUrl fails, the assignment callback will be made to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "TaskReservationTimeout",
            "in": "query",
            "description": "An integer value controlling how long in seconds TaskRouter will wait for a confirmation response from your application after assigning a Task to a worker. See Task Assignment Callback for more information. Defaults to 120 seconds. Maximum value is 86400 (24 hours)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string representing a human readable name for this Workflow. Examples include 'Customer Support' or 'Sales Team'.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentCallbackUrl",
            "in": "query",
            "description": "A valid URL for the application that will process task assignment events. See [Handling Task Assignment Callback](https://www.twilio.com/docs/api/taskrouter/handling-assignment-callbacks) for more details.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackAssignmentCallbackUrl",
            "in": "query",
            "description": "If the request to the AssignmentCallbackUrl fails, the assignment callback will be made to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "JSON document configuring the rules for this Workflow. See [Configuring Workflows](https://www.twilio.com/docs/api/taskrouter/workflow-configuration) for more information.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskReservationTimeout",
            "in": "query",
            "description": "An integer value controlling how long in seconds TaskRouter will wait for a confirmation response from your application after assigning a Task to a worker. Defaults to 120 seconds. Maximum value is 86400 (24 hours)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a workspace's friendly name. This is a human readable description of this Workspace (for example \"Customer Support\" or \"2014 Election Campaign\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this workspace (for example \"Customer Support\" or \"2014 Election Campaign\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EventCallbackUrl",
            "in": "query",
            "description": "If provided, the Workspace will publish events to this URL. You can use this to gather data for reporting. See Workspace Events for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EventsFilter",
            "in": "query",
            "description": "Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace. For example if 'EventsFilter=task.created,task.canceled,worker.activity.update', then TaskRouter will webhook to EventCallbackUrl only when a task is created, canceled or a worker activity is updated.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MultiTaskEnabled",
            "in": "query",
            "description": "Multi tasking allows workers to handle multiple tasks simultaneously. When enabled (MultiTaskEnabled=true), each worker will be eligible to receive parallel reservations up to the per-channel maximums defined in the Workers section. Default is disabled (MultiTaskEnabled=false), where each worker will only receive a new reservation when the previous task is completed. Learn more by visiting [Multitasking][/docs/taskrouter/multitasking].",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Template",
            "in": "query",
            "description": "One of the available template names. Will pre-configure this Workspace with the Workflow and Activities specified in the template. \"NONE\" will create a Workspace with a set of default activities and nothing else. \"FIFO\" will configure TaskRouter with a set of default activities and a single task queue for first-in, first-out distribution, useful if you want to see a simple TaskRouter configuration when getting started. Defaults to \"NONE\".",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrioritizeQueueOrder",
            "in": "query",
            "description": "Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues. Default is FIFO. [Click here][/docs/taskrouter/queue-ordering-last-first-out-lifo] to learn more about LIFO and the use of the parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultActivitySid",
            "in": "query",
            "description": "The ID of the Activity that will be used when new Workers are created in this Workspace.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EventCallbackUrl",
            "in": "query",
            "description": "The Workspace will publish events to this URL. You can use this to gather data for reporting. See [Events][/docs/taskrouter/api/events] for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EventsFilter",
            "in": "query",
            "description": "Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace. For example if 'EventsFilter=task.created,task.canceled,worker.activity.update', then TaskRouter will webhook to EventCallbackUrl only when a task is created, canceled or a worker activity is updated.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this workspace (for example \"Sales Call Center\" or \"Customer Support Team\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MultiTaskEnabled",
            "in": "query",
            "description": "Enable or Disable Multitasking by passing either *true* or *False* with the POST request. Learn more by visiting [Multitasking][/docs/taskrouter/multitasking].",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TimeoutActivitySid",
            "in": "query",
            "description": "The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PrioritizeQueueOrder",
            "in": "query",
            "description": "Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues. Default is FIFO. [Click here][/docs/taskrouter/queue-ordering-last-first-out-lifo] to learn more about LIFO and the use of the parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Workspaces/{WorkspaceSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past. This is helpful for statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends. Defaults to 15 minutes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date. This is helpful for defining a range of statistics to capture. Input is a GMT ISO 8601 Timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel. Takes in a Unique Name (\"voice\", \"sms\", \"default\", etc.) or a TaskChannelSid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds. Ex: \"5,30\" would show splits of tasks that were canceled or accepted before or after 5 seconds and respectively, 30 seconds. This is great for showing short abandoned tasks or tasks that failed to meet your SLA.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/CredentialLists": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "The SID of the [Credential List](https://www.twilio.com/docs/api/rest/credential-list) that you want to associate with this trunk. Once associated, Twilio will start authenticating access to the trunk against this list.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/CredentialLists/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/IpAccessControlLists": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": "Associate an IP Access Control List with a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "The SID of the [IP Access Control List](https://www.twilio.com/docs/api/rest/ip-access-control-list) that you want to associate with this trunk.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "List all IP Access Control Lists for a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/IpAccessControlLists/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Remove an associated IP Access Control List from a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/OriginationUrls": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Weight",
            "in": "query",
            "description": "Weight is used to determine the share of load when more than one URI has the same priority. Its values range from 1 to 65535. The higher the value, the more load a URI is given. Defaults to 10.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Priority ranks the importance of the URI. Values range from 0 to 65535, where the lowest number represents the highest importance. Defaults to 10.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "A boolean value indicating whether the URL is enabled or disabled. Defaults to true.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipUrl",
            "in": "query",
            "description": "The SIP address you want Twilio to route your Origination calls to. This must be a `sip:` schema.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/OriginationUrls/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Weight",
            "in": "query",
            "description": "Weight is used to determine the share of load when more than one URI has the same priority. Its values range from 1 to 65535. The higher the value, the more load a URI is given. Defaults to 10.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Priority ranks the importance of the URI. Values range from 0 to 65535, where the lowest number represents the highest importance. Defaults to 10.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "A boolean value indicating whether the URL is enabled or disabled. Defaults to true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text, up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipUrl",
            "in": "query",
            "description": "The SIP address you want Twilio to route your Origination calls to. This must be a `sip:` schema. `sips` is NOT supported",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/PhoneNumbers": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumberSid",
            "in": "query",
            "description": "The SID of the [Incoming Phone Number](https://www.twilio.com/docs/api/rest/incoming-phone-numbers) that you want to associate with this trunk.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks/{TrunkSid}/PhoneNumbers/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Trunks": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Trunk.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must always end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking/getting-started#termination) for more information.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisasterRecoveryUrl",
            "in": "query",
            "description": "The HTTP URL that Twilio will request if an error occurs while sending SIP traffic towards your configured Origination URL. Twilio will retrieve TwiML from this URL and execute those instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking/getting-started#disaster-recovery) for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "DisasterRecoveryMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the `DisasterRecoveryUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Recording",
            "in": "query",
            "description": "The recording settings for this trunk. If turned on, all calls going through this trunk will be recorded and the recording can either start when the call is ringing or when the call is answered. See [Recording](https://www.twilio.com/docs/sip-trunking/getting-started#recording) for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "do-not-record",
                "record-from-ringing",
                "record-from-answer"
              ]
            }
          },
          {
            "name": "Secure",
            "in": "query",
            "description": "The Secure Trunking  settings for this trunk. If turned on, all calls going through this trunk will be secure using SRTP for media and TLS for signalling. If turned off, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking/getting-started#securetrunking) for more information.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CnamLookupEnabled",
            "in": "query",
            "description": "The Caller ID Name (CNAM) lookup setting for this trunk. If turned on, all inbound calls to this SIP Trunk from the United States and Canada will automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM](https://www.twilio.com/docs/sip-trunking#CNAM) Lookups for more information.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Trunks/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Trunk.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must always end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking/getting-started#termination) for more information.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisasterRecoveryUrl",
            "in": "query",
            "description": "The HTTP URL that Twilio will request if an error occurs while sending SIP traffic towards your configured Origination URL. Twilio will retrieve TwiML from this URL and execute those instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking/getting-started#disaster-recovery) for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "DisasterRecoveryMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the `DisasterRecoveryUrl`. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Recording",
            "in": "query",
            "description": "The recording settings for this trunk. If turned on, all calls going through this trunk will be recorded and the recording can either start when the call is ringing or when the call is answered. See [Recording](https://www.twilio.com/docs/sip-trunking/getting-started#recording) for more information.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "do-not-record",
                "record-from-ringing",
                "record-from-answer"
              ]
            }
          },
          {
            "name": "Secure",
            "in": "query",
            "description": "The Secure Trunking  settings for this trunk. If turned on, all calls going through this trunk will be secure using SRTP for media and TLS for signalling. If turned off, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking/getting-started#securetrunking) for more information.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CnamLookupEnabled",
            "in": "query",
            "description": "The Caller ID Name (CNAM) lookup setting for this trunk. If turned on, all inbound calls to this SIP Trunk from the United States and Canada will automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM](https://www.twilio.com/docs/sip-trunking#CNAM) Lookups for more information.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Compositions": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "List of all Recording Compositions.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Compositions with the given status.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Compositions that started on or after this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Compositions that started before this this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "RoomSid",
            "in": "query",
            "description": "Only show Compositions with the given Room SID.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "query",
            "description": "Group Room SID owning the media tracks to be used as Composition sources.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VideoLayout",
            "in": "query",
            "description": "A JSON object defining the video layout of the Composition in terms of regions. See the section [Managing Video Layouts](#managing-video-layouts) below for further information.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "AudioSources",
            "in": "query",
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include: \n* Zero or more `RecordingTrackSid`\n* Zero or more `MediaTrackSid`\n* Zero or more `ParticipantSid`\n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the target room had audio tracks.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 34,
                "maxLength": 34,
                "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
              }
            }
          },
          {
            "name": "AudioSourcesExcluded",
            "in": "query",
            "description": "An array of audio sources to exclude from the Composition. Any new Composition shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include: \n* Zero or more `RecordingTrackSid`\n* Zero or more `MediaTrackSid`\n* Zero or more `ParticipantSid`\n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Resolution",
            "in": "query",
            "description": "A string representing the numbers of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: \n* `width >= 16 && width <= 1280`\n* `height >= 16 && height <= 1280`\n* `width * height <= 921,600`\nTypical values are: \n* HD = `1280x720`\n* PAL = `1024x576`\n* VGA = `640x480`\n* CIF = `320x240`\nNote that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `640x480`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Format",
            "in": "query",
            "description": "Container format of the Composition media file. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "mp4",
                "webm"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "When activated, clips all the Composition intervals where there is no active media. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Compositions/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Composition Instance resource identified by a CompositionSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Composition Sid that uniquely identifies the Composition to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Recording Composition Instance resource identified by a `CompositionSid`.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Composition Sid that uniquely identifies the Recording Composition to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/CompositionHooks": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "List of all Recording Composition Hooks.",
        "parameters": [
          {
            "name": "Enabled",
            "in": "query",
            "description": "Only show Composition Hooks that are enabled or disabled.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Composition Hooks created on or after this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Composition Hooks created before this this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of the Composition Hook to be shown in the console.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "When activated, the Composition Hook is enabled and a composition will be triggered for every Video room completed by this account from this point onwards; `false` indicates the Composition Hook is left inactive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VideoLayout",
            "in": "query",
            "description": "A JSON object defining the video layout of the Composition Hook in terms of regions. See the section [Managing Video Layouts](#managing-video-layouts) below for further information.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "AudioSources",
            "in": "query",
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include: \n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the Group Room had audio tracks.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AudioSourcesExcluded",
            "in": "query",
            "description": "An array of audio sources to exclude from the Composition Hook. Any new Composition triggered by the Composition Hook shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include: \n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Resolution",
            "in": "query",
            "description": "A string representing the numbers of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: \n* `width >= 16 && width <= 1280`\n* `height >= 16 && height <= 1280`\n* `width * height <= 921,600`\nTypical values are: \n* HD = `1280x720`\n* PAL = `1024x576`\n* VGA = `640x480`\n* CIF = `320x240`\nNote that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `640x480`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Format",
            "in": "query",
            "description": "Container format of the Composition media files created by the Composition Hook. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "mp4",
                "webm"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "When activated, clips all the intervals where there is no active media in the Compositions triggered by the Composition Hook. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/CompositionHooks/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Composition Hook Instance resource identified by a CompositionHookSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Composition Hook Sid that uniquely identifies the Composition Hook to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Recording Composition Hook Instance resource identified by a `CompositionHookSid`.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Composition Hook Sid that uniquely identifies the Recording Composition Hook to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "`HKxx\u2026xx` A system-generated 34-character string that uniquely identifies this Composition Hook.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of the Composition Hook to be shown in the console.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "When activated, the Composition Hook is enabled and a composition will be triggered for every Video room completed by this account from this point onwards; `false` indicates the Composition Hook is left inactive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VideoLayout",
            "in": "query",
            "description": "A JSON object defining the video layout of the Composition Hook in terms of regions. See the section [Managing Video Layouts](#managing-video-layouts) below for further information.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "AudioSources",
            "in": "query",
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include: \n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the Group Room had audio tracks.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AudioSourcesExcluded",
            "in": "query",
            "description": "An array of audio sources to exclude from the Composition Hook. Any new Composition triggered by the Composition Hook shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include: \n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "When activated, clips all the intervals where there is no active media in the Compositions triggered by the Composition Hook. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `true`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Format",
            "in": "query",
            "description": "Container format of the Composition media files created by the Composition Hook. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "mp4",
                "webm"
              ]
            }
          },
          {
            "name": "Resolution",
            "in": "query",
            "description": "A string representing the numbers of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: \n* `width >= 16 && width <= 1280`\n* `height >= 16 && height <= 1280`\n* `width * height <= 921,600`\nTypical values are: \n* HD = `1280x720`\n* PAL = `1024x576`\n* VGA = `640x480`\n* CIF = `320x240`\nNote that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Managing Video Layouts](#managing-video-layouts) section. Defaults to `640x480`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Compositions/{CompositionSid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves the media file associated to a given Composition Instance resource identified by a `CompositionSid`.",
        "parameters": [
          {
            "name": "CompositionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Duration in seconds for which the `redirect_to` URL can be used to retrieve the media file. The maximum expiration time is 7 days (604800)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "Sets the `Content-Disposition` header of the `redirect_to` URL. Possible values are `attachment` or `inline`. Default value `attachment%3B%20filename%3D%22CJxx.xxx%22`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/CompositionSettings/Default": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of the configuration to be shown in the console",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AwsCredentialsSid",
            "in": "query",
            "description": "SID of the Stored Credential resource `CRxx`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EncryptionKeySid",
            "in": "query",
            "description": "SID of the Public Key resource `CRxx`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AwsS3Url",
            "in": "query",
            "description": "Identity of the external location where the compositions should be stored. We only support DNS-compliant URLs like `http://<my-bucket>.s3-<aws-region>.amazonaws.com/compositions`,  where `compositions` is the path where you want compositions to be stored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AwsStorageEnabled",
            "in": "query",
            "description": "`true|false` When set to `true`, all Compositions will be written to the `AwsS3Url` specified above. When set to `false`, all Compositions will be stored in Twilio's cloud.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EncryptionEnabled",
            "in": "query",
            "description": "`true|false` When set to `true`, all Compositions will be stored encrypted. Dafault value is `false`",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Recordings": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "List of all Track Recordings.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Recordings with the given status.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          {
            "name": "SourceSid",
            "in": "query",
            "description": "Only show the Recordings with the given source Sid (you can use this to filter Recordings by `TrackSid` for Video Room Recordings.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "GroupingSid",
            "in": "query",
            "description": "Only show Recordings that have this GroupingSid, which may include a ParticipantSid and/or a RoomSid.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 34,
                "maxLength": 34,
                "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
              }
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Recordings that started on or after this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Recordings that started before this this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Recordings/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Sid that uniquely identifies the Recording to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Sid that uniquely identifies the Recording to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Recordings/{RecordingSid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves the media file associated to a given Recording Instance resource identified by a `RecordingSid`.",
        "parameters": [
          {
            "name": "RecordingSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Duration in seconds for which the `redirect_to` URL can be used to retrieve the media file. The maximum expiration time is 7 days (604800)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "Sets the `Content-Disposition` header of the `redirect_to` URL. Possible values are `attachment` or `inline`. Default value `attachment%3B%20filename%3D%22RTxx.xxx%22`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/RecordingSettings/Default": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name of the configuration to be shown in the console",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AwsCredentialsSid",
            "in": "query",
            "description": "SID of the Stored Credential resource `CRxx`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EncryptionKeySid",
            "in": "query",
            "description": "SID of the Public Key resource `CRxx`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AwsS3Url",
            "in": "query",
            "description": "Identity of the external location where the recordings should be stored. We only support DNS-compliant URLs like `http://<my-bucket>.s3-<aws-region>.amazonaws.com/recordings`, where `recordings` is the path where you want recordings to be stored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AwsStorageEnabled",
            "in": "query",
            "description": "`true|false` When set to `true`, all Recordings will be written to the `AwsS3Url` specified above. When set to `false`, all Recordings will be stored in Twilio's cloud.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EncryptionEnabled",
            "in": "query",
            "description": "`true|false` When set to `true`, all Recordings will be stored encrypted. Dafault value is `false`",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "EnableTurn",
            "in": "query",
            "description": "Use Twilio Network Traversal for TURN service. Defaults to true. Only applicable to Rooms with type `peer-to-peer`.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Type of room, either `peer-to-peer`, `group-small` or `group`. Will be `group` by default.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "peer-to-peer",
                "group",
                "group-small"
              ]
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Name of the Room.  This is unique for `in-progress` rooms. If not provided, Room name will be set to the Room Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio sends asynchronous webhook requests to on every room event. If not provided, status callback events will not be dispatched.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": "Maximum number of Participants in the Room. Peer-to-peer rooms can have a maximum of 10 Participants. Small Group rooms can have a max of 4 Participants. Group rooms can have a max of 50 Participants",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RecordParticipantsOnConnect",
            "in": "query",
            "description": "Start Participant recording when connected. ***This feature is not available in `peer-to-peer` rooms.***",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VideoCodecs",
            "in": "query",
            "description": "An array of video codecs supported when publishing a Track in the Room.  `VP8` and `H264` codecs are supported.  ***This feature is not available in `peer-to-peer` rooms***",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "VP8",
                  "H264"
                ]
              }
            }
          },
          {
            "name": "MediaRegion",
            "in": "query",
            "description": "Region for the media server in Group Rooms.  Default region is `us1`.  See the list of [available Media Regions.](https://www.twilio.com/docs/api/video/ip-address-whitelisting#group-rooms-media-servers)***This feature is not available in `peer-to-peer` rooms.***",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Rooms with the given status.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Only show Rooms with the provided Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Rooms that started on or after this date, given as `YYYY-MM-DD`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Rooms that started before this date, given as `YYYY-MM-DD`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Set to `completed` to end the Room.",
            "required": true,
            "schema": {
              "type": "string",
              "enums": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Participants": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Participants with the given Status.  For `in-progress` Rooms the default Status is `connected`, for `completed` Rooms only `disconnected` Participants are returned.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "connected",
                "disconnected"
              ]
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Only show Participants that connected to the Room using the provided Identity.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Participants that started after this date, given as an [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Participants that started before this date, given as an [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Set to `disconnected` to remove participant.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "connected",
                "disconnected"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a list of tracks associated with a given Participant. Only `currently` Published Tracks are in the list resource.",
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": "Unique Room identifier where this Track is published.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": "Unique Participant identifier that publishes this Track.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Track resource represented by `TrackNameOrSid`.",
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": "Unique Room identifier where this Track is published.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": "Unique Participant identifier that publishes this Track.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Participants/{SubscriberSid}/SubscribedTracks": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SubscriberSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Track",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Publisher",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Kind",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SubscriberSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Track",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Publisher",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Kind",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "subscribe",
                "unsubscribe"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Recordings": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          {
            "name": "SourceSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Recordings/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Rooms/{RoomSid}/Recordings/{Sid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/AlphaSenders": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AlphaSender",
            "in": "query",
            "description": "An Alphanumeric Sender ID string, up to 11 characters. Valid characters are A-Z, a-z, 0-9, space and dash ( - ). An Alphanumeric Sender ID string cannot be comprised of only numbers.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/AlphaSenders/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{MessagingServiceSid}/Broadcasts": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The 34 character unique sid of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "A single colon-delimited address.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "Body of the message to be sent.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaUrl",
            "in": "query",
            "description": "The list of urls.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Integer number in range [1, 14400].",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{MessagingServiceSid}/Broadcasts/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ]
    },
    "/v1/Services/{MessagingServiceSid}/Messages": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The 34 character unique sid of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "A single colon-delimited address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "Body of the message to be sent.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaUrl",
            "in": "query",
            "description": "The list of urls.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "A single colon-delimited address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Integer number in range [1, 14400].",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{MessagingServiceSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ]
    },
    "/v1/Sessions": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Sessions/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sessions/{SessionSid}/Messages": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Author",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sessions/{SessionSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sessions/{SessionSid}/Participants": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TwilioAddress",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sessions/{SessionSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "SessionSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Commands": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Commands from your account.",
        "parameters": [
          {
            "name": "Sim",
            "in": "query",
            "description": "Only return Commands to or from this SIM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only return Commands with this status value.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "queued",
                "sent",
                "delivered",
                "received",
                "failed"
              ]
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "description": "Only return Commands with this direction value.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "from_sim",
                "to_sim"
              ]
            }
          },
          {
            "name": "Transport",
            "in": "query",
            "description": "Only return Commands with this transport value.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "sms",
                "ip"
              ]
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Send a Command to a Sim.",
        "parameters": [
          {
            "name": "Command",
            "in": "query",
            "description": "The message body of the Command (in text mode) or a Base64 encoded byte string in binary mode.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sim",
            "in": "query",
            "description": "The Sid or UniqueName of the [SIM](https://www.twilio.com/docs/api/wireless/rest-api/sim) to send the Command to.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making a request to the callback URL (valid options are GET or POST). Defaults to POST.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this URL when the Command has finished sending (delivered or failed).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CommandMode",
            "in": "query",
            "description": "A string representing which mode to send the SMS message using. May be `text` or `binary`. If omitted, the default SMS mode is `text`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "text",
                "binary"
              ]
            }
          },
          {
            "name": "IncludeSid",
            "in": "query",
            "description": "When sending a Command to a SIM in text mode, Twilio can automatically include the Sid of the Command in the message body, which could be used to ensure that the device does not process the same Command more than once. The options for inclusion are `none`, `start` and `end`. The default behavior is `none`. When using `start` or `end`, the CommandSid will be prepended or appended to the message body, with a space character separating the CommandSid and the message body. The length of the CommandSid contributes toward the 160 character limit, i.e. the SMS body must be 128 characters or less before the Command Sid is included.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryReceiptRequested",
            "in": "query",
            "description": "A boolean representing whether to request delivery receipt from the recipient. For Commands that request delivery receipt, the Command state transitions to 'delivered' once the server has received a delivery receipt from the device. Defaults to true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Commands/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a Command instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Command instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sims/{SimSid}/DataSessions": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "End",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/RatePlans": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. Non-unique.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of using GPRS/3G/LTE data connectivity.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DataLimit",
            "in": "query",
            "description": "Network-enforced limit specifying the total Megabytes of data usage (download and upload combined) allowed during one month on the home network. Metering begins on the day of activation and ends on the same day of the following month.  Max value is 2TB.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DataMetering",
            "in": "query",
            "description": "The model by which to meter data usage, in accordance with the two available [data metering models](https://www.twilio.com/docs/api/wireless/rest-api/rate-plan#explanation-of-pooled-vs-individual). Valid options are `pooled` and `individual`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MessagingEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of making and sending and receiving SMS messages via either [Commands](https://www.twilio.com/docs/wireless/api/commands) or Programmable SMS APIs.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of making and receiving voice calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NationalRoamingEnabled",
            "in": "query",
            "description": "Defines whether SIMs can roam onto other networks in the SIM's home country. See ['national' roaming](https://www.twilio.com/docs/api/wireless/rest-api/rate-plan#national-roaming).",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InternationalRoaming",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "NationalRoamingDataLimit",
            "in": "query",
            "description": "Network-enforced limit specifying the total Megabytes of national roaming data usage (download and upload combined) allowed during one month.  Max value is 2TB. If unspecified, the default value is the lesser of `DataLimit` and 1000MB.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InternationalRoamingDataLimit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/RatePlans/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. Non-unique.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sims": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Sims from your account.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only return Sims with this status.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          {
            "name": "Iccid",
            "in": "query",
            "description": "Return Sims with this Iccid. Currently this should be a list with maximum size 1.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": "Only return Sims with this Rate Plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EId",
            "in": "query",
            "description": "Only return Sims with this EID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SimRegistrationCode",
            "in": "query",
            "description": "Only return Sims with this registration code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sims/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Updates the given properties of a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the `Sid`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making a request to the callback URL (valid options are GET or POST). Defaults to POST.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this URL when the Sim has finished updating. In the case of a transition from the Sim's `new` status to its `ready` status, or from any status to its `deactivated` status, you will receive two callbacks. One when the Sim moves to its intermediary status (`ready` or `deactivated`), and a second when it transitions to its final status (`active` or `canceled`).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource. Non-unique.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": "The Sid or UniqueName of the [RatePlan](https://www.twilio.com/docs/api/wireless/rest-api/rate-plan) that this Sim should use. *Note:* the RatePlan of a Sim can only be modified when the Sim has a `suspended` or `deactivated` status.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string representing the status of the Sim. Valid options depend on the current state of the Sim, but may include `ready`, `active`, `suspended` or `deactivated`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          {
            "name": "CommandsCallbackMethod",
            "in": "query",
            "description": "A string representing the HTTP method to use when making a request to `CommandsCallbackUrl`.  Can be one of `POST` or `GET`. Defaults to `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CommandsCallbackUrl",
            "in": "query",
            "description": "The URL that will receive a webhook when this Sim originates a [Command](https://www.twilio.com/docs/api/wireless/rest-api/command). Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the sms_fallback_url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `sms_url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above Url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when the SIM-connected device sends an SMS message that is not a [Command](https://www.twilio.com/docs/api/wireless/rest-api/command).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the voice_fallback_url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `voice_url`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above Url. Either `GET` or `POST`.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL Twilio will request when the SIM-connected device makes a call.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Sims/{SimSid}/UsageRecords": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "End",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date. Format is [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date. Format is [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Granularity",
            "in": "query",
            "description": "The time-based grouping that results are aggregated by. Valid values are `daily`, `hourly`, `all`. `all` will return one Usage Record for the entire period.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "hourly",
                "daily",
                "all"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Documents": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Human-readable name for this document",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "JSON data to be stored in this document",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Time-to-live of this Document in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Documents/{Sid}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Contains an arbitrary JSON object to be stored in this Document. Serialized to string to respect HTTP form input, up to 16KB.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "New time-to-live of this Document in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can update the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync Document.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Streams/{StreamSid}/Messages": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Stream Message.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StreamSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "The body of the Stream Message. Arbitrary JSON object, maximum size 4KB.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Human-readable name for this list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists/{Sid}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Items": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Contains arbitrary user-defined, schema-less data that this List Item stores, represented by a JSON object, up to 16KB.",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ItemTtl",
            "in": "query",
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the list item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this item's parent List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the list item's data or ttl is updated in the same request.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": "A string; `asc` or `desc`",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "An integer representing Item index offset (inclusive). If not present, query is performed from the start or end, depending on the Order query parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "inclusive",
                "exclusive"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Index",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Contains arbitrary user-defined, schema-less data that this List Item stores, represented by a JSON object, up to 16KB.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ItemTtl",
            "in": "query",
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the list item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this item's parent List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the list item's data or ttl is updated in the same request.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync List.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Human-readable name for this map",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps/{Sid}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "New time-to-live of this Map in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Items": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "description": "The unique user-defined key of this Map Item. Up to 256 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Contains arbitrary user-defined, schema-less data that this Map Item stores, represented by a JSON object, up to 16KB.",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ItemTtl",
            "in": "query",
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the map item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this item's parent Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the map item's data or ttl is updated in the same request.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": "A string; asc or desc. Map Items are [ordered lexicographically](https://en.wikipedia.org/wiki/Lexicographical_order) by Item key.",
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The Item key offset (including the specified key). If not present, query is performed from the start or end, depending on the Order query parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enums": [
                "inclusive",
                "exclusive"
              ]
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Contains an arbitrary JSON object to be stored in this Map Item. Serialized to string to respect HTTP form input, up to 16KB.",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ItemTtl",
            "in": "query",
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the map item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CollectionTtl",
            "in": "query",
            "description": "Time-to-live of this item's parent Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the map item's data or ttl is updated in the same request.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Read",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can read the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Write",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Manage",
            "in": "query",
            "description": "Boolean flag specifying whether the identity can delete the Sync Map.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Streams": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Stream.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "The unique and addressable name of this Stream. Optional, up to 256 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Time-to-live of this Stream in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      },
      "get": {
        "description": "Retrieve a list of all Streams in a Service Instance.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Streams/{Sid}": {
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Stream.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Identifier of the Stream. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Stream.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Identifier of the Stream. Either a SID or a unique name.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Update a specific Stream.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "New time-to-live of this Stream in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Engagements for the Flow.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Triggers a new Engagement for the Flow",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The Contact phone number to start a Studio Flow Engagement, available as variable {{contact.channel.address}}.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The Twilio phone number to send messages or initiate calls from during the Flow Engagement, available as variable {{flow.channel.address}}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": "JSON data that will be added to your flow's context and can accessed as variables inside your flow. For example, if you pass in Parameters={'name':'Zeke'} then inside a widget you can reference the variable {{flow.data.name}} which will return the string 'Zeke'. Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve an Engagement",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete this Engagement and all Steps relating to it.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the most recent context for an Engagement.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Executions for the Flow.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedFrom",
            "in": "query",
            "description": "Only show Executions that started on or after this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedTo",
            "in": "query",
            "description": "Only show Executions that started before this this ISO8601 date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": null
      },
      "post": {
        "description": "Triggers a new Execution for the Flow",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The Contact phone number to start a Studio Flow Execution, available as variable {{contact.channel.address}}.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The Twilio phone number to send messages or initiate calls from during the Flow Execution, available as variable {{flow.channel.address}}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": "JSON data that will be added to your flow's context and can accessed as variables inside your flow. For example, if you pass in `Parameters={\"name\":\"Zeke\"}`, then inside a widget you can reference the variable `{{flow.data.name}}` which will return the string \"Zeke\". Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve an Execution",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete this Execution and all Steps relating to it.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the most recent context for an Execution.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Steps for an Execution.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Step.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{StepSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the context for an Execution Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "The unique SID identifier of the Execution.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StepSid",
            "in": "path",
            "description": "The unique SID identifier of the Step.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Flows.",
        "parameters": [],
        "responses": null
      }
    },
    "/v1/Flows/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a specific Flow.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      },
      "delete": {
        "description": "Delete a specific Flow.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Steps for an Engagement.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Step.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{StepSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the context for an Engagement Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "The unique SID identifier of the Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "The unique SID identifier of the Engagement.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StepSid",
            "in": "path",
            "description": "The unique SID identifier of the Step.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/Verifications": {
      "servers": [
        {
          "url": "https://verify.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Verification for a To number using a Service",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Service.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The To phonenumber of the phone being verified",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Channel",
            "in": "query",
            "description": "The method in which the phone will be verified. Either sms or call",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomMessage",
            "in": "query",
            "description": "A character string containing a custom message for this verification",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SendDigits",
            "in": "query",
            "description": "Digits to send when a phone call is started, same parameters as in Programmable Voice are supported",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Locale",
            "in": "query",
            "description": "Supported values are af, ar, ca, cs, da, de, el, en, es, fi, fr, he, hi, hr, hu, id, it, ja, ko, ms, nb, nl, pl, pt, pr-BR, ro, ru, sv, th, tl, tr, vi, zh, zh-CN, zh-HK",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomCode",
            "in": "query",
            "description": "Pass in a pre-generated code. Code length can be between 4-10 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Services/{ServiceSid}/VerificationCheck": {
      "servers": [
        {
          "url": "https://verify.twilio.com"
        }
      ],
      "post": {
        "description": "challenge a specific Verification Check.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Verify Service to be used to check a verification. In order to check a code this parameter has to be set.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Code",
            "in": "query",
            "description": "The 4-10 character string being verified",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The To phonenumber of the phone being verified",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/DialingPermissions": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ]
    },
    "/v1/DialingPermissions/Countries": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve all voice dialing country permissions for this account",
        "parameters": [
          {
            "name": "IsoCode",
            "in": "query",
            "description": "Filter to retrieve the country permissions by specifying the [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Continent",
            "in": "query",
            "description": "Filter to retrieve the country permissions by specifying the continent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "description": "Filter the results by specified [country codes](https://www.itu.int/itudoc/itu-t/ob-lists/icc/e164_763.html)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LowRiskNumbersEnabled",
            "in": "query",
            "description": "Filter to retrieve the country permissions with dialing to low-risk numbers enabled set to true / false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HighRiskSpecialNumbersEnabled",
            "in": "query",
            "description": "Filter to retrieve the country permissions with dialing to high-risk special service numbers enabled set to true / false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HighRiskTollfraudNumbersEnabled",
            "in": "query",
            "description": "Filter to retrieve the country permissions with dialing to high-risk [toll fraud](https://www.twilio.com/learn/voice-and-video/toll-fraud) numbers enabled set to true / false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/DialingPermissions/Countries/{IsoCode}": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve voice dialing country permissions identified by the given ISO country code",
        "parameters": [
          {
            "name": "IsoCode",
            "in": "path",
            "description": "The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/DialingPermissions/BulkCountryUpdates": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ],
      "post": {
        "description": "Create a bulk update request to change voice dialing country permissions of one or more countries identified by the corresponding [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
        "parameters": [
          {
            "name": "UpdateRequest",
            "in": "query",
            "description": "URL encoded JSON array of update objects. example : [ { \"iso_code\": \"GB\", \"low_risk_numbers_enabled\": \"true\", \"high_risk_special_numbers_enabled\":\"true\", \"high_risk_tollfraud_numbers_enabled\": \"false\" } ]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/DialingPermissions/Countries/{IsoCode}/HighRiskSpecialPrefixes": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the high-risk special services prefixes from the country resource corresponding to the [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
        "parameters": [
          {
            "name": "IsoCode",
            "in": "path",
            "description": "The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to identify the country permissions from which high-risk special service number prefixes are fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Settings": {
      "servers": [
        {
          "url": "https://voice.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve voice dialing permissions inheritance for this sub-account",
        "parameters": [],
        "responses": null
      },
      "post": {
        "description": "Update voice dialing permissions inheritance for this sub-account",
        "parameters": [
          {
            "name": "DialingPermissionsInheritance",
            "in": "query",
            "description": "Set to true for this sub-account to inherit voice dialing permissions and blacklist/whitelist from the Master Project, else false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": null
      }
    },
    "/v1/Voice/{CallSid}/Summary": {
      "servers": [
        {
          "url": "https://insights.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "CallSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": null
      }
    }
  },
  "components": {
    "schemas": {
      "accounts.v1.credential": {
        "type": "object",
        "properties": {}
      },
      "accounts.v1.credential.credential_aws": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "accounts.v1.credential.credential_public_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account": {
        "type": "object",
        "properties": {
          "auth_token": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "owner_account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "active",
                "suspended",
                "closed"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "Trial",
                "Full"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.address": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "city": {
            "type": {
              "type": "string"
            }
          },
          "customer_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "street": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "emergency_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "validated": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "api.v2010.account.application": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "message_status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.authorized_connect_app": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "connect_app_company_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_description": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_homepage_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "connect_app_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_local": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_machine_to_machine": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_mobile": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_national": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_shared_cost": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_toll_free": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_voip": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.balance": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "balance": {
            "type": {
              "type": "string"
            }
          },
          "currency": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.call": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "annotation": {
            "type": {
              "type": "string"
            }
          },
          "answered_by": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "caller_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "end_time": {
            "type": {
              "type": "string"
            }
          },
          "forwarded_from": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "from_formatted": {
            "type": {
              "type": "string"
            }
          },
          "group_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^GP[0-9a-fA-F]{32}$"
            }
          },
          "parent_call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "to_formatted": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.call.call_feedback": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "issues": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ]
              }
            }
          },
          "quality_score": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.call.call_feedback_summary": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_count": {
            "type": {
              "type": "integer"
            }
          },
          "call_feedback_count": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "include_subaccounts": {
            "type": {
              "type": "boolean"
            }
          },
          "issues": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "quality_score_average": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_median": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_standard_deviation": {
            "type": {
              "type": "number"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "in-progress",
                "completed",
                "failed"
              ]
            }
          }
        }
      },
      "api.v2010.account.call.call_notification": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.call.call_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enums": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        }
      },
      "api.v2010.account.conference": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "init",
                "in-progress",
                "completed"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.conference.conference_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enums": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.connect_app": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "authorize_redirect_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "company_name": {
            "type": {
              "type": "string"
            }
          },
          "deauthorize_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "deauthorize_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "homepage_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.address.dependent_phone_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "emergency_status": {
            "type": {
              "type": "string",
              "enums": [
                "Active",
                "Inactive"
              ]
            }
          },
          "emergency_address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "emergency_status": {
            "type": {
              "type": "string",
              "enums": [
                "Active",
                "Inactive"
              ]
            }
          },
          "emergency_address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on.incoming_phone_number_assigned_add_on_extension": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "assigned_add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_local": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_mobile": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.message.media": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "parent_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.queue.member": {
        "type": "object",
        "properties": {
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_enqueued": {
            "type": {
              "type": "string"
            }
          },
          "position": {
            "type": {
              "type": "integer"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "wait_time": {
            "type": {
              "type": "integer"
            }
          }
        }
      },
      "api.v2010.account.message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enums": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ]
            }
          },
          "error_code": {
            "type": {
              "type": "integer"
            }
          },
          "error_message": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "num_media": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "sending",
                "sent",
                "failed",
                "delivered",
                "undelivered",
                "receiving",
                "received",
                "accepted"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.message.message_feedback": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "message_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "outcome": {
            "type": {
              "type": "string",
              "enums": [
                "confirmed",
                "umconfirmed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.new_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.new_signing_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.notification": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.outgoing_caller_id": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.conference.participant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_conference_on_exit": {
            "type": {
              "type": "boolean"
            }
          },
          "muted": {
            "type": {
              "type": "boolean"
            }
          },
          "hold": {
            "type": {
              "type": "boolean"
            }
          },
          "start_conference_on_enter": {
            "type": {
              "type": "boolean"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "connecting",
                "ringing",
                "connected",
                "complete",
                "failed"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.queue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "average_wait_time": {
            "type": {
              "type": "integer"
            }
          },
          "current_size": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "max_size": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "string"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enums": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "canceled",
                "completed",
                "deleted",
                "failed",
                "in-progress",
                "init",
                "processing",
                "queued"
              ]
            }
          },
          "add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_completed": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          },
          "add_on_result_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "label": {
            "type": {
              "type": "string"
            }
          },
          "add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload.recording_add_on_result_payload_data": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.recording.recording_transcription": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.short_code": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "short_code": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.signing_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.sip": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_credential_list.sip_credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "credential_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_credential_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "sip_registration": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_ip_access_control_list": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_region": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "features": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "api.v2010.account.sms": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sms.sms_message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enums": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ]
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "sending",
                "sent",
                "failed",
                "received"
              ]
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.token": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "ice_servers": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "password": {
            "type": {
              "type": "string"
            }
          },
          "ttl": {
            "type": {
              "type": "string"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.transcription": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.usage": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.usage.usage_record": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_all_time": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_daily": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_last_month": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_monthly": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_this_month": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_today": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_yearly": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_yesterday": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_trigger": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "current_value": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_fired": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "recurring": {
            "type": {
              "type": "string",
              "enums": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          },
          "trigger_by": {
            "type": {
              "type": "string",
              "enums": [
                "count",
                "usage",
                "price"
              ]
            }
          },
          "trigger_value": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage_category": {
            "type": {
              "type": "string",
              "enums": [
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "usage_record_uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.validation_request": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "validation_code": {
            "type": {
              "type": "integer"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "authy.v1.service.entity.factor.challenge": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "entity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YE[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "factor_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_responded": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "expiration_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "pending",
                "expired",
                "approved",
                "denied"
              ]
            }
          },
          "responded_reason": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "not_needed",
                "not_requested"
              ]
            }
          },
          "details": {
            "type": {
              "type": "string"
            }
          },
          "hidden_details": {
            "type": {
              "type": "string"
            }
          },
          "factor_type": {
            "type": {
              "type": "string",
              "enums": [
                "app-push",
                "sms",
                "totp"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "authy.v1.service.entity": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YE[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "authy.v1.service.entity.factor": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "entity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^YE[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "unverified",
                "verified"
              ]
            }
          },
          "factor_type": {
            "type": {
              "type": "string",
              "enums": [
                "app-push",
                "sms",
                "totp"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "authy.v1.form": {
        "type": "object",
        "properties": {
          "form_type": {
            "type": {
              "type": "string",
              "enums": [
                "form-app-push",
                "form-sms",
                "form-totp"
              ]
            }
          },
          "forms": {
            "type": {
              "type": "object"
            }
          },
          "form_meta": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "authy.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "autopilot.v1.assistant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "latest_model_build_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "log_queries": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "callback_events": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "autopilot.v1.assistant.defaults": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "autopilot.v1.assistant.dialogue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "autopilot.v1.assistant.task.field": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "field_type": {
            "type": {
              "type": "string"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "autopilot.v1.assistant.field_type": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "autopilot.v1.assistant.field_type.field_value": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "field_type_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          },
          "value": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "synonym_of": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "autopilot.v1.assistant.model_build": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "enqueued",
                "building",
                "completed",
                "failed",
                "canceled"
              ]
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "build_duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        }
      },
      "autopilot.v1.assistant.query": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "results": {
            "type": {
              "type": "object"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "model_build_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "query": {
            "type": {
              "type": "string"
            }
          },
          "sample_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "autopilot.v1.assistant.task.sample": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          "tagged_text": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "autopilot.v1.assistant.style_sheet": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "autopilot.v1.assistant.task": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "actions_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "autopilot.v1.assistant.task.task_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "autopilot.v1.assistant.task.task_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "samples_count": {
            "type": {
              "type": "integer"
            }
          },
          "fields_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "public",
                "private"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "members_count": {
            "type": {
              "type": "integer"
            }
          },
          "messages_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v1.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "sandbox": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.invite": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.member": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "last_consumption_timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.message": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "was_edited": {
            "type": {
              "type": "boolean"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "channel",
                "deployment"
              ]
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_service_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_creator_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "read_status_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "reachability_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "typing_indicator_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "consumption_report_interval": {
            "type": {
              "type": "integer"
            }
          },
          "limits": {
            "type": {
              "type": "object"
            }
          },
          "webhooks": {
            "type": {
              "type": "object"
            }
          },
          "pre_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "post_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "webhook_filters": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "notifications": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v1.service.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "is_online": {
            "type": {
              "type": "boolean"
            }
          },
          "is_notifiable": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "joined_channels_count": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.user.user_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "member_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "joined",
                "invited",
                "not_participating"
              ]
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "unread_messages_count": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "binding_type": {
            "type": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "message_types": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.channel": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "public",
                "private"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "members_count": {
            "type": {
              "type": "integer"
            }
          },
          "messages_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.channel.channel_webhook": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "chat.v2.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "sandbox": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.channel.invite": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.channel.member": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "last_consumption_timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "chat.v2.service.channel.message": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "last_updated_by": {
            "type": {
              "type": "string"
            }
          },
          "was_edited": {
            "type": {
              "type": "boolean"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "media": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "channel",
                "deployment"
              ]
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_service_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_creator_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "read_status_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "reachability_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "typing_indicator_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "consumption_report_interval": {
            "type": {
              "type": "integer"
            }
          },
          "limits": {
            "type": {
              "type": "object"
            }
          },
          "pre_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "post_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "webhook_filters": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "pre_webhook_retry_count": {
            "type": {
              "type": "integer"
            }
          },
          "post_webhook_retry_count": {
            "type": {
              "type": "integer"
            }
          },
          "notifications": {
            "type": {
              "type": "object"
            }
          },
          "media": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "is_online": {
            "type": {
              "type": "boolean"
            }
          },
          "is_notifiable": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "joined_channels_count": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.user.user_binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "user_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "binding_type": {
            "type": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "message_types": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.user.user_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "user_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "member_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "joined",
                "invited",
                "not_participating"
              ]
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "unread_messages_count": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "notification_level": {
            "type": {
              "type": "string",
              "enums": [
                "default",
                "muted"
              ]
            }
          }
        }
      },
      "fax.v1.fax": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "quality": {
            "type": {
              "type": "string",
              "enums": [
                "standard",
                "fine",
                "superfine"
              ]
            }
          },
          "media_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          },
          "media_url": {
            "type": {
              "type": "string"
            }
          },
          "num_pages": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "processing",
                "sending",
                "delivered",
                "receiving",
                "received",
                "no-answer",
                "busy",
                "failed",
                "canceled"
              ]
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enums": [
                "inbound",
                "outbound"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "fax.v1.fax.fax_media": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "fax_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FX[0-9a-fA-F]{32}$"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "integrations.v1.callback": {
        "type": "object",
        "properties": {
          "request_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          "vendor_account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "add_on_specification_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XC[0-9a-fA-F]{32}$"
            }
          },
          "add_on_installation_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XD[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_completed": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "lookups.v1.phone_number": {
        "type": "object",
        "properties": {
          "caller_name": {
            "type": {
              "type": "object"
            }
          },
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "national_format": {
            "type": {
              "type": "string"
            }
          },
          "carrier": {
            "type": {
              "type": "object"
            }
          },
          "add_ons": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "monitor.v1.alert": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "alert_text": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_generated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log_level": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "monitor.v1.event": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "actor_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "actor_type": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "event_data": {
            "type": {
              "type": "object"
            }
          },
          "event_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "event_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AE[0-9a-fA-F]{32}$"
            }
          },
          "source": {
            "type": {
              "type": "string"
            }
          },
          "source_ip_address": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "notify.v1.service.binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notification_protocol_version": {
            "type": {
              "type": "string"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "binding_type": {
            "type": {
              "type": "string"
            }
          },
          "address": {
            "type": {
              "type": "string"
            }
          },
          "tags": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "notify.v1.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "sandbox": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "notify.v1.service.notification": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "identities": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "tags": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "segments": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "priority": {
            "type": {
              "type": "string",
              "enums": [
                "high",
                "low"
              ]
            }
          },
          "ttl": {
            "type": {
              "type": "integer"
            }
          },
          "title": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "sound": {
            "type": {
              "type": "string"
            }
          },
          "action": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "apn": {
            "type": {
              "type": "object"
            }
          },
          "gcm": {
            "type": {
              "type": "object"
            }
          },
          "fcm": {
            "type": {
              "type": "object"
            }
          },
          "sms": {
            "type": {
              "type": "object"
            }
          },
          "facebook_messenger": {
            "type": {
              "type": "object"
            }
          },
          "alexa": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "notify.v1.service.segment": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^GS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "notify.v1.service.user.segment_membership": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "segment": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "notify.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "apn_credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "gcm_credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "fcm_credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "facebook_messenger_page_id": {
            "type": {
              "type": "string"
            }
          },
          "default_apn_notification_protocol_version": {
            "type": {
              "type": "string"
            }
          },
          "default_gcm_notification_protocol_version": {
            "type": {
              "type": "string"
            }
          },
          "default_fcm_notification_protocol_version": {
            "type": {
              "type": "string"
            }
          },
          "log_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "alexa_skill_id": {
            "type": {
              "type": "string"
            }
          },
          "default_alexa_notification_protocol_version": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "notify.v1.service.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "segments": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "notify.v1.service.user.user_binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notification_protocol_version": {
            "type": {
              "type": "string"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "binding_type": {
            "type": {
              "type": "string"
            }
          },
          "address": {
            "type": {
              "type": "string"
            }
          },
          "tags": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "numbers.v1.authorization_document": {
        "type": "object",
        "properties": {
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "cc_emails": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "numbers.v1.authorization_document.dependent_order": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "authorization_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_extension": {
            "type": {
              "type": "string"
            }
          },
          "verification_call_sids": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "verification_type": {
            "type": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          }
        }
      },
      "numbers.v1.hosted_number_order": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "authorization_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_extension": {
            "type": {
              "type": "string"
            }
          },
          "verification_call_sids": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "verification_type": {
            "type": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          }
        }
      },
      "preview.bulk_exports.export.day": {
        "type": "object",
        "properties": {
          "day": {
            "type": {
              "type": "string"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.bulk_exports.export": {
        "type": "object",
        "properties": {
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.bulk_exports.export_configuration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "webhook_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.deployed_devices.fleet.certificate": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "device_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          "thumbprint": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.deployed_devices.fleet.deployment": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sync_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.deployed_devices.fleet.device": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "deployment_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_authenticated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.deployed_devices.fleet": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "default_deployment_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.deployed_devices.fleet.key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "device_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.flex.configuration": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "attributes": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "ok",
                "inprogress",
                "notstarted"
              ]
            }
          },
          "taskrouter_workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_target_workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_target_taskqueue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_taskqueues": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "taskrouter_skills": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "taskrouter_worker_channels": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_worker_attributes": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_offline_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "identity_realm_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^JB[0-9a-fA-F]{32}$"
            }
          },
          "identity_sso_login_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "identity_sso_logout_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "runtime_domain": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "messaging_service_instance_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "chat_service_instance_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "ui_language": {
            "type": {
              "type": "string"
            }
          },
          "ui_attributes": {
            "type": {
              "type": "object"
            }
          },
          "ui_version": {
            "type": {
              "type": "string"
            }
          },
          "service_version": {
            "type": {
              "type": "string"
            }
          },
          "call_recording_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "call_recording_webhook_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "crm_type": {
            "type": {
              "type": "string"
            }
          },
          "crm_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_attributes": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.flex.flex_flow": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "studio_flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "chat_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_type": {
            "type": {
              "type": "string",
              "enums": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          "contact_identity": {
            "type": {
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.flex.web_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flex_flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          "chat_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.flex.web_channel_user": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "chat_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.flex.worker": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "object"
            }
          },
          "capacities": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.hosted_numbers.authorization_document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ]
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.hosted_numbers.authorization_document.dependent_hosted_number_order": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "signing_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "verification_type": {
            "type": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          },
          "verification_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "extension": {
            "type": {
              "type": "string"
            }
          },
          "call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_call_sids": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "preview.hosted_numbers.hosted_number_order": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "signing_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ]
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "verification_type": {
            "type": {
              "type": "string",
              "enums": [
                "phone-call",
                "phone-bill"
              ]
            }
          },
          "verification_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "extension": {
            "type": {
              "type": "string"
            }
          },
          "call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_call_sids": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "preview.iam.authenticate": {
        "type": "object",
        "properties": {
          "location": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.iam.refresh_token": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "token": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.iam.saml2": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.iam.token": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "token": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.iam.validate_token": {
        "type": "object",
        "properties": {
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "code": {
            "type": {
              "type": "integer"
            }
          },
          "message": {
            "type": {
              "type": "string"
            }
          },
          "expiration": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "realm_user_id": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "preview.insights.call.report.aspects.aspect_reports": {
        "type": "object",
        "properties": {
          "key": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "call_stats": {
            "type": {
              "type": "object"
            }
          },
          "warning_counts": {
            "type": {
              "type": "object"
            }
          },
          "issue_type_counts": {
            "type": {
              "type": "object"
            }
          },
          "feedback_score_counts": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.insights.call.report.aspects": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string",
              "enums": [
                "Clients",
                "IpAddresses",
                "Browsers",
                "OperatingSystems",
                "Regions",
                "Direction"
              ]
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.insights.call": {
        "type": "object",
        "properties": {}
      },
      "preview.insights.call.event": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "group": {
            "type": {
              "type": "string"
            }
          },
          "publisher": {
            "type": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "level": {
            "type": {
              "type": "string"
            }
          },
          "payload_type": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "parent_account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "parent_account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          },
          "payload": {
            "type": {
              "type": "object"
            }
          },
          "publisher_metadata": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.insights.call.metric": {
        "type": "object",
        "properties": {
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "total_bytes_received": {
            "type": {
              "type": "integer"
            }
          },
          "total_packets_received": {
            "type": {
              "type": "integer"
            }
          },
          "total_bytes_sent": {
            "type": {
              "type": "integer"
            }
          },
          "mos": {
            "type": {
              "type": "object"
            }
          },
          "timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "total_packets_sent": {
            "type": {
              "type": "integer"
            }
          },
          "audio_level_in": {
            "type": {
              "type": "integer"
            }
          },
          "audio_level_out": {
            "type": {
              "type": "integer"
            }
          },
          "packets_received": {
            "type": {
              "type": "integer"
            }
          },
          "jitter": {
            "type": {
              "type": "integer"
            }
          },
          "timestamp_ms": {
            "type": {
              "type": "integer"
            }
          },
          "rtt": {
            "type": {
              "type": "integer"
            }
          },
          "packets_lost": {
            "type": {
              "type": "integer"
            }
          },
          "total_packets_lost": {
            "type": {
              "type": "integer"
            }
          },
          "packets_lost_fraction": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.insights.call.report": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "call_stats": {
            "type": {
              "type": "object"
            }
          },
          "warning_counts": {
            "type": {
              "type": "object"
            }
          },
          "issue_type_counts": {
            "type": {
              "type": "object"
            }
          },
          "feedback_score_counts": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.insights.call.summary": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "parent_account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "parent_account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "summary": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.marketplace.available_add_on": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "pricing_type": {
            "type": {
              "type": "string"
            }
          },
          "configuration_schema": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.marketplace.available_add_on.available_add_on_extension": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          },
          "available_add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.marketplace.installed_add_on": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.marketplace.installed_add_on.installed_add_on_extension": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            }
          },
          "installed_add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.numbers.active_number": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "configurations": {
            "type": {
              "type": "object"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "geography": {
            "type": {
              "type": "object"
            }
          },
          "lifecycle": {
            "type": {
              "type": "string",
              "enums": [
                "developer-preview",
                "private-offering",
                "beta",
                "generally-available"
              ]
            }
          },
          "regulatory": {
            "type": {
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.numbers.available_number": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lifecycle": {
            "type": {
              "type": "string",
              "enums": [
                "developer-preview",
                "private-offering",
                "beta",
                "generally-available"
              ]
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ]
            }
          },
          "geography": {
            "type": {
              "type": "object"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "regulatory": {
            "type": {
              "type": "object"
            }
          },
          "base_recurring_price": {
            "type": {
              "type": "number"
            }
          },
          "base_setup_price": {
            "type": {
              "type": "number"
            }
          }
        }
      },
      "preview.port_in.port_order.authorization_document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "port_order_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "open",
                "signing",
                "signed",
                "canceled"
              ]
            }
          },
          "signer_name": {
            "type": {
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.port_in.port_order.port_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "port_order_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "initialized",
                "pending-carrier-processing",
                "carrier-processing",
                "accepted",
                "rejected",
                "ported-in",
                "pending-cancelation",
                "canceled",
                "failed"
              ]
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "carrier_account_number": {
            "type": {
              "type": "string"
            }
          },
          "current_carrier": {
            "type": {
              "type": "string"
            }
          },
          "current_resp_org": {
            "type": {
              "type": "string"
            }
          },
          "confirmed_activation_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "partner_reference_id": {
            "type": {
              "type": "string"
            }
          },
          "rejection_codes": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.port_in.port_order": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "authorization_document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "twilio-processing",
                "received",
                "pending-loa",
                "processing",
                "customer-action-required",
                "review",
                "completed",
                "failed"
              ]
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "company_name": {
            "type": {
              "type": "string"
            }
          },
          "first_name": {
            "type": {
              "type": "string"
            }
          },
          "last_name": {
            "type": {
              "type": "string"
            }
          },
          "street_number": {
            "type": {
              "type": "string"
            }
          },
          "street_name": {
            "type": {
              "type": "string"
            }
          },
          "city": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "requested_activation_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "status_updates_email": {
            "type": {
              "type": "string"
            }
          },
          "status_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_phone_number": {
            "type": {
              "type": "string"
            }
          },
          "rejection_codes": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "loa_date_signed": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.studio.flow.engagement": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "contact_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "active",
                "ended"
              ]
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.studio.flow": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "draft",
                "published"
              ]
            }
          },
          "debug": {
            "type": {
              "type": "boolean"
            }
          },
          "version": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.studio.flow.engagement.step": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.acc_security.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "code_length": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.acc_security.service.verification": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "type": "string",
              "enums": [
                "sms",
                "call"
              ]
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.acc_security.service.verification_check": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "type": "string",
              "enums": [
                "sms",
                "call"
              ]
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "preview.sync.service.document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.sync.service.document.document_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.sync.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "webhook_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "reachability_webhooks_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "acl_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.sync.service.sync_list": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.sync.service.sync_list.sync_list_item": {
        "type": "object",
        "properties": {
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.sync.service.sync_list.sync_list_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.sync.service.sync_map": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.sync.service.sync_map.sync_map_item": {
        "type": "object",
        "properties": {
          "key": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "map_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.sync.service.sync_map.sync_map_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "map_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.understand.assistant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "latest_model_build_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "log_queries": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "callback_events": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.understand.assistant.assistant_fallback_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.understand.assistant.assistant_initiation_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.understand.assistant.dialogue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.understand.assistant.task.field": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "field_type": {
            "type": {
              "type": "string"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.understand.assistant.field_type": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.understand.assistant.field_type.field_value": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "field_type_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          },
          "value": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "synonym_of": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "preview.understand.assistant.model_build": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "enqueued",
                "building",
                "completed",
                "failed",
                "canceled"
              ]
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "build_duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        }
      },
      "preview.understand.assistant.query": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "results": {
            "type": {
              "type": "object"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "model_build_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$"
            }
          },
          "query": {
            "type": {
              "type": "string"
            }
          },
          "sample_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.understand.assistant.task.sample": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            }
          },
          "tagged_text": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "preview.understand.assistant.style_sheet": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.understand.assistant.task": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "actions_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.understand.assistant.task.task_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "preview.understand.assistant.task.task_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assistant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$"
            }
          },
          "samples_count": {
            "type": {
              "type": "integer"
            }
          },
          "fields_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.wireless.command": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "device_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "command": {
            "type": {
              "type": "string"
            }
          },
          "command_mode": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.wireless.rate_plan": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "data_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "data_metering": {
            "type": {
              "type": "string"
            }
          },
          "data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "messaging_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "international_roaming": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.wireless.sim": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "rate_plan_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iccid": {
            "type": {
              "type": "string"
            }
          },
          "e_id": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "commands_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "commands_callback_method": {
            "type": {
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "preview.wireless.sim.usage": {
        "type": "object",
        "properties": {
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "sim_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "period": {
            "type": {
              "type": "object"
            }
          },
          "commands_usage": {
            "type": {
              "type": "object"
            }
          },
          "commands_costs": {
            "type": {
              "type": "object"
            }
          },
          "data_usage": {
            "type": {
              "type": "object"
            }
          },
          "data_costs": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.payment.credential_aci_commerce_gateway": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "preview.payment.credential_stripe": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.messaging": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.messaging.messaging_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.phone_number": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.phone_number.phone_number_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.voice": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.voice.voice_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.voice.voice_number": {
        "type": "object",
        "properties": {
          "number": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "type": "number"
                },
                "current_price": {
                  "type": "number"
                }
              }
            }
          },
          "inbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "current_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "number_type": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v2.voice": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v2.voice.voice_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v2.voice.voice_number": {
        "type": "object",
        "properties": {
          "destination_number": {
            "type": {
              "type": "string"
            }
          },
          "origination_number": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_call_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  },
                  "origination_prefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "inbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "current_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "number_type": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "proxy.v1.service.session.interaction": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KI[0-9a-fA-F]{32}$"
            }
          },
          "session_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "data": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "message",
                "voice",
                "unknown"
              ]
            }
          },
          "inbound_participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "inbound_resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "inbound_resource_status": {
            "type": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          },
          "inbound_resource_type": {
            "type": {
              "type": "string"
            }
          },
          "inbound_resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "outbound_participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "outbound_resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "outbound_resource_status": {
            "type": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          },
          "outbound_resource_type": {
            "type": {
              "type": "string"
            }
          },
          "outbound_resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "proxy.v1.service.session.participant.message_interaction": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KI[0-9a-fA-F]{32}$"
            }
          },
          "session_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "data": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "message",
                "voice",
                "unknown"
              ]
            }
          },
          "participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "inbound_participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "inbound_resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "inbound_resource_status": {
            "type": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          },
          "inbound_resource_type": {
            "type": {
              "type": "string"
            }
          },
          "inbound_resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "outbound_participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "outbound_resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "outbound_resource_status": {
            "type": {
              "type": "string",
              "enums": [
                "accepted",
                "answered",
                "busy",
                "canceled",
                "completed",
                "deleted",
                "delivered",
                "delivery-unknown",
                "failed",
                "in-progress",
                "initiated",
                "no-answer",
                "queued",
                "received",
                "receiving",
                "ringing",
                "scheduled",
                "sending",
                "sent",
                "undelivered",
                "unknown"
              ]
            }
          },
          "outbound_resource_type": {
            "type": {
              "type": "string"
            }
          },
          "outbound_resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "proxy.v1.service.session.participant": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KP[0-9a-fA-F]{32}$"
            }
          },
          "session_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identifier": {
            "type": {
              "type": "string"
            }
          },
          "proxy_identifier": {
            "type": {
              "type": "string"
            }
          },
          "proxy_identifier_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "date_deleted": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "proxy.v1.service.phone_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "is_reserved": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "proxy.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "chat_instance_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "default_ttl": {
            "type": {
              "type": "integer"
            }
          },
          "number_selection_behavior": {
            "type": {
              "type": "string",
              "enums": [
                "avoid-sticky",
                "prefer-sticky"
              ]
            }
          },
          "geo_match_level": {
            "type": {
              "type": "string",
              "enums": [
                "area-code",
                "overlay",
                "radius",
                "country"
              ]
            }
          },
          "intercept_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "out_of_session_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "proxy.v1.service.session": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_started": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_ended": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_last_interaction": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_expiry": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "closed",
                "failed",
                "unknown",
                "completed"
              ]
            }
          },
          "closed_reason": {
            "type": {
              "type": "string"
            }
          },
          "ttl": {
            "type": {
              "type": "integer"
            }
          },
          "mode": {
            "type": {
              "type": "string",
              "enums": [
                "message-only",
                "voice-only",
                "voice-and-message"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "proxy.v1.service.short_code": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "short_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "is_reserved": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "taskrouter.v1.workspace.activity": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.event": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "actor_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "actor_type": {
            "type": {
              "type": "string"
            }
          },
          "actor_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "event_data": {
            "type": {
              "type": "object"
            }
          },
          "event_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "event_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          },
          "source": {
            "type": {
              "type": "string"
            }
          },
          "source_ip_address": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "age": {
            "type": {
              "type": "integer"
            }
          },
          "assignment_status": {
            "type": {
              "type": "string",
              "enums": [
                "pending",
                "reserved",
                "assigned",
                "canceled",
                "completed",
                "wrapping"
              ]
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "addons": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "priority": {
            "type": {
              "type": "integer"
            }
          },
          "reason": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "task_queue_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "task_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "timeout": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workflow_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assignment_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "assignment_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "max_reserved_workers": {
            "type": {
              "type": "integer"
            }
          },
          "reservation_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "reservation_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "target_workers": {
            "type": {
              "type": "string"
            }
          },
          "task_order": {
            "type": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_entered": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_available_workers": {
            "type": {
              "type": "integer"
            }
          },
          "total_eligible_workers": {
            "type": {
              "type": "integer"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queues_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task.task_reservation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservation_status": {
            "type": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "worker_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_name": {
            "type": {
              "type": "string"
            }
          },
          "activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_status_changed": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assigned_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "available_capacity_percentage": {
            "type": {
              "type": "integer"
            }
          },
          "configured_capacity": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_instance_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_reservation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservation_status": {
            "type": {
              "type": "string",
              "enums": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "worker_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_statistics": {
        "type": "object",
        "properties": {
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.workers_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "activity_durations": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.workers_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "total_workers": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assignment_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "document_content_type": {
            "type": {
              "type": "string"
            }
          },
          "fallback_assignment_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "task_reservation_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_entered": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_timed_out_in_workflow": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "default_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "event_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "events_filter": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "multi_task_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "timeout_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "timeout_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "prioritize_queue_order": {
            "type": {
              "type": "string",
              "enums": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_created": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_timed_out_in_workflow": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "total_workers": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_statistics": {
        "type": "object",
        "properties": {
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.credential_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.ip_access_control_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.origination_url": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "weight": {
            "type": {
              "type": "integer"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sip_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "priority": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.phone_number": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enums": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "disaster_recovery_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "disaster_recovery_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "secure": {
            "type": {
              "type": "boolean"
            }
          },
          "recording": {
            "type": {
              "type": "object"
            }
          },
          "cnam_lookup_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "auth_type_set": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.composition": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_completed": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "date_deleted": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "audio_sources": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "audio_sources_excluded": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "video_layout": {
            "type": {
              "type": "object"
            }
          },
          "resolution": {
            "type": {
              "type": "string"
            }
          },
          "trim": {
            "type": {
              "type": "boolean"
            }
          },
          "format": {
            "type": {
              "type": "string",
              "enums": [
                "mp4",
                "webm"
              ]
            }
          },
          "bitrate": {
            "type": {
              "type": "integer"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "duration": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.composition_hook": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$"
            }
          },
          "audio_sources": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "audio_sources_excluded": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "video_layout": {
            "type": {
              "type": "object"
            }
          },
          "resolution": {
            "type": {
              "type": "string"
            }
          },
          "trim": {
            "type": {
              "type": "boolean"
            }
          },
          "format": {
            "type": {
              "type": "string",
              "enums": [
                "mp4",
                "webm"
              ]
            }
          },
          "status_callback": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uri"
                }
              ]
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.composition.composition_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.composition_settings": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "aws_credentials_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "aws_s3_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "aws_storage_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "encryption_key_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "encryption_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          "source_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "container_format": {
            "type": {
              "type": "string",
              "enums": [
                "mka",
                "mkv"
              ]
            }
          },
          "codec": {
            "type": {
              "type": "string",
              "enums": [
                "VP8",
                "H264",
                "OPUS",
                "PCMU"
              ]
            }
          },
          "grouping_sids": {
            "type": {
              "type": "object"
            }
          },
          "track_name": {
            "type": {
              "type": "string"
            }
          },
          "offset": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.recording.recording_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.recording_settings": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "aws_credentials_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "aws_s3_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "aws_storage_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "encryption_key_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "encryption_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.room": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "enable_turn": {
            "type": {
              "type": "boolean"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "peer-to-peer",
                "group",
                "group-small"
              ]
            }
          },
          "max_participants": {
            "type": {
              "type": "integer"
            }
          },
          "record_participants_on_connect": {
            "type": {
              "type": "boolean"
            }
          },
          "video_codecs": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enums": [
                  "VP8",
                  "H264"
                ]
              }
            }
          },
          "media_region": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_participant": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "connected",
                "disconnected"
              ]
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_participant.room_participant_published_track": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          "participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "kind": {
            "type": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.room.room_participant.room_participant_subscribed_track": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "publisher_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "subscriber_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "kind": {
            "type": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          }
        }
      },
      "video.v1.room.room_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          "source_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "container_format": {
            "type": {
              "type": "string",
              "enums": [
                "mka",
                "mkv"
              ]
            }
          },
          "codec": {
            "type": {
              "type": "string",
              "enums": [
                "VP8",
                "H264",
                "OPUS",
                "PCMU"
              ]
            }
          },
          "grouping_sids": {
            "type": {
              "type": "object"
            }
          },
          "track_name": {
            "type": {
              "type": "string"
            }
          },
          "offset": {
            "type": {
              "type": "integer"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_recording.room_recording_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "messaging.v1.service.alpha_sender": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AI[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "alpha_sender": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "messaging.v1.service.broadcasts": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BC[0-9a-fA-F]{32}$"
            }
          },
          "media_urls": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_of_expiry": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "messaging.v1.service.message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SM[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "media_urls": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "broadcast_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_of_expiry": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "messaging.v1.service.phone_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "messaging.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "inbound_request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "inbound_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sticky_sender": {
            "type": {
              "type": "boolean"
            }
          },
          "mms_converter": {
            "type": {
              "type": "boolean"
            }
          },
          "smart_encoding": {
            "type": {
              "type": "boolean"
            }
          },
          "scan_message_content": {
            "type": {
              "type": "string",
              "enums": [
                "inherit",
                "enable",
                "disable"
              ]
            }
          },
          "fallback_to_long_code": {
            "type": {
              "type": "boolean"
            }
          },
          "area_code_geomatch": {
            "type": {
              "type": "boolean"
            }
          },
          "synchronous_validation": {
            "type": {
              "type": "boolean"
            }
          },
          "validity_period": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "messaging.v1.session": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "messaging.v1.session.session_message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "session_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "author": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "messaging.v1.session.session_participant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "session_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "twilio_address": {
            "type": {
              "type": "string"
            }
          },
          "user_address": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enums": [
                "chat",
                "sms"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "messaging.v1.service.short_code": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "short_code": {
            "type": {
              "type": "string"
            }
          },
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.command": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "command": {
            "type": {
              "type": "string"
            }
          },
          "command_mode": {
            "type": {
              "type": "string",
              "enums": [
                "text",
                "binary"
              ]
            }
          },
          "transport": {
            "type": {
              "type": "string",
              "enums": [
                "sms",
                "ip"
              ]
            }
          },
          "delivery_receipt_requested": {
            "type": {
              "type": "boolean"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "queued",
                "sent",
                "delivered",
                "received",
                "failed"
              ]
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enums": [
                "from_sim",
                "to_sim"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.sim.data_session": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WN[0-9a-fA-F]{32}$"
            }
          },
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "radio_link": {
            "type": {
              "type": "string"
            }
          },
          "operator_mcc": {
            "type": {
              "type": "string"
            }
          },
          "operator_mnc": {
            "type": {
              "type": "string"
            }
          },
          "operator_country": {
            "type": {
              "type": "string"
            }
          },
          "operator_name": {
            "type": {
              "type": "string"
            }
          },
          "cell_id": {
            "type": {
              "type": "string"
            }
          },
          "cell_location_estimate": {
            "type": {
              "type": "object"
            }
          },
          "packets_uploaded": {
            "type": {
              "type": "integer"
            }
          },
          "packets_downloaded": {
            "type": {
              "type": "integer"
            }
          },
          "last_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "start": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "wireless.v1.rate_plan": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "data_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "data_metering": {
            "type": {
              "type": "string"
            }
          },
          "data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "messaging_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "international_roaming": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "international_roaming_data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.sim": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "rate_plan_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iccid": {
            "type": {
              "type": "string"
            }
          },
          "e_id": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          "commands_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "commands_callback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enums": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "wireless.v1.sim.usage_record": {
        "type": "object",
        "properties": {
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "period": {
            "type": {
              "type": "object"
            }
          },
          "commands": {
            "type": {
              "type": "object"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "sync.v1.service.document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "sync.v1.service.document.document_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "document_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "sync.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "webhook_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "reachability_webhooks_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "acl_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "sync.v1.service.sync_stream.stream_message": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TZ[0-9a-fA-F]{32}$"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      },
      "sync.v1.service.sync_list": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "sync.v1.service.sync_list.sync_list_item": {
        "type": "object",
        "properties": {
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "sync.v1.service.sync_list.sync_list_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "sync.v1.service.sync_map": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "sync.v1.service.sync_map.sync_map_item": {
        "type": "object",
        "properties": {
          "key": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "map_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "sync.v1.service.sync_map.sync_map_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "map_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "sync.v1.service.sync_stream": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "date_expires": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "studio.v1.flow.engagement": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "contact_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "active",
                "ended"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.engagement_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow.execution": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "contact_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "active",
                "ended"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_step": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_step.execution_step_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "step_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enums": [
                "draft",
                "published"
              ]
            }
          },
          "version": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.step": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.step.step_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "step_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "verify.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "code_length": {
            "type": {
              "type": "integer"
            }
          },
          "lookup_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "skip_sms_to_landlines": {
            "type": {
              "type": "boolean"
            }
          },
          "dtmf_input_required": {
            "type": {
              "type": "boolean"
            }
          },
          "tts_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "verify.v1.service.verification": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "type": "string",
              "enums": [
                "sms",
                "call"
              ]
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "verify.v1.service.verification_check": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "type": "string",
              "enums": [
                "sms",
                "call"
              ]
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "voice.v1.voice_permission": {
        "type": "object",
        "properties": {}
      },
      "voice.v1.voice_permission.voice_permission_country": {
        "type": "object",
        "properties": {
          "iso_code": {
            "type": {
              "type": "string"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "continent": {
            "type": {
              "type": "string"
            }
          },
          "country_codes": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "low_risk_numbers_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "high_risk_special_numbers_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "high_risk_tollfraud_numbers_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "voice.v1.voice_permission.voice_permission_country_bulk_update": {
        "type": "object",
        "properties": {
          "update_count": {
            "type": {
              "type": "integer"
            }
          },
          "update_request": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "voice.v1.voice_permission.voice_permission_country.voice_permissions_hrs_prefixes": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "voice.v1.voice_permission.voice_permissions_settings": {
        "type": "object",
        "properties": {
          "dialing_permissions_inheritance": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "insights.v1.summary": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "call_type": {
            "type": {
              "type": "string",
              "enums": [
                "carrier",
                "sip",
                "trunking",
                "client"
              ]
            }
          },
          "call_state": {
            "type": {
              "type": "string",
              "enums": [
                "ringing",
                "completed",
                "busy",
                "fail",
                "noanswer",
                "canceled",
                "answered",
                "undialed"
              ]
            }
          },
          "processing_state": {
            "type": {
              "type": "string",
              "enums": [
                "complete",
                "partial"
              ]
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enums": [
                "inbound",
                "outbound_api",
                "outbound_dial",
                "trunking_originating",
                "trunking_terminating"
              ]
            }
          },
          "disconnected_by": {
            "type": {
              "type": "string",
              "enums": [
                "callee",
                "caller",
                "unknown"
              ]
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "connect_duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "from": {
            "type": {
              "type": "object"
            }
          },
          "to": {
            "type": {
              "type": "object"
            }
          },
          "carrier_edge": {
            "type": {
              "type": "object"
            }
          },
          "client_edge": {
            "type": {
              "type": "object"
            }
          },
          "sip_edge": {
            "type": {
              "type": "object"
            }
          },
          "tags": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      }
    }
  }
}
