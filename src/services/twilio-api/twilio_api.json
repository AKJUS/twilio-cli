{
  "openapi": "3.0.1",
  "info": {
    "title": "Twilio REST API",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "81ff5a4"
  },
  "paths": {
    "/v1/Credentials": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.credential"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Credential type, one of \"gcm\" or \"apn\"",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate, e.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key, e.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"API key\" for project from Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credentials for push notifications channels"
    },
    "/v1/Credentials/AWS": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of AWS Credentials belonging to the account used to make the request",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/accounts.v1.credential.credential_aws"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new AWS Credential",
        "parameters": [
          {
            "name": "Credentials",
            "in": "query",
            "description": "A string that contains the AWS access credentials in the format <AWS_ACCESS_KEY_ID>:<AWS_SECRET_ACCESS_KEY>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_aws"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "User provided AWS keys"
    },
    "/v1/Credentials/AWS/{Sid}": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the AWS credentials specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_aws"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_aws"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "User provided AWS keys"
    },
    "/v1/Credentials/PublicKeys": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves a collection of Public Key Credentials belonging to the account used to make the request",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/accounts.v1.credential.credential_public_key"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new Public Key Credential",
        "parameters": [
          {
            "name": "PublicKey",
            "in": "query",
            "description": "A URL encoded representation of the public key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The Subaccount this Credential should be associated with.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_public_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "User provided public keys"
    },
    "/v1/Credentials/PublicKeys/{Sid}": {
      "servers": [
        {
          "url": "https://accounts.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the public key specified by the provided Credential Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_public_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts.v1.credential.credential_public_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "User provided public keys"
    },
    "/2010-04-01/Accounts.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new Twilio Subaccount from the account making the request",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of the account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieves a collection of Accounts belonging to the account used to make the request",
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "FriendlyName to filter on",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status to filter on",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "suspended",
                "closed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Twilio accounts (aka Project) or subaccounts"
    },
    "/2010-04-01/Accounts/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the account specified by the provided Account Sid",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Fetch by unique Account Sid",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Update by unique Account Sid",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "FriendlyName to update",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status to update the Account with",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "suspended",
                "closed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Twilio accounts (aka Project) or subaccounts"
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will be responsible for the new Address resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "The name to associate with the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The number and street address of the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The city of the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "The state or region of the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "The postal code of the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "The ISO country code of the new address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmergencyEnabled",
            "in": "query",
            "description": "Whether to enable emergency calling on the new address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AutoCorrectAddress",
            "in": "query",
            "description": "Whether we should automatically correct the address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that is responsible for this address",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "The `customer_name` of the Address resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The string that identifies the Address resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCountry",
            "in": "query",
            "description": "The ISO country code of the Address resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.address"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Physical locations within a country"
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that is responsible for the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that is responsible for this address",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that is responsible for the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomerName",
            "in": "query",
            "description": "The name to associate with the address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Street",
            "in": "query",
            "description": "The number and street address of the address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The city of the address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "The state or region of the address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "The postal code of the address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmergencyEnabled",
            "in": "query",
            "description": "Whether to enable emergency calling on the address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AutoCorrectAddress",
            "in": "query",
            "description": "Whether we should automatically correct the address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Physical locations within a country"
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new application within your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use to start a new TwiML session",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL to call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method to use with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL to call when a TwiML error occurs",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method to use with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method to use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL to call when the phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL to call when an error occurs while retrieving or executing the TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method to use with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsStatusCallback",
            "in": "query",
            "description": "The URL to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "MessageStatusCallback",
            "in": "query",
            "description": "The URL to send message status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of applications representing an application within the requesting account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The string that identifies the Application resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.application"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Applications that you have created with Twilio"
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete the application by the specified application sid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch the application specified by the provided sid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Updates the application's properties",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use to start a new TwiML session",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL to call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method to use with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL to call when a TwiML error occurs",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method to use with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method to use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL to call when the phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL to call when an error occurs while retrieving or executing the TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method to use with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsStatusCallback",
            "in": "query",
            "description": "The URL to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "MessageStatusCallback",
            "in": "query",
            "description": "The URL to send message status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Applications that you have created with Twilio"
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of authorized-connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorized_connect_apps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.authorized_connect_app"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Authorized Twilio Connect apps"
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an authorized-connect-app",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConnectAppSid",
            "in": "path",
            "description": "The SID of the Connect App to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.authorized_connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Authorized Twilio Connect apps"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the available phone number Country resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the available phone number Country resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO country code of the country to fetch available phone number information about",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_local"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Available local phone numbers"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_machine_to_machine"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_mobile"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Available mobile phone numbers"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_national"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_shared_cost"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_toll_free"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Available toll free phone numbers"
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "description": "The ISO Country code of the country from which to read phone numbers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The area code of the phone numbers to read",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Contains",
            "in": "query",
            "description": "The pattern on which to match phone numbers",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive text messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MmsEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive MMS messages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require an Address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a local address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "description": "Whether to exclude phone numbers that require a foreign address",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to read phone numbers new to the Twilio platform",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NearNumber",
            "in": "query",
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NearLatLong",
            "in": "query",
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Distance",
            "in": "query",
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InPostalCode",
            "in": "query",
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRegion",
            "in": "query",
            "description": "Limit results to a particular region. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InRateCenter",
            "in": "query",
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLata",
            "in": "query",
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InLocality",
            "in": "query",
            "description": "Limit results to a particular locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxEnabled",
            "in": "query",
            "description": "Whether the phone numbers can receive faxes",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_voip"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Available VoIP phone numbers"
    },
    "/2010-04-01/Accounts/{AccountSid}/Balance.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "Account Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.balance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Phone number, SIP address, or client identifier to call",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Twilio number from which to originate the call",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "HTTP method to use to fetch TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "FallbackUrl",
            "in": "query",
            "description": "Fallback URL in case of error",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackMethod",
            "in": "query",
            "description": "HTTP Method to use with fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": "The call progress events that we send to the `status_callback` URL.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP Method to use with status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SendDigits",
            "in": "query",
            "description": "The digits to dial after connecting to the number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "Number of seconds to wait for an answer",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": "Whether or not to record the call",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "The number of channels in the final recording",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "The URL that we call when the recording is available to be accessed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use when calling the `recording_status_callback` URL",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": "The username used to authenticate the caller making a SIP call",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": "The password required to authenticate the user account specified in `sip_auth_username`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MachineDetection",
            "in": "query",
            "description": "Enable machine detection or end of greeting detection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MachineDetectionTimeout",
            "in": "query",
            "description": "Number of seconds to wait for machine detection",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "The recording status events that will trigger calls to the URL specified in `recording_status_callback`",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "Set this parameter to control trimming of silence on the recording.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallerId",
            "in": "query",
            "description": "The phone number, SIP address, or Client identifier that made this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MachineDetectionSpeechThreshold",
            "in": "query",
            "description": "Number of milliseconds for measuring stick for the length of the speech activity",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MachineDetectionSpeechEndThreshold",
            "in": "query",
            "description": "Number of milliseconds of silence after speech activity",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MachineDetectionSilenceTimeout",
            "in": "query",
            "description": "Number of milliseconds of initial silence",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": "The absolute URL that returns TwiML for this call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ApplicationSid",
            "in": "query",
            "description": "The SID of the Application resource that will handle the call",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieves a collection of calls made to and from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Phone number or Client identifier of calls to include",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Phone number or Client identifier to filter `from` on",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentCallSid",
            "in": "query",
            "description": "Parent call SID to filter on",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ]
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "description": "Only include calls that started on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calls": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Connections between telephones and Twilio"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch the call specified by the provided Call SID",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Initiates a call redirect or terminates a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": "The absolute URL that returns TwiML for this call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "HTTP method to use to fetch TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The new status to update the call with.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "canceled",
                "completed"
              ]
            }
          },
          {
            "name": "FallbackUrl",
            "in": "query",
            "description": "Fallback URL in case of error",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackMethod",
            "in": "query",
            "description": "HTTP Method to use with fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP Method to use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Connections between telephones and Twilio"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Feedback.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Update a Feedback resource for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call sid that uniquely identifies the call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QualityScore",
            "in": "query",
            "description": "The call quality expressed as an integer from 1 to 5",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Issue",
            "in": "query",
            "description": "Issues experienced during the call",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch a Feedback resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The call sid that uniquely identifies the call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Describes the quality experienced during phone calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a FeedbackSummary resource for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include feedback given on or after this date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include feedback given on or before this date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "`true` includes feedback from the specified account and its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL that we will request when the feedback summary is complete",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we use to make requests to the StatusCallback URL",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback_summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "How your end user's perceive the quality of their calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a FeedbackSummary resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that uniquely identifies this feedback summary resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback_summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a FeedbackSummary resource from a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that uniquely identifies this feedback summary resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "How your end user's perceive the quality of their calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Log",
            "in": "query",
            "description": "Filter by log level",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MessageDate",
            "in": "query",
            "description": "Filter by date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call.call_notification"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_notification|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a recording for the call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The SID of the Call to associate the resource with",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "The recording status changes that should generate a callback",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "The callback URL on each selected recording event",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `recording_status_callback`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Trim",
            "in": "query",
            "description": "Whether to trim the silence in the recording",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "The number of channels that the output recording will be configured with",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recordings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings associated with voice calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: Pass `Twilio.CURRENT` instead of recording sid to reference current active recording.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The new status of the recording",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          {
            "name": "PauseBehavior",
            "in": "query",
            "description": "Whether to record or not during the pause period.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings associated with voice calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of conferences belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The string that identifies the Conference resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The status of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "init",
                "in-progress",
                "completed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conferences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Voice call conferences"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a conference",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The new status of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "completed"
              ]
            }
          },
          {
            "name": "AnnounceUrl",
            "in": "query",
            "description": "The URL we should call to announce something into the conference",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AnnounceMethod",
            "in": "query",
            "description": "he HTTP method used to call announce_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Voice call conferences"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "Read by unique Conference SID for the recording",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recordings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings of conferences"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: To use `Twilio.CURRENT`, pass it as recording sid.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "Update by unique Conference SID for the recording",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "The new status of the recording",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          {
            "name": "PauseBehavior",
            "in": "query",
            "description": "Whether to record during a pause",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "Fetch by unique Conference SID for the recording",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "Delete by the recording's conference SID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings of conferences"
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connect_apps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.connect_app"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Twilio Connect apps"
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a connect-app",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update a connect-app with the specified parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AuthorizeRedirectUrl",
            "in": "query",
            "description": "The URL to redirect the user to after authorization",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "The company name to set for the Connect App",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeauthorizeCallbackMethod",
            "in": "query",
            "description": "The HTTP method to use when calling deauthorize_callback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "DeauthorizeCallbackUrl",
            "in": "query",
            "description": "The URL to call to de-authorize the Connect App",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "A description of the Connect App",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HomepageUrl",
            "in": "query",
            "description": "A public URL where users can obtain more information",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "description": "The set of permissions that your ConnectApp will request",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Twilio Connect apps"
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "path",
            "description": "The SID of the Address resource associated with the phone number",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dependent_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.address.dependent_phone_number"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Phone numbers dependent on an Address resource"
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to include new phone numbers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string that identifies the IncomingPhoneNumber resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone numbers of the IncomingPhoneNumber resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "incoming_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Purchase a phone-number for the account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use for incoming calls made to the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle SMS messages",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "HTTP method used with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL we call when an error occurs while executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method we should use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method used with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we will call when an error occurs in TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method used with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EmergencyStatus",
            "in": "query",
            "description": "Status determining whether the new phone number is enabled for emergency calling",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Active",
                "Inactive"
              ]
            }
          },
          {
            "name": "EmergencyAddressSid",
            "in": "query",
            "description": "The emergency address configuration to use for emergency calling",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TrunkSid",
            "in": "query",
            "description": "SID of the trunk to handle calls to the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource to associate with the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource associated with the phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceReceiveMode",
            "in": "query",
            "description": "Incoming call type: fax or voice",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "voice",
                "fax"
              ]
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to purchase in E.164 format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AreaCode",
            "in": "query",
            "description": "The desired area code for the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Incoming phone numbers on a Twilio account/project"
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "Incoming toll free phone numbers on a Twilio account/project"
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to include new phone numbers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string that identifies the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone numbers of the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "incoming_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_local"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to purchase in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use for incoming calls made to the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle SMS messages",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method we use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL we call when an error occurs while executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method we should use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method used with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we will call when an error occurs in TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method used with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource to associate with the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource associated with the phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_local"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Incoming local phone numbers on a Twilio account/project"
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to include new phone numbers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string that identifies the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone numbers of the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "incoming_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_mobile"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to purchase in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use for incoming calls made to the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle SMS messages",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "HTTP method used with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL we call when an error occurs while executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method used with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we will call when an error occurs in TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method used with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource to associate with the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource associated with the phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_mobile"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Incoming mobile phone numbers on a Twilio account/project"
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Beta",
            "in": "query",
            "description": "Whether to include new phone numbers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string that identifies the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone numbers of the resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Origin",
            "in": "query",
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "incoming_phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to purchase in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use for incoming calls made to the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle SMS messages",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "HTTP method used with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL we call when an error occurs while executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method to use with sms_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceApplicationSid",
            "in": "query",
            "description": "The SID of the application to handle the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "VoiceCallerIdLookup",
            "in": "query",
            "description": "Whether to lookup the caller's name",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method used with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we will call when an error occurs in TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method used with the voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when the phone number receives a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource to associate with the new phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource associated with the phone number",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Incoming toll free phone numbers on a Twilio account/project"
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will be responsible for the new Key resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.new_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Create a new API key"
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "Create a new API key"
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of medias belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the Message resource that this Media resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "media_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.message.media"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Media attached to MMS messages"
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Delete media from your account. Once delete, you will no longer be billed",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the Message resource that this Media resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch a single media instance belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the Message resource that this Media resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message.media"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Media attached to MMS messages"
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the members of the queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The SID of the Queue in which to find the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "queue_members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.queue.member"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Calls in a call queue"
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific member from the queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The SID of the Queue in which to find the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Dequeue a member from a queue and have the member's call begin executing the TwiML document at that URL",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "QueueSid",
            "in": "path",
            "description": "The SID of the Queue in which to find the members",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": "The absolute URL of the Queue resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "How to pass the update request data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Calls in a call queue"
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Send a message from the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The destination phone number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ApplicationSid",
            "in": "query",
            "description": "The application to use for callbacks",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MaxPrice",
            "in": "query",
            "description": "The total maximum price up to 4 decimal places in US dollars acceptable for the message to be delivered.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "ProvideFeedback",
            "in": "query",
            "description": "Whether to confirm delivery of the message",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ValidityPeriod",
            "in": "query",
            "description": "The number of seconds that the message can remain in our outgoing queue.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ForceDelivery",
            "in": "query",
            "description": "Reserved",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SmartEncoded",
            "in": "query",
            "description": "Whether to detect Unicode characters that have a similar GSM-7 character and replace them",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InteractiveData",
            "in": "query",
            "description": "A JSON string that represents an interactive message",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ForceOptIn",
            "in": "query",
            "description": "Whether to forcefully whitelist a from:to pair",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The phone number that initiated the message",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MessagingServiceSid",
            "in": "query",
            "description": "The SID of the Messaging Service you want to associate with the message.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The text of the message you want to send. Can be up to 1,600 characters in length.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaUrl",
            "in": "query",
            "description": "The URL of the media to send with the message",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of messages belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Filter by messages sent to this number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Filter by from number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateSent",
            "in": "query",
            "description": "Filter by date sent",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.message"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Inbound or outbound messages"
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "delete": {
        "description": "Deletes a message record from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Fetch a message belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "To redact a message-body from a post-flight message record, post to the message instance resource with an empty body",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The text of the message you want to send",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Inbound or outbound messages"
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the Message resource for which the feedback was provided",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Outcome",
            "in": "query",
            "description": "Whether the feedback has arrived",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "confirmed",
                "umconfirmed"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message.message_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "signing_keys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.signing_key"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.signing_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.signing_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of notifications belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Log",
            "in": "query",
            "description": "Filter by log level",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "MessageDate",
            "in": "query",
            "description": "Filter by date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.notification"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "[DEPRECATED] Log entries"
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a notification belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.notification|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a notification identified by the NotificationSid from an accounts log",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "[DEPRECATED] Log entries"
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account responsible for the new Caller ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "The phone number to verify in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallDelay",
            "in": "query",
            "description": "The number of seconds to delay before initiating the verification call",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Extension",
            "in": "query",
            "description": "The digits to dial after connecting the verification call",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call status_callback",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.validation_request"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Caller ID validation requests"
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an outgoing-caller-id belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.outgoing_caller_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Updates the caller-id",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.outgoing_caller_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete the caller-id specified from the account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Verified numbers that may be used as caller ID"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The SID of the participant's conference",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The `from` phone number used to invite a participant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The number, client id, or sip address of the new participant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "The URL we should call to send status information to your application",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `status_callback`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": "Set state change events that will trigger a callback",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "he number of seconds that we should wait for an answer",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": "Whether to record the participant and their conferences",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Whether to mute the agent",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": "Whether to play a notification beep to the conference when the participant joins",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": "Whether the conference starts when the participant joins the conference",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": "Whether to end the conference when the participant leaves",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": "URL that hosts pre-conference hold music",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `wait_url`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": "Whether agents can hear the state of the outbound call",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": "The maximum number of agent conference participants",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": "Whether to record the conference the participant is joining",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": "Whether to trim leading and trailing silence from your recorded conference audio files",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": "The callback URL for conference events",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": "HTTP method for requesting `conference_status_callback` URL",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": "The conference state changes that should generate a call to `conference_status_callback`",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": "Specify `mono` or `dual` recording channels",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": "The URL that we should call using the `recording_status_callback_method` when the recording status changes",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use when we call `recording_status_callback`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": "The SIP username used for authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": "The SIP password for authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": "The region where we should mix the conference audio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": "The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `conference_recording_status_callback`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "RecordingStatusCallbackEvent",
            "in": "query",
            "description": "The recording state changes that should generate a call to `recording_status_callback`",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackEvent",
            "in": "query",
            "description": "The conference recording state changes that should generate a call to `conference_recording_status_callback`",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Coaching",
            "in": "query",
            "description": "Indicates if the participant changed to coach",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CallSidToCoach",
            "in": "query",
            "description": "The SID of the participant who is being `coached`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of participants belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The SID of the conference with the participants to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Whether to return only participants that are muted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Hold",
            "in": "query",
            "description": "Whether to return only participants that are on hold",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Coaching",
            "in": "query",
            "description": "Whether to return only participants who are coaching another call",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Conference participants"
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a participant",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The SID of the conference with the participant to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update the properties of the participant",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The SID of the conference with the participant to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": "Whether the participant should be muted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Hold",
            "in": "query",
            "description": "Whether the participant should be on hold",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HoldUrl",
            "in": "query",
            "description": "The URL we call using the `hold_method` for  music that plays when the participant is on hold",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "HoldMethod",
            "in": "query",
            "description": "The HTTP method we should use to call hold_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "AnnounceUrl",
            "in": "query",
            "description": "The URL we call using the `announce_method` for an announcement to the participant",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "AnnounceMethod",
            "in": "query",
            "description": "The HTTP method we should use to call announce_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": "URL that hosts pre-conference hold music",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `wait_url`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "BeepOnExit",
            "in": "query",
            "description": "Whether to play a notification beep to the conference when the participant exit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": "Whether to end the conference when the participant leaves",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Coaching",
            "in": "query",
            "description": "Indicates if the participant changed to coach",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CallSidToCoach",
            "in": "query",
            "description": "The SID of the participant who is being `coached`",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Kick a participant from a given conference",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "path",
            "description": "The SID of the conference with the participants to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallSid",
            "in": "path",
            "description": "The Call SID of the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Conference participants"
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of queues belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account responsible for creating this Call",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "queues": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.queue"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe this resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxSize",
            "in": "query",
            "description": "The max number of calls allowed in the queue",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Queues of calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a queue identified by the QueueSid",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update the queue with the new parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe this resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxSize",
            "in": "query",
            "description": "The max number of calls allowed in the queue",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Remove an empty queue",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Queues of calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of recordings belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CallSid",
            "in": "query",
            "description": "The Call SID of the resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ConferenceSid",
            "in": "query",
            "description": "Read by unique Conference SID for the recording",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recordings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings of phone calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a recording",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Recordings of phone calls"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of results belonging to the recording",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the result to read belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "add_on_results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of an AddOnResult",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the result to fetch belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a result and purge all associated Payloads",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the result to delete belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of payloads belonging to the AddOnResult",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": "The SID of the AddOnResult to which the payloads to read belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payloads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a result payload",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": "The SID of the AddOnResult to which the payload to fetch belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a payload from the result along with all associated Data",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": "The SID of the AddOnResult to which the payloads to delete belongs",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{PayloadSid}/Data.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReferenceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AddOnResultSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PayloadSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "307": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload.recording_add_on_result_payload_data"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": "The SID of the recording that created the transcriptions to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transcriptions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_transcription"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "References to text transcriptions of call recordings"
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": "The SID of the recording that created the transcriptions to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_transcription"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RecordingSid",
            "in": "path",
            "description": "The SID of the recording that created the transcription to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "References to text transcriptions of call recordings"
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of short-codes belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The string that identifies the ShortCode resources to read",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShortCode",
            "in": "query",
            "description": "Filter by ShortCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "short_codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.short_code"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Messaging short codes"
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a short code",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update a short code with the following parameters",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource(s) to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe this resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiVersion",
            "in": "query",
            "description": "The API version to use to start a new TwiML session",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "URL Twilio will request when receiving an SMS",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "HTTP method to use when requesting the sms url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "URL Twilio will request if an error occurs in executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio will use with sms_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Messaging short codes"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip_addresses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that will contain the new resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "The SID of the CredentialList resource to map to the SIP domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new IP Access Control List mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that will contain the new resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "The SID of the IpAccessControlList resource to map to the SIP domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of IP Access Control List mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of an IP Access Control List mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete an IP Access Control List mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that will contain the new resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "The SID of the CredentialList resource to map to the SIP domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "The SID of the SIP domain that contains the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of credentials.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credentials",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list to include the created credential",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "description": "The username for this credential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password will not be returned in the response.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Username and password information for SIP Domains"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a single credential.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credential",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update a credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that includes this credential",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password will not be returned in the response",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a credential resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "path",
            "description": "The unique id that identifies the credential list that contains the desired credentials",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique id that identifies the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Username and password information for SIP Domains"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Get All Credential Lists",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credential_lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable descriptive text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Lists of SIP credentials"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Get a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Fetch by unique credential list Sid",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Update by unique credential list Sid",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable descriptive text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Credential List",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Delete by unique credential list Sid",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Lists of SIP credentials"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a CredentialListMapping resource for an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that identifies the SIP Domain for which the CredentialList resource will be mapped",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "A string that identifies the CredentialList resource to map to the SIP domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Read multiple CredentialListMapping resources from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that identifies the SIP Domain that includes the resource to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credential_list_mappings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credential lists associated with a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a single CredentialListMapping resource from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that identifies the SIP Domain that includes the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a CredentialListMapping resource from an account.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that identifies the SIP Domain that includes the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credential lists associated with a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of domains belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "domains": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address on Twilio to route SIP traffic",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when receiving a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method to use with voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we should call when an error occurs in executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method to use with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackUrl",
            "in": "query",
            "description": "The URL that we should call to pass status updates",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call `voice_status_callback_url`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SipRegistration",
            "in": "query",
            "description": "Whether SIP registration is allowed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Custom DNS hostnames that can accept SIP traffic"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update the attributes of a domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method used with voice_fallback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL we should call when an error occurs in executing TwiML",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method we should use with voice_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackMethod",
            "in": "query",
            "description": "The HTTP method we should use to call voice_status_callback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceStatusCallbackUrl",
            "in": "query",
            "description": "The URL that we should call to pass status updates",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL we should call when receiving a call",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SipRegistration",
            "in": "query",
            "description": "Whether SIP registration is allowed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address on Twilio to route SIP traffic",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete an instance of a Domain",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Custom DNS hostnames that can accept SIP traffic"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of IpAccessControlLists that belong to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip_access_control_lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new IpAccessControlList resource",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Access control lists of IP address resources"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific instance of an IpAccessControlList",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Rename an IpAccessControlList",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete an IpAccessControlList from the requested account",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Access control lists of IP address resources"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that uniquely identifies the SIP Domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "The unique id of the IP access control list to map to the SIP domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of IpAccessControlListMapping resources.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that uniquely identifies the SIP Domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip_access_control_list_mappings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Access control lists associated with a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that uniquely identifies the SIP Domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique id of the Account that is responsible for this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DomainSid",
            "in": "path",
            "description": "A string that uniquely identifies the SIP Domain",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Access control lists associated with a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Read multiple IpAddress resources.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip_addresses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Create a new IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid with which to associate the created IpAddress resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "IP addresses that have access to a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Read one IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the IpAddress resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update an IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the IpAddress resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAddress",
            "in": "query",
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CidrPrefixLength",
            "in": "query",
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete an IpAddress resource.",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The unique sid that identifies this account",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "path",
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that identifies the resource to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "IP addresses that have access to a SIP Domain"
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ApplicationSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ProvideFeedback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateSent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sms_messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Tokens.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new token",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "The duration in seconds the credentials are valid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.token"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of transcriptions belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transcriptions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.transcription"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Text transcriptions of call recordings"
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch an instance of a Transcription",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.transcription"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a transcription from the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Text transcriptions of call recordings"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of usage-records belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Twilio account usage records"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_all_time"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records for all time"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_daily"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records summarized by day"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_last_month"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records for last month"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_monthly"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records summarized by month"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_this_month"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records for this month"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_today"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records for today"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_yearly"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records summarized by year"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "The usage category of the UsageRecord resources to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only include usage that occurred on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeSubaccounts",
            "in": "query",
            "description": "Whether to include usage from the master account and all its subaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_yesterday"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Usage records for yesterday"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "post": {
        "description": "Create a new UsageTrigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that will create the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "The URL we call when the trigger fires",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "TriggerValue",
            "in": "query",
            "description": "The usage value at which the trigger should fire",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UsageCategory",
            "in": "query",
            "description": "The usage category the trigger watches",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method to use to call callback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Recurring",
            "in": "query",
            "description": "The frequency of a recurring UsageTrigger",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          {
            "name": "TriggerBy",
            "in": "query",
            "description": "The field in the UsageRecord resource that fires the trigger",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "count",
                "usage",
                "price"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of usage-triggers belonging to the account used to make the request",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Recurring",
            "in": "query",
            "description": "The frequency of recurring UsageTriggers to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          {
            "name": "TriggerBy",
            "in": "query",
            "description": "The trigger field of the UsageTriggers to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "count",
                "usage",
                "price"
              ]
            }
          },
          {
            "name": "UsageCategory",
            "in": "query",
            "description": "The usage category of the UsageTriggers to read",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_triggers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                      }
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "next_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Webhooks that notify you of usage thresholds"
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json": {
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch and instance of a usage-trigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Update an instance of a usage trigger",
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method to use to call callback_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "The URL we call when the trigger fires",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "path",
            "description": "The SID of the Account that created the resources to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Webhooks that notify you of usage thresholds"
    },
    "/v1/Services/{ServiceSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional metadata field you can use to store any data you wish.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel - public or private.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "public",
                "private"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Channels represent chat rooms"
    },
    "/v1/Services/{ServiceSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A unique, addressable name for the Channel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional metadata field you can use to store any data you wish.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Channels represent chat rooms"
    },
    "/v1/Credentials/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Friendly name for stored credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] URL encoded representation of the certificate, e.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] URL encoded representation of the private key, e.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] use this credential for sending to production or sandbox APNs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] This is the \"API key\" for project from Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credentials for push notifications channels"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this User in this Service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The Role assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this User in this Service.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invites": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Pending invitations to users to become channel members"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Pending invitations to users to become channel members"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this User in this Service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The Role assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for this User in this Service.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.member"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Users joined to specific channels"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The Role assigned to this member.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "An Integer representing index of the last Message this Member has read within this Channel",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Users joined to specific channels"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.message"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Individual chat messages"
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The new message body string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "The new attributes metadata field you can use to store any data you wish.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Individual chat messages"
    },
    "/v1/Services/{ServiceSid}/Roles": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The human-readable name of this role.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "What kind of role this is.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "channel",
                "deployment"
              ]
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "A permission this role should have.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.role"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Roles determining user or member permissions"
    },
    "/v1/Services/{ServiceSid}/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "A permission this role should have.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Roles determining user or member permissions"
    },
    "/v1/Services": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human-readable name for this service instance",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Top level scope for all chat resources"
    },
    "/v1/Services/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human-readable name for this service instance",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DefaultServiceRoleSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelRoleSid",
            "in": "query",
            "description": "Channel role assigned on channel join",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelCreatorRoleSid",
            "in": "query",
            "description": "Channel role assigned to creator of channel when joining for first time",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReadStatusEnabled",
            "in": "query",
            "description": "true if the member read status feature is enabled, false if not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReachabilityEnabled",
            "in": "query",
            "description": "true if the reachability feature should be enabled.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TypingIndicatorTimeout",
            "in": "query",
            "description": "ISO 8601 duration indicating the timeout after \"started typing\" event when client should assume that user is not typing anymore even if no \"ended typing\" message received",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConsumptionReportInterval",
            "in": "query",
            "description": "ISO 8601 duration indicating the interval between consumption reports sent from client endpoints.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Notifications.newMessage.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.newMessage.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.addedToChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.addedToChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.removedFromChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.removedFromChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.invitedToChannel.enabled",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.invitedToChannel.template",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreWebhookUrl",
            "in": "query",
            "description": "The webhook URL for PRE-Event webhooks.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "PostWebhookUrl",
            "in": "query",
            "description": "The webhook URL for POST-Event webhooks.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WebhookMethod",
            "in": "query",
            "description": "The webhook request format to use.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "WebhookFilters",
            "in": "query",
            "description": "The list of WebHook events that are enabled for this Service instance.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Webhooks.onMessageSend.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageSend.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageSend.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMessageUpdate.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageUpdate.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageUpdate.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMessageRemove.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageRemove.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageRemove.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelAdd.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelAdd.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelAdd.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelDestroy.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelDestroy.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelDestroy.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelUpdate.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelUpdate.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelUpdate.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMemberAdd.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMemberAdd.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMemberAdd.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMemberRemove.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMemberRemove.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMemberRemove.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMessageSent.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageSent.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageSent.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMessageUpdated.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageUpdated.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageUpdated.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMessageRemoved.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMessageRemoved.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMessageRemoved.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelAdded.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelAdded.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelAdded.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelDestroyed.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelDestroyed.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelDestroyed.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onChannelUpdated.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onChannelUpdated.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onChannelUpdated.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMemberAdded.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMemberAdded.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMemberAdded.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Webhooks.onMemberRemoved.url",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Webhooks.onMemberRemoved.method",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Webhooks.onMemberRemoved.format",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limits.channelMembers",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Limits.userChannels",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Top level scope for all chat resources"
    },
    "/v1/Services/{ServiceSid}/Users": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string that identifies the user within this service - often a username or email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The unique id of the Role assigned to this user.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string used to contain any metadata or other information for the User.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "An optional human readable string representing the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.user"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Unique chat users within a chat service"
    },
    "/v1/Services/{ServiceSid}/Users/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The unique id of the [Role][role] assigned to this user.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "An optional string used to contain any metadata or other information for the User.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "An optional human readable string representing the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Unique chat users within a chat service"
    },
    "/v1/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.user.user_channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "List of channels for a given user"
    },
    "/v2/Services/{ServiceSid}/Bindings": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The push technology used by the Binding resources to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gcm",
                  "apn",
                  "fcm"
                ]
              }
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value of the resources to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bindings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.binding"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Push notification subscription for users"
    },
    "/v2/Services/{ServiceSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Push notification subscription for users"
    },
    "/v2/Services/{ServiceSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "An application-defined string that uniquely identifies the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "public",
                "private"
              ]
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "description": "The identity of the User that created the Channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The visibility of the channel to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Channels represent chat rooms"
    },
    "/v2/Services/{ServiceSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "An application-defined string that uniquely identifies the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "description": "The identity of the User that created the Channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Channels represent chat rooms"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resources to read belong to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the new resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The type of webhook",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "webhook",
                "trigger",
                "studio"
              ]
            }
          },
          {
            "name": "Configuration.url",
            "in": "query",
            "description": "The URL of the webhook to call",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration.method",
            "in": "query",
            "description": "The HTTP method used to call `configuration.url`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "POST"
              ]
            }
          },
          {
            "name": "Configuration.filters",
            "in": "query",
            "description": "The events that cause us to call the Channel Webhook",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.triggers",
            "in": "query",
            "description": "A string that will cause us to call the webhook when it is found in a message body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.flowSid",
            "in": "query",
            "description": "The SID of the Studio Flow to call when an event occurs",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.retryCount",
            "in": "query",
            "description": "The number of times to retry the webhook if the first attempt fails",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resource to fetch belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resource to update belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.url",
            "in": "query",
            "description": "The URL of the webhook to call",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration.method",
            "in": "query",
            "description": "The HTTP method used to call `configuration.url`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "POST"
              ]
            }
          },
          {
            "name": "Configuration.filters",
            "in": "query",
            "description": "The events that cause us to call the Channel Webhook",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.triggers",
            "in": "query",
            "description": "A string that will cause us to call the webhook when it is found in a message body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Configuration.flowSid",
            "in": "query",
            "description": "The SID of the Studio Flow to call when an event occurs",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Configuration.retryCount",
            "in": "query",
            "description": "The number of times to retry the webhook if the first attempt fails",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the channel the resource to delete belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v2/Credentials": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.credential"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "The type of push-notification service the credential is for",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] The URL encoded representation of the certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] The URL encoded representation of the private key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] The Server key of your project from Firebase console",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credentials for push notifications channels"
    },
    "/v2/Credentials/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Certificate",
            "in": "query",
            "description": "[APN only] The URL encoded representation of the certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrivateKey",
            "in": "query",
            "description": "[APN only] The URL encoded representation of the private key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sandbox",
            "in": "query",
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApiKey",
            "in": "query",
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Secret",
            "in": "query",
            "description": "[FCM only] The Server key of your project from Firebase console",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Credentials for push notifications channels"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the new resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value that identifies the new resource's User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The Role assigned to the new member",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resources to read belong to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value of the resources to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invites": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Pending invitations to users to become channel members"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resource to fetch belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel the resource to delete belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Pending invitations to users to become channel members"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the new member belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value that identifies the new resource's User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The SID of the Role to assign to the member",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "The index of the last Message in the Channel the Member has read",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "LastConsumptionTimestamp",
            "in": "query",
            "description": "The ISO 8601 based timestamp string representing the date-time of the last Message read event for the Member within the Channel",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the member belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value of the resources to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.member"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Users joined to specific channels"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the member belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the message to delete belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the member to update belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The SID of the Role to assign to the member",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "LastConsumedMessageIndex",
            "in": "query",
            "description": "The index of the last consumed Message for the Channel for the Member",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "LastConsumptionTimestamp",
            "in": "query",
            "description": "The ISO 8601 based timestamp string representing the date-time of the last Message read event for the Member within the Channel",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Users joined to specific channels"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the new resource belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The identity of the new message's author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastUpdatedBy",
            "in": "query",
            "description": "The Identity of the User who last updated the Message",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The message to send to the channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MediaSid",
            "in": "query",
            "description": " The Media Sid to be attached to the new Message",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the Channel the message to read belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "description": "The sort order of the returned messages",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.message"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Individual chat messages"
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the Channel the message to fetch belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the channel the message to delete belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The unique ID of the Channel the message belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "description": "The message to send to the channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateUpdated",
            "in": "query",
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastUpdatedBy",
            "in": "query",
            "description": "The Identity of the User who last updated the Message, if applicable",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The identity of the message's author",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Individual chat messages"
    },
    "/v2/Services/{ServiceSid}/Roles": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The type of role",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "channel",
                "deployment"
              ]
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "A permission the role should have",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.role"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Roles determining user or member permissions"
    },
    "/v2/Services/{ServiceSid}/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Permission",
            "in": "query",
            "description": "A permission the role should have",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Roles determining user or member permissions"
    },
    "/v2/Services": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Top level scope for all chat resources"
    },
    "/v2/Services/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DefaultServiceRoleSid",
            "in": "query",
            "description": "The service role assigned to users when they are added to the service",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelRoleSid",
            "in": "query",
            "description": "The channel role assigned to users when they are added to a channel",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultChannelCreatorRoleSid",
            "in": "query",
            "description": "The channel role assigned to a channel creator when they join a new channel",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReadStatusEnabled",
            "in": "query",
            "description": "Whether to enable the Message Consumption Horizon feature",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReachabilityEnabled",
            "in": "query",
            "description": "Whether to enable the Reachability Indicator feature for this Service instance",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TypingIndicatorTimeout",
            "in": "query",
            "description": "How long in seconds to wait before assuming the user is no longer typing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConsumptionReportInterval",
            "in": "query",
            "description": "DEPRECATED",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Notifications.newMessage.enabled",
            "in": "query",
            "description": "Whether to send a notification when a new message is added to a channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.newMessage.template",
            "in": "query",
            "description": "The template to use to create the notification text displayed when a new message is added to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.newMessage.sound",
            "in": "query",
            "description": "The name of the sound to play when a new message is added to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.newMessage.badgeCountEnabled",
            "in": "query",
            "description": "Whether the new message badge is enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.addedToChannel.enabled",
            "in": "query",
            "description": "Whether to send a notification when a member is added to a channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.addedToChannel.template",
            "in": "query",
            "description": "The template to use to create the notification text displayed when a member is added to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.addedToChannel.sound",
            "in": "query",
            "description": "The name of the sound to play when a member is added to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.removedFromChannel.enabled",
            "in": "query",
            "description": "Whether to send a notification to a user when they are removed from a channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.removedFromChannel.template",
            "in": "query",
            "description": "The template to use to create the notification text displayed to a user when they are removed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.removedFromChannel.sound",
            "in": "query",
            "description": "The name of the sound to play to a user when they are removed from a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.invitedToChannel.enabled",
            "in": "query",
            "description": "Whether to send a notification when a user is invited to a channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notifications.invitedToChannel.template",
            "in": "query",
            "description": "The template to use to create the notification text displayed when a user is invited to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Notifications.invitedToChannel.sound",
            "in": "query",
            "description": "The name of the sound to play when a user is invited to a channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreWebhookUrl",
            "in": "query",
            "description": "The webhook URL for pre-event webhooks",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "PostWebhookUrl",
            "in": "query",
            "description": "The URL for post-event webhooks",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WebhookMethod",
            "in": "query",
            "description": "The HTTP method  to use for both PRE and POST webhooks",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "WebhookFilters",
            "in": "query",
            "description": "The list of WebHook events that are enabled for this Service instance",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Limits.channelMembers",
            "in": "query",
            "description": "The maximum number of Members that can be added to Channels within this Service",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Limits.userChannels",
            "in": "query",
            "description": "The maximum number of Channels Users can be a Member of within this Service",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Media.compatibilityMessage",
            "in": "query",
            "description": "The message to send when a media message has no text",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreWebhookRetryCount",
            "in": "query",
            "description": "Count of times webhook will be retried in case of timeout or 429/503/504 HTTP responses",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "PostWebhookRetryCount",
            "in": "query",
            "description": "The number of times calls to the `post_webhook_url` will be retried",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Notifications.logEnabled",
            "in": "query",
            "description": "Whether to log notifications",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Top level scope for all chat resources"
    },
    "/v2/Services/{ServiceSid}/Users": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the new resource under",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The `identity` value that identifies the new resource's User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The SID of the Role assigned to this user",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the new resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Unique chat users within a chat service"
    },
    "/v2/Services/{ServiceSid}/Users/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RoleSid",
            "in": "query",
            "description": "The SID id of the Role assigned to this user",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A valid JSON string that contains application-specific data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Unique chat users within a chat service"
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User of the User Bindings to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The push technology used by the User Binding resources to read",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gcm",
                  "apn",
                  "fcm"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bindings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user.user_binding"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "List of bindings for a given user"
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User for the binding",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User of the User Bindings to delete",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "List of bindings for a given user"
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": "List all Channels for a given User.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User to fetch the User Channel resources from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "List of channels for a given user"
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels/{ChannelSid}": {
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the User Channel resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User to fetch the User Channel resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel that has the User Channel to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The SID of the User to update the User Channel resource from",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelSid",
            "in": "path",
            "description": "The SID of the Channel with the User Channel resource to update",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "NotificationLevel",
            "in": "query",
            "description": "The push notification level to assign to the User Channel",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "muted"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "List of channels for a given user"
    },
    "/v1/Channels": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FlexFlowSid",
            "in": "query",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Chat User identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatUserFriendlyName",
            "in": "query",
            "description": "Customer friendly name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatFriendlyName",
            "in": "query",
            "description": "Chat channel friendly name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Target",
            "in": "query",
            "description": "Target Contact Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatUniqueName",
            "in": "query",
            "description": "Chat channel unique name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreEngagementData",
            "in": "query",
            "description": "Pre-engagement data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskSid",
            "in": "query",
            "description": "TaskRouter Task Sid.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskAttributes",
            "in": "query",
            "description": "Task attributes to be added for the TaskRouter Task",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LongLived",
            "in": "query",
            "description": "Long Lived flag",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Channel Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Channels/{ChatChannelSid}/Roles/{Role}/Users": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "ChatChannelSid",
            "in": "path",
            "description": "Channel Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Role",
            "in": "path",
            "description": "Chat role",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Chat identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.channel_user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Configuration": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "UiVersion",
            "in": "query",
            "description": "Pinned UI version",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/FlexFlows": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flex_flows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/flex.v1.flex_flow"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatServiceSid",
            "in": "query",
            "description": "Service Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelType",
            "in": "query",
            "description": "Channel type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          {
            "name": "ContactIdentity",
            "in": "query",
            "description": "Channel contact Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IntegrationType",
            "in": "query",
            "description": "Integration type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "studio",
                "external",
                "task"
              ]
            }
          },
          {
            "name": "Integration.flowSid",
            "in": "query",
            "description": "Flow Sid.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.url",
            "in": "query",
            "description": "External Webhook Url",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Integration.workspaceSid",
            "in": "query",
            "description": "Workspace Sid for a new task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.workflowSid",
            "in": "query",
            "description": "Workflow Sid for a new task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.channel",
            "in": "query",
            "description": "Task Channel for a new task",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Integration.timeout",
            "in": "query",
            "description": "Task timeout in seconds for a new task",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Integration.priority",
            "in": "query",
            "description": "Task priority for a new task",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Integration.creationOnMessage",
            "in": "query",
            "description": "Flag for task creation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "LongLived",
            "in": "query",
            "description": "Long Lived flag for new Channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/FlexFlows/{Sid}": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this FlexFlow",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatServiceSid",
            "in": "query",
            "description": "Service Sid.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChannelType",
            "in": "query",
            "description": "Channel type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          {
            "name": "ContactIdentity",
            "in": "query",
            "description": "Channel contact Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IntegrationType",
            "in": "query",
            "description": "Integration type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "studio",
                "external",
                "task"
              ]
            }
          },
          {
            "name": "Integration.flowSid",
            "in": "query",
            "description": "Flow Sid.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.url",
            "in": "query",
            "description": "External Webhook Url",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Integration.workspaceSid",
            "in": "query",
            "description": "Workspace Sid for a new task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.workflowSid",
            "in": "query",
            "description": "Workflow Sid for a new task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Integration.channel",
            "in": "query",
            "description": "Task Channel for a new task",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Integration.timeout",
            "in": "query",
            "description": "Task timeout in seconds for a new task",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Integration.priority",
            "in": "query",
            "description": "Task priority for a new task",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Integration.creationOnMessage",
            "in": "query",
            "description": "Flag for task creation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "LongLived",
            "in": "query",
            "description": "Long Lived flag for new Channel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Configuration/Public": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "AccountSid",
            "in": "query",
            "description": "The unique id of the Account responsible for this configuration",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RuntimeDomain",
            "in": "query",
            "description": "Flex resources hosting URL for the main UI",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "configurations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/flex.v1.public_configuration"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/WebChannels": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FlexFlowSid",
            "in": "query",
            "description": "The unique ID of the FlexFlow",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Chat identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CustomerFriendlyName",
            "in": "query",
            "description": "Customer friendly name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatFriendlyName",
            "in": "query",
            "description": "Chat channel friendly name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChatUniqueName",
            "in": "query",
            "description": "Chat channel unique name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PreEngagementData",
            "in": "query",
            "description": "Pre-engagement data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.web_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/WebChannels/{Sid}": {
      "servers": [
        {
          "url": "https://flex-api.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Channel Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ChatStatus",
            "in": "query",
            "description": "Chat status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "inactive"
              ]
            }
          },
          {
            "name": "PostEngagementData",
            "in": "query",
            "description": "Post-engagement data",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flex.v1.web_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/PhoneNumbers/{PhoneNumber}": {
      "servers": [
        {
          "url": "https://lookups.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "PhoneNumber",
            "in": "path",
            "description": "The phone number to fetch in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CountryCode",
            "in": "query",
            "description": "The ISO country code of the phone number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The type of information to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddOns",
            "in": "query",
            "description": "The unique_name of an Add-on you would like to invoke",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AddOnsData",
            "in": "query",
            "description": "Data specific to the add-on you would like to invoke",
            "required": false,
            "schema": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lookups.v1.phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "Phone numbers to lookup"
    },
    "/v1/Alerts": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "LogLevel",
            "in": "query",
            "description": "Only show alerts for this log-level.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only show Alerts on or after this date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only show Alerts on or before this date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/monitor.v1.alert"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Alerts/{Sid}": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/monitor.v1.alert|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Events": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a list of Events in this account, sorted by event-date.",
        "parameters": [
          {
            "name": "ActorSid",
            "in": "query",
            "description": "Only include Events initiated by this Actor",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EventType",
            "in": "query",
            "description": "Only include Events of this EventType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResourceSid",
            "in": "query",
            "description": "Only include Events referring to this resource",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SourceIpAddress",
            "in": "query",
            "description": "Only include Events that originated from this IP address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Only show events on or after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Only show events on or before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/monitor.v1.event"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Events/{Sid}": {
      "servers": [
        {
          "url": "https://monitor.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this event.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/monitor.v1.event"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/Identities/{IdentitySid}/Documents": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IdentitySid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/numbers.v1.identity.document"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/Identities/{IdentitySid}/Documents/{Sid}": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/Identities": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseIntentIsoCountry",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseIntentNumberType",
            "in": "query",
            "description": null,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/numbers.v1.identity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseIntentIsoCountry",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseIntentNumberType",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/numbers.v1.identity"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/Identities/{Sid}": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/numbers.v1.identity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/ProofOfAddresses": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "post": {
        "description": "Create an ProofOfAddress for authorizing the hosting of phone number capabilities on our platform.",
        "parameters": [
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource that is associated with the ProofOfAddress resource to create",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource that is associated with the ProofOfAddress resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/numbers.v1.proof_of_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "Retrieve a list of ProofOfAddresss belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "AddressSid",
            "in": "query",
            "description": "The SID of the Address resource that is associated with the ProofOfAddress resource to create",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IdentitySid",
            "in": "query",
            "description": "The SID of the Identity resource that is associated with the ProofOfAddress resource.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/numbers.v1.proof_of_address"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RegulatoryCompliance/ProofOfAddresses/{Sid}": {
      "servers": [
        {
          "url": "https://numbers.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific ProofOfAddress.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PG[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/numbers.v1.proof_of_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Messaging": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v1/Messaging/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pricing.v1.messaging.messaging_country"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Messaging/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": "The ISO country code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v1.messaging.messaging_country|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/PhoneNumbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v1/PhoneNumbers/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pricing.v1.phone_number.phone_number_country"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/PhoneNumbers/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": "The ISO country code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v1.phone_number.phone_number_country|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Voice": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v1/Voice/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pricing.v1.voice.voice_country"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Voice/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": "The ISO country code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v1.voice.voice_country|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Voice/Numbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v1/Voice/Numbers/{Number}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Number",
            "in": "path",
            "description": "The phone number to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v1.voice.voice_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v2/Voice": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v2/Voice/Countries": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pricing.v2.voice.voice_country"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v2/Voice/Countries/{IsoCountry}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a specific Country.",
        "parameters": [
          {
            "name": "IsoCountry",
            "in": "path",
            "description": "The ISO country code of the pricing information to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v2.voice.voice_country|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v2/Voice/Numbers": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs"
    },
    "/v2/Voice/Numbers/{DestinationNumber}": {
      "servers": [
        {
          "url": "https://pricing.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch pricing information for a specific destination and, optionally, origination phone number.",
        "parameters": [
          {
            "name": "DestinationNumber",
            "in": "path",
            "description": "The destination number for which to fetch pricing information",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OriginationNumber",
            "in": "query",
            "description": "The origination number for which to fetch pricing information",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v2.voice.voice_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Engagements for the Flow.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "engagements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/studio.v1.flow.engagement"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Triggers a new Engagement for the Flow",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The Contact phone number to start a Studio Flow Engagement.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The Twilio phone number to send messages or initiate calls from during the Flow Engagement.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": "JSON data that will be added to your flow's context and can accessed as variables inside your flow.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.engagement"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve an Engagement",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.engagement"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete this Engagement and all Steps relating to it.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the most recent context for an Engagement.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.engagement.engagement_context"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Executions for the Flow.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedFrom",
            "in": "query",
            "description": "Only show Executions that started on or after this ISO8601 date-time.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedTo",
            "in": "query",
            "description": "Only show Executions that started before this this ISO8601 date-time.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "executions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/studio.v1.flow.execution"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Triggers a new Execution for the Flow",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "The Contact phone number to start a Studio Flow Execution.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "The Twilio phone number to send messages or initiate calls from during the Flow Execution.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": "JSON data that will be added to your flow's context and can accessed as variables inside your flow.",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.execution"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve an Execution",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.execution"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete this Execution and all Steps relating to it.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the most recent context for an Execution.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.execution.execution_context"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Steps for an Execution.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/studio.v1.flow.execution.execution_step"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Step Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.execution.execution_step"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{StepSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the context for an Execution Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ExecutionSid",
            "in": "path",
            "description": "Execution Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StepSid",
            "in": "path",
            "description": "Step Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.execution.execution_step.execution_step_context"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Flows.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/studio.v1.flow"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a specific Flow.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that uniquely identifies this Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a specific Flow.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A string that uniquely identifies this Flow.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of all Steps for an Engagement.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/studio.v1.flow.engagement.step"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{Sid}": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Step Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.engagement.step"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{StepSid}/Context": {
      "servers": [
        {
          "url": "https://studio.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve the context for an Engagement Step.",
        "parameters": [
          {
            "name": "FlowSid",
            "in": "path",
            "description": "Flow Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EngagementSid",
            "in": "path",
            "description": "Engagement Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StepSid",
            "in": "path",
            "description": "Step Sid.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studio.v1.flow.engagement.step.step_context"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Activities": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by an Activity's friendly name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Filter by activities that are available or unavailable.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.activity"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Activity, such as 'On Call', 'Break', 'Email', etc.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Boolean value indicating whether the worker should be eligible to receive a Task when they occupy this Activity.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.activity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Activities/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.activity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human-readable name for the Activity, such as 'on-call', 'break', 'email', etc.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.activity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Events": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": "Filter events by those pertaining to a particular workspace",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter events by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EventType",
            "in": "query",
            "description": "Filter events by those of a certain event type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter events by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ReservationSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular reservation",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter events by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular queue",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular task",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular worker",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular workflow",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter events by those pertaining to a particular task channel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sid",
            "in": "query",
            "description": "Filter events by those pertaining to a particular event",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.event"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Events/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.event"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Retrieve the list of all Tasks in the workspace with the specified priority.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "AssignmentStatus",
            "in": "query",
            "description": "Returns the list of all Tasks in the workspace with the specified AssignmentStatus.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified Sid value.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowName",
            "in": "query",
            "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified FriendlyName value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Returns the list of Tasks that are currently waiting in the TaskQueue identified by the Sid specified.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Returns the list of Tasks that are currently waiting in the TaskQueue identified by the FriendlyName specified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EvaluateTaskAttributes",
            "in": "query",
            "description": "Provide a task attributes expression, and this will return tasks which match the attributes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ordering",
            "in": "query",
            "description": "Use this parameter to control the order of the Tasks returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasAddons",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.task"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "The amount of time in seconds the task is allowed to live up to a maximum of 2 weeks.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Override priority for the Task.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "When MultiTasking is enabled specify the type of the task by passing either TaskChannel Unique Name or Task Channel Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "query",
            "description": "The WorkflowSid for the Workflow that you would like to handle routing for this Task.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "Url-encoded JSON string describing the attributes of this task.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "The user-defined JSON data describing the custom attributes of this task.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentStatus",
            "in": "query",
            "description": "A 'pending' or 'reserved' Task may be canceled by posting AssignmentStatus='canceled'.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "reserved",
                "assigned",
                "canceled",
                "completed",
                "wrapping"
              ]
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "description": "This is only required if the Task is canceled or completed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "Override priority for the Task.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskChannels": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.task_channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "String representing user-friendly name for the TaskChannel",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "String representing unique name for the TaskChannel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Toggle the FriendlyName for the TaskChannel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a human readable description of a TaskQueue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EvaluateWorkerAttributes",
            "in": "query",
            "description": "Provide a Worker attributes expression, and this will return the list of TaskQueues that would distribute tasks to a worker with these attributes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkerSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_queues": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this TaskQueue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkers",
            "in": "query",
            "description": "A string describing the Worker selection criteria for any Tasks that enter this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxReservedWorkers",
            "in": "query",
            "description": "The maximum amount of workers to create reservations for the assignment of a task while in this queue.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskOrder",
            "in": "query",
            "description": "TaskOrder will determine which order the Tasks will be assigned to Workers.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          {
            "name": "ReservationActivitySid",
            "in": "query",
            "description": "ActivitySID to assign workers once a task is reserved for them",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignmentActivitySid",
            "in": "query",
            "description": "ActivitySID to assign workers once a task is assigned for them",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this TaskQueue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkers",
            "in": "query",
            "description": "A string describing the Worker selection criteria for any Tasks that enter this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReservationActivitySid",
            "in": "query",
            "description": "ActivitySID that will be assigned to Workers when they are reserved for a task from this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "AssignmentActivitySid",
            "in": "query",
            "description": "ActivitySID that will be assigned to Workers when they are assigned a task from this TaskQueue.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "MaxReservedWorkers",
            "in": "query",
            "description": "The maximum amount of workers to create reservations for the assignment of a task while in this queue.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "TaskOrder",
            "in": "query",
            "description": "TaskOrder will determine which order the Tasks will be assigned to Workers.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue.task_queue_cumulative_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue.task_queue_real_time_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue.task_queue_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/TaskQueues/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter the TaskQueue stats based on a TaskQueue's name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_queues_statistics": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.task_queue.task_queues_statistics"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Returns the list of reservations for a task with a specified ReservationStatus",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.task.task_reservation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task.task_reservation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "New reservation status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          {
            "name": "WorkerActivitySid",
            "in": "query",
            "description": "New worker activity sid if rejecting a reservation",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Instruction",
            "in": "query",
            "description": "Assignment instruction for reservation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeuePostWorkActivitySid",
            "in": "query",
            "description": "New worker activity sid after executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DequeueFrom",
            "in": "query",
            "description": "Caller ID for the call to the worker when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueRecord",
            "in": "query",
            "description": "Attribute to record both legs of a call when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueTimeout",
            "in": "query",
            "description": "Timeout for call when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DequeueTo",
            "in": "query",
            "description": "Contact URI of the worker when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackUrl",
            "in": "query",
            "description": "Callback URL for completed call event when executing a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallFrom",
            "in": "query",
            "description": "Caller ID for the outbound call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallRecord",
            "in": "query",
            "description": "Attribute to record both legs of a call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallTimeout",
            "in": "query",
            "description": "Timeout for call when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CallTo",
            "in": "query",
            "description": "Contact URI of the worker when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallUrl",
            "in": "query",
            "description": "TwiML URI executed on answering the worker's leg as a result of the Call instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallStatusCallbackUrl",
            "in": "query",
            "description": "Callback URL for completed call event when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallAccept",
            "in": "query",
            "description": "Flag to determine if reservation should be accepted when executing a Call instruction",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectCallSid",
            "in": "query",
            "description": "Call sid of the call parked in the queue when executing a Redirect instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RedirectAccept",
            "in": "query",
            "description": "Flag to determine if reservation should be accepted when executing a Redirect instruction",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectUrl",
            "in": "query",
            "description": "TwiML URI to redirect the call to when executing the Redirect instruction",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Contact URI of the worker when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Caller ID for the call to the worker when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "initiated",
                  "ringing",
                  "answered",
                  "completed"
                ]
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": "Timeout for call when executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "start",
                  "end",
                  "join",
                  "leave",
                  "mute",
                  "hold",
                  "speaker"
                ]
              }
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackEvent",
            "in": "query",
            "description": "Call progress events sent via webhooks as a result of a Dequeue instruction",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PostWorkActivitySid",
            "in": "query",
            "description": "New worker activity sid after executing a Conference instruction",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SupervisorMode",
            "in": "query",
            "description": "Supervisor mode when executing the Supervise instruction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "monitor",
                "whisper",
                "barge"
              ]
            }
          },
          {
            "name": "Supervisor",
            "in": "query",
            "description": "Supervisor sid/uri when executing the Supervise instruction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndConferenceOnCustomerExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BeepOnCustomerEntrance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.task.task_reservation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ActivityName",
            "in": "query",
            "description": "Filter by workers that are in a particular Activity by Friendly Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": "Filter by workers that are in a particular Activity by SID",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Filter by workers that are available or unavailable.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a worker's friendly name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetWorkersExpression",
            "in": "query",
            "description": "Filter by workers that would match an expression on a TaskQueue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Filter by workers that are eligible for a TaskQueue by Friendly Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter by workers that are eligible for a TaskQueue by SID",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.worker"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "String representing user-friendly name for the Worker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": "A valid Activity describing the worker's initial state.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "JSON object describing this worker.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ActivitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RejectPendingReservations",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_channel"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Capacity",
            "in": "query",
            "description": "The total number of Tasks worker should handle for this TaskChannel type.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Available",
            "in": "query",
            "description": "Toggle the availability of the WorkerChannel.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_instance_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Filter by a worker's reservation status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_reservation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_reservation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkerSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ReservationStatus",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          {
            "name": "WorkerActivitySid",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Instruction",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeuePostWorkActivitySid",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DequeueFrom",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueTimeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DequeueTo",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallFrom",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallTimeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "CallTo",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallUrl",
            "in": "query",
            "description": "Yes",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallStatusCallbackUrl",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CallAccept",
            "in": "query",
            "description": "No",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectCallSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "RedirectAccept",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RedirectUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "StatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "initiated",
                  "ringing",
                  "answered",
                  "completed"
                ]
              }
            }
          },
          {
            "name": "Timeout",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Record",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Muted",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Beep",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartConferenceOnEnter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EndConferenceOnExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WaitUrl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "WaitMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "EarlyMedia",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ConferenceStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "start",
                  "end",
                  "join",
                  "leave",
                  "mute",
                  "hold",
                  "speaker"
                ]
              }
            }
          },
          {
            "name": "ConferenceRecord",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConferenceTrim",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingChannels",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "RecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "ConferenceRecordingStatusCallback",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ConferenceRecordingStatusCallbackMethod",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Region",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthUsername",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipAuthPassword",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DequeueStatusCallbackEvent",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PostWorkActivitySid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndConferenceOnCustomerExit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BeepOnCustomerEntrance",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_reservation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskQueueSid",
            "in": "query",
            "description": "Filter the real-time and cumulative statistics based on Workers tied to a particular queue",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskQueueName",
            "in": "query",
            "description": "Filter the real-time and cumulative statistics based on Workers tied to a particular queue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.worker_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by a end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.workers_cumulative_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workers/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.worker.workers_real_time_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this Workflow",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string representing a human readable name for this Workflow.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "JSON document configuring the rules for this Workflow.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentCallbackUrl",
            "in": "query",
            "description": "A valid URL for the application that will process task assignment events.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackAssignmentCallbackUrl",
            "in": "query",
            "description": "If the request to the AssignmentCallbackUrl fails, the assignment callback will be made to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "TaskReservationTimeout",
            "in": "query",
            "description": "An integer value controlling how long in seconds TaskRouter will wait for a confirmation response from your application after assigning a Task to a worker.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string representing a human readable name for this Workflow.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentCallbackUrl",
            "in": "query",
            "description": "A valid URL for the application that will process task assignment events.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FallbackAssignmentCallbackUrl",
            "in": "query",
            "description": "If the request to the AssignmentCallbackUrl fails, the assignment callback will be made to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "JSON document configuring the rules for this Workflow.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TaskReservationTimeout",
            "in": "query",
            "description": "An integer value controlling how long in seconds TaskRouter will wait for a confirmation response from your application after assigning a Task to a worker.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow.workflow_cumulative_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow.workflow_real_time_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "WorkflowSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workflow.workflow_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Filter by a workspace's friendly name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/taskrouter.v1.workspace"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EventCallbackUrl",
            "in": "query",
            "description": "If provided, the Workspace will publish events to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EventsFilter",
            "in": "query",
            "description": "Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MultiTaskEnabled",
            "in": "query",
            "description": "Multi tasking allows workers to handle multiple tasks simultaneously.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Template",
            "in": "query",
            "description": "One of the available template names.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrioritizeQueueOrder",
            "in": "query",
            "description": "Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{Sid}": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DefaultActivitySid",
            "in": "query",
            "description": "The ID of the Activity that will be used when new Workers are created in this Workspace.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EventCallbackUrl",
            "in": "query",
            "description": "The Workspace will publish events to this URL.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "EventsFilter",
            "in": "query",
            "description": "Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "Human readable description of this workspace",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MultiTaskEnabled",
            "in": "query",
            "description": "Enable or Disable Multitasking by passing either true or False with the POST request.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TimeoutActivitySid",
            "in": "query",
            "description": "The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PrioritizeQueueOrder",
            "in": "query",
            "description": "Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/CumulativeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workspace_cumulative_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/RealTimeStatistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workspace_real_time_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Workspaces/{WorkspaceSid}/Statistics": {
      "servers": [
        {
          "url": "https://taskrouter.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "WorkspaceSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Minutes",
            "in": "query",
            "description": "Filter cumulative statistics by up to 'x' minutes in the past.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Filter cumulative statistics by a start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Filter cumulative statistics by an end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TaskChannel",
            "in": "query",
            "description": "Filter real-time and cumulative statistics by TaskChannel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SplitByWaitTime",
            "in": "query",
            "description": "A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskrouter.v1.workspace.workspace_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/CredentialLists": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk to associate the credential list with",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "CredentialListSid",
            "in": "query",
            "description": "The SID of the Credential List that you want to associate with the trunk",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to read the credential lists",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credential_lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk.credential_list"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/CredentialLists/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to fetch the credential list",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to delete the credential list",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/IpAccessControlLists": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": "Associate an IP Access Control List with a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk to associate the IP Access Control List with",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "IpAccessControlListSid",
            "in": "query",
            "description": "The SID of the IP Access Control List that you want to associate with the trunk",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "List all IP Access Control Lists for a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to read the IP Access Control Lists",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip_access_control_lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk.ip_access_control_list"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/IpAccessControlLists/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to fetch the IP Access Control List",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Remove an associated IP Access Control List from a Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to delete the IP Access Control List",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/OriginationUrls": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk to associate the resource with",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Weight",
            "in": "query",
            "description": "The value that determines the relative load the URI should receive compared to others with the same priority",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "The relative importance of the URI",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Whether the URL is enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipUrl",
            "in": "query",
            "description": "The SIP address you want Twilio to route your Origination calls to",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.origination_url"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to read the OriginationUrl",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "origination_urls": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk.origination_url"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/OriginationUrls/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to fetch the OriginationUrl",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.origination_url"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to delete the OriginationUrl",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to update the OriginationUrl",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Weight",
            "in": "query",
            "description": "The value that determines the relative load the URI should receive compared to others with the same priority",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "description": "The relative importance of the URI",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "description": "Whether the URL is enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SipUrl",
            "in": "query",
            "description": "The SIP address you want Twilio to route your Origination calls to",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.origination_url"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/PhoneNumbers": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk to associate the phone number with",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PhoneNumberSid",
            "in": "query",
            "description": "The SID of the Incoming Phone Number that you want to associate with the trunk",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to read the PhoneNumber resources",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk.phone_number"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/PhoneNumbers/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to fetch the PhoneNumber resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk from which to delete the PhoneNumber resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/TerminatingSipDomains": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": "Associate a SIP Domain with the Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk to which we should route calls",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SipDomainSid",
            "in": "query",
            "description": "The SID of the SIP Domain to associate with the trunk",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.terminating_sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": "List SIP Domains associated with the Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk with the resources to read",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sip_domains": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk.terminating_sip_domain"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{TrunkSid}/TerminatingSipDomains/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch the details of an associated SIP Domain",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk with the resource to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk.terminating_sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Disassociate a SIP Domain from the Trunk",
        "parameters": [
          {
            "name": "TrunkSid",
            "in": "path",
            "description": "The SID of the Trunk with the resources to disassociate",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource to disassociate",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisasterRecoveryUrl",
            "in": "query",
            "description": "The HTTP URL that we should call if an error occurs while sending SIP traffic towards your configured Origination URL",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "DisasterRecoveryMethod",
            "in": "query",
            "description": "The HTTP method we should use to call the disaster_recovery_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Recording",
            "in": "query",
            "description": "The recording settings for the trunk",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "do-not-record",
                "record-from-ringing",
                "record-from-answer"
              ]
            }
          },
          {
            "name": "Secure",
            "in": "query",
            "description": "Whether Secure Trunking is enabled for the trunk",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CnamLookupEnabled",
            "in": "query",
            "description": "Whether Caller ID Name (CNAM) lookup should be enabled for the trunk",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "trunks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trunking.v1.trunk"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Trunks/{Sid}": {
      "servers": [
        {
          "url": "https://trunking.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique string that identifies the resource",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A string to describe the resource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DomainName",
            "in": "query",
            "description": "The unique address you reserve on Twilio to which you route your SIP traffic",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisasterRecoveryUrl",
            "in": "query",
            "description": "The HTTP URL that we should call if an error occurs while sending SIP traffic towards your configured Origination URL",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "DisasterRecoveryMethod",
            "in": "query",
            "description": "The HTTP method we should use to call the disaster_recovery_url",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "Recording",
            "in": "query",
            "description": "The recording settings for the trunk",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "do-not-record",
                "record-from-ringing",
                "record-from-answer"
              ]
            }
          },
          {
            "name": "Secure",
            "in": "query",
            "description": "Whether Secure Trunking is enabled for the trunk",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CnamLookupEnabled",
            "in": "query",
            "description": "Whether Caller ID Name (CNAM) lookup should be enabled for the trunk",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trunking.v1.trunk"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Compositions/{CompositionSid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves the media file associated to a given Composition Instance resource identified by a `CompositionSid`.",
        "parameters": [
          {
            "name": "CompositionSid",
            "in": "path",
            "description": "The Composition Sid that uniquely identifies the Composition media to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Duration in seconds for which the `redirect_to` URL can be used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "Sets the `Content-Disposition` header of the `redirect_to` URL.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition.composition_media"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Recordings": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "List of all Track Recordings.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Recordings with the given status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          {
            "name": "SourceSid",
            "in": "query",
            "description": "Only show the Recordings with the given source Sid.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "GroupingSid",
            "in": "query",
            "description": "Only show Recordings that have this GroupingSid.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 34,
                "maxLength": 34,
                "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
              }
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Recordings that started on or after this ISO8601 date-time with timezone.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Recordings that started before this ISO8601 date-time with timezone.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MediaType",
            "in": "query",
            "description": "Only show Recordings that have this media type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recordings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.recording"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Recordings/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Sid that uniquely identifies the Recording to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Recording Sid that uniquely identifies the Recording to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Recordings/{RecordingSid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieves the media file associated to a given Recording Instance resource identified by a `RecordingSid`.",
        "parameters": [
          {
            "name": "RecordingSid",
            "in": "path",
            "description": "The Recording Sid that uniquely identifies the Recording media to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": "Duration in seconds for which the `redirect_to` URL can be used.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "Sets the `Content-Disposition` header of the `redirect_to` URL.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.recording.recording_media"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "EnableTurn",
            "in": "query",
            "description": "Use Twilio Network Traversal for TURN service.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Type of room, either peer-to-peer, group-small or group.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "peer-to-peer",
                "group",
                "group-small"
              ]
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Name of the Room.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCallback",
            "in": "query",
            "description": "A URL that Twilio sends asynchronous webhook requests to on every room event.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "StatusCallbackMethod",
            "in": "query",
            "description": "HTTP method Twilio should use when requesting the above URL.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "MaxParticipants",
            "in": "query",
            "description": "Maximum number of Participants in the Room.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RecordParticipantsOnConnect",
            "in": "query",
            "description": "Start Participant recording when connected.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VideoCodecs",
            "in": "query",
            "description": "An array of video codecs supported when publishing a Track in the Room.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "VP8",
                  "H264"
                ]
              }
            }
          },
          {
            "name": "MediaRegion",
            "in": "query",
            "description": "Region for the media server in Group Rooms.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Rooms with the given status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Only show Rooms with the provided Name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Rooms that started on or after this date, given as YYYY-MM-DD.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Rooms that started before this date, given as YYYY-MM-DD.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Set to completed to end the Room.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Participants": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only show Participants with the given Status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "connected",
                "disconnected"
              ]
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "Only show Participants that connected to the Room using the provided Identity.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": "Only show Participants that started after this date, given as an UTC ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": "Only show Participants that started before this date, given as an UTC ISO 8601 Timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Set to disconnected to remove participant.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "connected",
                "disconnected"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a list of tracks associated with a given Participant. Only `currently` Published Tracks are in the list resource.",
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": "Unique Room identifier where this Track is published.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": "Unique Participant identifier that publishes this Track.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "published_tracks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_published_track"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": "Returns a single Track resource represented by `TrackNameOrSid`.",
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": "Unique Room identifier where this Track is published.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "ParticipantSid",
            "in": "path",
            "description": "Unique Participant identifier that publishes this Track.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_published_track"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Participants/{SubscriberSid}/SubscribedTracks": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SubscriberSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Track",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Publisher",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Kind",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscribed_tracks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribed_track"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "SubscriberSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Track",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Publisher",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Kind",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "subscribe",
                "unsubscribe"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribed_track"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Recordings": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          {
            "name": "SourceSid",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "DateCreatedAfter",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateCreatedBefore",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recordings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_recording"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Recordings/{Sid}": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Rooms/{RoomSid}/Recordings/{Sid}/Media": {
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "RoomSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Ttl",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_recording.room_recording_media"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Commands": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Commands from your account.",
        "parameters": [
          {
            "name": "Sim",
            "in": "query",
            "description": "Only return Commands to or from this SIM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Only return Commands with this status value.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "sent",
                "delivered",
                "received",
                "failed"
              ]
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "description": "Only return Commands with this direction value.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "from_sim",
                "to_sim"
              ]
            }
          },
          {
            "name": "Transport",
            "in": "query",
            "description": "Only return Commands with this transport value.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "sms",
                "ip"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "commands": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.command"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Send a Command to a Sim.",
        "parameters": [
          {
            "name": "Command",
            "in": "query",
            "description": "The message body of the Command or a Base64 encoded byte string in binary mode.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sim",
            "in": "query",
            "description": "The Sid or UniqueName of the SIM to send the Command to.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making a request to the callback URL.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this URL when the Command has finished sending.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "CommandMode",
            "in": "query",
            "description": "A string representing which mode to send the SMS message using.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "binary"
              ]
            }
          },
          {
            "name": "IncludeSid",
            "in": "query",
            "description": "When sending a Command to a SIM in text mode, Twilio can automatically include the Sid of the Command in the message body, which could be used to ensure that the device does not process the same Command more than once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryReceiptRequested",
            "in": "query",
            "description": "A boolean representing whether to request delivery receipt from the recipient.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Commands/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a Command instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Command instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Sims/{SimSid}/DataSessions": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "End",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data_sessions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim.data_session"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RatePlans": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rate_plans": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.rate_plan"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of using GPRS/3G/LTE data connectivity.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DataLimit",
            "in": "query",
            "description": "Network-enforced limit specifying the total Megabytes of data usage allowed during one month on the home network.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "DataMetering",
            "in": "query",
            "description": "The model by which to meter data usage, in accordance with the two available data metering models.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MessagingEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of making and sending and receiving SMS messages via either Commands or Programmable SMS APIs.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VoiceEnabled",
            "in": "query",
            "description": "Defines whether SIMs are capable of making and receiving voice calls.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NationalRoamingEnabled",
            "in": "query",
            "description": "Defines whether SIMs can roam onto other networks in the SIM's home country.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InternationalRoaming",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "NationalRoamingDataLimit",
            "in": "query",
            "description": "Network-enforced limit specifying the total Megabytes of national roaming data usage allowed during one month.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "InternationalRoamingDataLimit",
            "in": "query",
            "description": null,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/RatePlans/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": null,
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Sims": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Retrieve a list of Sims from your account.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Only return Sims with this status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          {
            "name": "Iccid",
            "in": "query",
            "description": "Return Sims with this Iccid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": "Only return Sims with this Rate Plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EId",
            "in": "query",
            "description": "Only return Sims with this EID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SimRegistrationCode",
            "in": "query",
            "description": "Only return Sims with this registration code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sims": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Sims/{Sid}": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": "Fetch a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "post": {
        "description": "Updates the given properties of a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when making a request to the callback URL.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CallbackUrl",
            "in": "query",
            "description": "Twilio will make a request to this URL when the Sim has finished updating.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A user-provided string that identifies this resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": "The Sid or UniqueName of the RatePlan that this Sim should use.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string representing the status of the Sim.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          {
            "name": "CommandsCallbackMethod",
            "in": "query",
            "description": "A string representing the HTTP method to use when making a request to CommandsCallbackUrl.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "CommandsCallbackUrl",
            "in": "query",
            "description": "The URL that will receive a webhook when this Sim originates a Command.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the sms_fallback_url.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by sms_url.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "SmsMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above Url.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "SmsUrl",
            "in": "query",
            "description": "The URL Twilio will request when the SIM-connected device sends an SMS message that is not a Command.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceFallbackMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the voice_fallback_url.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceFallbackUrl",
            "in": "query",
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by voice_url.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "VoiceMethod",
            "in": "query",
            "description": "The HTTP method Twilio will use when requesting the above Url.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          {
            "name": "VoiceUrl",
            "in": "query",
            "description": "The URL Twilio will request when the SIM-connected device makes a call.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "ResetStatus",
            "in": "query",
            "description": "Initiate a connectivity reset on a Sim.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "resetting"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "delete": {
        "description": "Delete a Sim instance from your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    },
    "/v1/Sims/{SimSid}/UsageRecords": {
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "get": {
        "description": null,
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": null,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "End",
            "in": "query",
            "description": "Only include usage that has occurred on or before this date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": "Only include usage that has occurred on or after this date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Granularity",
            "in": "query",
            "description": "The time-based grouping that results are aggregated by.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "hourly",
                "daily",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage_records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim.usage_record"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ]
      },
      "description": "TODO: Resource-level docs"
    }
  },
  "components": {
    "schemas": {
      "accounts.v1.credential": {
        "type": "object",
        "properties": {}
      },
      "accounts.v1.credential.credential_aws": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "accounts.v1.credential.credential_public_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account": {
        "type": "object",
        "properties": {
          "auth_token": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "owner_account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "active",
                "suspended",
                "closed"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "Trial",
                "Full"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.address": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "city": {
            "type": {
              "type": "string"
            }
          },
          "customer_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "street": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "emergency_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "validated": {
            "type": {
              "type": "boolean"
            }
          },
          "verified": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "api.v2010.account.application": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "message_status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.authorized_connect_app": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "connect_app_company_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_description": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_homepage_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "connect_app_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_local": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_machine_to_machine": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_mobile": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_national": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_shared_cost": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_toll_free": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_voip": {
        "type": "object",
        "properties": {
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.balance": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "balance": {
            "type": {
              "type": "string"
            }
          },
          "currency": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.call": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "annotation": {
            "type": {
              "type": "string"
            }
          },
          "answered_by": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "caller_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "end_time": {
            "type": {
              "type": "string"
            }
          },
          "forwarded_from": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "from_formatted": {
            "type": {
              "type": "string"
            }
          },
          "group_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^GP[0-9a-fA-F]{32}$"
            }
          },
          "parent_call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "phone_number_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "to_formatted": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.call.call_feedback": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "issues": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ]
              }
            }
          },
          "quality_score": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.call.call_feedback_summary": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_count": {
            "type": {
              "type": "integer"
            }
          },
          "call_feedback_count": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "include_subaccounts": {
            "type": {
              "type": "boolean"
            }
          },
          "issues": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "quality_score_average": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_median": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_standard_deviation": {
            "type": {
              "type": "number"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "in-progress",
                "completed",
                "failed"
              ]
            }
          }
        }
      },
      "api.v2010.account.call.call_notification": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.call.call_notification|instance": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_variables": {
            "type": {
              "type": "string"
            }
          },
          "response_body": {
            "type": {
              "type": "string"
            }
          },
          "response_headers": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.call.call_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        }
      },
      "api.v2010.account.conference": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "init",
                "in-progress",
                "completed"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.conference.conference_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.connect_app": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "authorize_redirect_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "company_name": {
            "type": {
              "type": "string"
            }
          },
          "deauthorize_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "deauthorize_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "homepage_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "get-all",
                  "post-all"
                ]
              }
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.address.dependent_phone_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "emergency_status": {
            "type": {
              "type": "string",
              "enum": [
                "Active",
                "Inactive"
              ]
            }
          },
          "emergency_address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "emergency_status": {
            "type": {
              "type": "string",
              "enum": [
                "Active",
                "Inactive"
              ]
            }
          },
          "emergency_address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_local": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_mobile": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "boolean"
                },
                "mms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.message.media": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "parent_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.queue.member": {
        "type": "object",
        "properties": {
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_enqueued": {
            "type": {
              "type": "string"
            }
          },
          "position": {
            "type": {
              "type": "integer"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "wait_time": {
            "type": {
              "type": "integer"
            }
          },
          "queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enum": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ]
            }
          },
          "error_code": {
            "type": {
              "type": "integer"
            }
          },
          "error_message": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "messaging_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "num_media": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "sending",
                "sent",
                "failed",
                "delivered",
                "undelivered",
                "receiving",
                "received",
                "accepted"
              ]
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.message.message_feedback": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "message_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MM[0-9a-fA-F]{32}$"
            }
          },
          "outcome": {
            "type": {
              "type": "string",
              "enum": [
                "confirmed",
                "umconfirmed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.new_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.new_signing_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.notification": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.notification|instance": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_variables": {
            "type": {
              "type": "string"
            }
          },
          "response_body": {
            "type": {
              "type": "string"
            }
          },
          "response_headers": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.outgoing_caller_id": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.conference.participant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "call_sid_to_coach": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "coaching": {
            "type": {
              "type": "boolean"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_conference_on_exit": {
            "type": {
              "type": "boolean"
            }
          },
          "muted": {
            "type": {
              "type": "boolean"
            }
          },
          "hold": {
            "type": {
              "type": "boolean"
            }
          },
          "start_conference_on_enter": {
            "type": {
              "type": "boolean"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "connecting",
                "ringing",
                "connected",
                "complete",
                "failed"
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.queue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "average_wait_time": {
            "type": {
              "type": "integer"
            }
          },
          "current_size": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "max_size": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          },
          "conference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "price": {
            "type": {
              "type": "string"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ]
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "source": {
            "type": {
              "type": "string",
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ]
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "canceled",
                "completed",
                "deleted",
                "failed",
                "in-progress",
                "init",
                "processing",
                "queued"
              ]
            }
          },
          "add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_completed": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$"
            }
          },
          "add_on_result_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "label": {
            "type": {
              "type": "string"
            }
          },
          "add_on_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload.recording_add_on_result_payload_data": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.recording.recording_transcription": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.short_code": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "short_code": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.signing_key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.sip": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_credential_list.sip_credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "credential_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_credential_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_credential_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "sip_registration": {
            "type": {
              "type": "boolean"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_ip_access_control_list": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.sms": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.sms.sms_message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enum": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ]
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "sending",
                "sent",
                "failed",
                "received"
              ]
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.token": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "ice_servers": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "password": {
            "type": {
              "type": "string"
            }
          },
          "ttl": {
            "type": {
              "type": "string"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.transcription": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "api.v2010.account.usage": {
        "type": "object",
        "properties": {}
      },
      "api.v2010.account.usage.usage_record": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_all_time": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_daily": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_last_month": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_monthly": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_this_month": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_today": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_yearly": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_record.usage_record_yesterday": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "subresource_uris": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.usage.usage_trigger": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "current_value": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_fired": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "recurring": {
            "type": {
              "type": "string",
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$"
            }
          },
          "trigger_by": {
            "type": {
              "type": "string",
              "enum": [
                "count",
                "usage",
                "price"
              ]
            }
          },
          "trigger_value": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "usage_category": {
            "type": {
              "type": "string",
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ]
            }
          },
          "usage_record_uri": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "api.v2010.account.validation_request": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "validation_code": {
            "type": {
              "type": "integer"
            }
          },
          "call_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "chat.v1.service.channel": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "public",
                "private"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "members_count": {
            "type": {
              "type": "integer"
            }
          },
          "messages_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v1.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "sandbox": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.invite": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.member": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "last_consumption_timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.channel.message": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "was_edited": {
            "type": {
              "type": "boolean"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "channel",
                "deployment"
              ]
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_service_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_creator_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "read_status_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "reachability_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "typing_indicator_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "consumption_report_interval": {
            "type": {
              "type": "integer"
            }
          },
          "limits": {
            "type": {
              "type": "object"
            }
          },
          "webhooks": {
            "type": {
              "type": "object"
            }
          },
          "pre_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "post_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "webhook_filters": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "notifications": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v1.service.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "is_online": {
            "type": {
              "type": "boolean"
            }
          },
          "is_notifiable": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "joined_channels_count": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v1.service.user.user_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "member_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "joined",
                "invited",
                "not_participating"
              ]
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "unread_messages_count": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "binding_type": {
            "type": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "message_types": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.channel": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "public",
                "private"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "members_count": {
            "type": {
              "type": "integer"
            }
          },
          "messages_count": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.channel.channel_webhook": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "chat.v2.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "sandbox": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.channel.invite": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.channel.member": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "last_consumption_timestamp": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "chat.v2.service.channel.message": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "to": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "last_updated_by": {
            "type": {
              "type": "string"
            }
          },
          "was_edited": {
            "type": {
              "type": "boolean"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "media": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "channel",
                "deployment"
              ]
            }
          },
          "permissions": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_service_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "default_channel_creator_role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "read_status_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "reachability_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "typing_indicator_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "consumption_report_interval": {
            "type": {
              "type": "integer"
            }
          },
          "limits": {
            "type": {
              "type": "object"
            }
          },
          "pre_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "post_webhook_url": {
            "type": {
              "type": "string"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "webhook_filters": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "pre_webhook_retry_count": {
            "type": {
              "type": "integer"
            }
          },
          "post_webhook_retry_count": {
            "type": {
              "type": "integer"
            }
          },
          "notifications": {
            "type": {
              "type": "object"
            }
          },
          "media": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "chat.v2.service.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "role_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "is_online": {
            "type": {
              "type": "boolean"
            }
          },
          "is_notifiable": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "joined_channels_count": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.user.user_binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "endpoint": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "user_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "credential_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            }
          },
          "binding_type": {
            "type": {
              "type": "string",
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ]
            }
          },
          "message_types": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "chat.v2.service.user.user_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "user_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "member_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "joined",
                "invited",
                "not_participating"
              ]
            }
          },
          "last_consumed_message_index": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "unread_messages_count": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "notification_level": {
            "type": {
              "type": "string",
              "enum": [
                "default",
                "muted"
              ]
            }
          }
        }
      },
      "flex.v1.channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flex_flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "user_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "flex.v1.channel_user": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "chat_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "role": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "flex.v1.configuration": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "attributes": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "ok",
                "inprogress",
                "notstarted"
              ]
            }
          },
          "taskrouter_workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_target_workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_target_taskqueue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "taskrouter_taskqueues": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "taskrouter_skills": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "taskrouter_worker_channels": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_worker_attributes": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_offline_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "runtime_domain": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "messaging_service_instance_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            }
          },
          "chat_service_instance_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "ui_language": {
            "type": {
              "type": "string"
            }
          },
          "ui_attributes": {
            "type": {
              "type": "object"
            }
          },
          "ui_version": {
            "type": {
              "type": "string"
            }
          },
          "service_version": {
            "type": {
              "type": "string"
            }
          },
          "call_recording_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "call_recording_webhook_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "crm_type": {
            "type": {
              "type": "string"
            }
          },
          "crm_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "crm_attributes": {
            "type": {
              "type": "object"
            }
          },
          "public_attributes": {
            "type": {
              "type": "object"
            }
          },
          "plugin_service_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "plugin_service_attributes": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "flex.v1.flex_flow": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "chat_service_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            }
          },
          "channel_type": {
            "type": {
              "type": "string",
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ]
            }
          },
          "contact_identity": {
            "type": {
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "integration_type": {
            "type": {
              "type": "string",
              "enum": [
                "studio",
                "external",
                "task"
              ]
            }
          },
          "integration": {
            "type": {
              "type": "object"
            }
          },
          "long_lived": {
            "type": {
              "type": "boolean"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "flex.v1.public_configuration": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "runtime_domain": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "public_attributes": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "flex.v1.web_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flex_flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "lookups.v1.phone_number": {
        "type": "object",
        "properties": {
          "caller_name": {
            "type": {
              "type": "object"
            }
          },
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "national_format": {
            "type": {
              "type": "string"
            }
          },
          "carrier": {
            "type": {
              "type": "object"
            }
          },
          "add_ons": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "monitor.v1.alert": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "alert_text": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_generated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log_level": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "monitor.v1.alert|instance": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "alert_text": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_generated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log_level": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "request_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "request_variables": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "response_body": {
            "type": {
              "type": "string"
            }
          },
          "response_headers": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "monitor.v1.event": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "actor_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$"
            }
          },
          "actor_type": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "event_data": {
            "type": {
              "type": "object"
            }
          },
          "event_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "event_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AE[0-9a-fA-F]{32}$"
            }
          },
          "source": {
            "type": {
              "type": "string"
            }
          },
          "source_ip_address": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "numbers.v1.identity.document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "numbers.v1.identity": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "purchase_intent_number_type": {
            "type": {
              "type": "string"
            }
          },
          "purchase_intent_iso_country": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "numbers.v1.proof_of_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PG[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$"
            }
          },
          "identity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.messaging": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.messaging.messaging_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.messaging.messaging_country|instance": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_sms_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "carrier": {
                    "type": "string"
                  },
                  "mcc": {
                    "type": "string"
                  },
                  "mnc": {
                    "type": "string"
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "base_price": {
                        "type": "number"
                      },
                      "current_price": {
                        "type": "number"
                      },
                      "number_type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "inbound_sms_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  },
                  "number_type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.phone_number": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.phone_number.phone_number_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.phone_number.phone_number_country|instance": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "phone_number_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  },
                  "number_type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.voice": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v1.voice.voice_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.voice.voice_country|instance": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_prefix_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "prefixes": {
                    "type": "array",
                    "items": "string"
                  },
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "inbound_call_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "current_price": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "number_type": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v1.voice.voice_number": {
        "type": "object",
        "properties": {
          "number": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "type": "number"
                },
                "current_price": {
                  "type": "number"
                }
              }
            }
          },
          "inbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "current_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "number_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v2.voice": {
        "type": "object",
        "properties": {
          "name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "pricing.v2.voice.voice_country": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v2.voice.voice_country|instance": {
        "type": "object",
        "properties": {
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_prefix_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "origination_prefixes": {
                    "type": "array",
                    "items": "string"
                  },
                  "destination_prefixes": {
                    "type": "array",
                    "items": "string"
                  },
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "inbound_call_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "current_price": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "number_type": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "pricing.v2.voice.voice_number": {
        "type": "object",
        "properties": {
          "destination_number": {
            "type": {
              "type": "string"
            }
          },
          "origination_number": {
            "type": {
              "type": "string"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "outbound_call_prices": {
            "type": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base_price": {
                    "type": "number"
                  },
                  "current_price": {
                    "type": "number"
                  },
                  "origination_prefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "inbound_call_price": {
            "type": {
              "type": "object",
              "properties": {
                "base_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "current_price": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "number_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow.engagement": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "contact_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "active",
                "ended"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.engagement_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow.execution": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "contact_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "active",
                "ended"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_step": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.execution.execution_step.execution_step_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "execution_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "step_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "studio.v1.flow": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            }
          },
          "version": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.step": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "studio.v1.flow.engagement.step.step_context": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "engagement_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$"
            }
          },
          "flow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$"
            }
          },
          "step_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.activity": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.event": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "actor_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "actor_type": {
            "type": {
              "type": "string"
            }
          },
          "actor_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "event_data": {
            "type": {
              "type": "object"
            }
          },
          "event_date": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "event_date_ms": {
            "type": {
              "type": "integer"
            }
          },
          "event_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "resource_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$"
            }
          },
          "source": {
            "type": {
              "type": "string"
            }
          },
          "source_ip_address": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "age": {
            "type": {
              "type": "integer"
            }
          },
          "assignment_status": {
            "type": {
              "type": "string",
              "enum": [
                "pending",
                "reserved",
                "assigned",
                "canceled",
                "completed",
                "wrapping"
              ]
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "addons": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "priority": {
            "type": {
              "type": "integer"
            }
          },
          "reason": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "task_queue_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "task_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "timeout": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workflow_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assignment_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "assignment_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "max_reserved_workers": {
            "type": {
              "type": "integer"
            }
          },
          "reservation_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "reservation_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "target_workers": {
            "type": {
              "type": "string"
            }
          },
          "task_order": {
            "type": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_entered": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "longest_task_waiting_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_available_workers": {
            "type": {
              "type": "integer"
            }
          },
          "total_eligible_workers": {
            "type": {
              "type": "integer"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queue_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task_queue.task_queues_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "task_queue_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          }
        }
      },
      "taskrouter.v1.workspace.task.task_reservation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservation_status": {
            "type": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "worker_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_name": {
            "type": {
              "type": "string"
            }
          },
          "activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "attributes": {
            "type": {
              "type": "string"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_status_changed": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assigned_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "available": {
            "type": {
              "type": "boolean"
            }
          },
          "available_capacity_percentage": {
            "type": {
              "type": "integer"
            }
          },
          "configured_capacity": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TC[0-9a-fA-F]{32}$"
            }
          },
          "task_channel_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_instance_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_reservation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservation_status": {
            "type": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "timeout",
                "canceled",
                "rescinded",
                "wrapping",
                "completed"
              ]
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WR[0-9a-fA-F]{32}$"
            }
          },
          "task_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "worker_name": {
            "type": {
              "type": "string"
            }
          },
          "worker_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.worker_statistics": {
        "type": "object",
        "properties": {
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.workers_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "activity_durations": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.worker.workers_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "total_workers": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "assignment_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "document_content_type": {
            "type": {
              "type": "string"
            }
          },
          "fallback_assignment_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "task_reservation_timeout": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_entered": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_timed_out_in_workflow": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "longest_task_waiting_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workflow.workflow_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "workflow_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "default_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "event_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "events_filter": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "multi_task_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "timeout_activity_name": {
            "type": {
              "type": "string"
            }
          },
          "timeout_activity_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$"
            }
          },
          "prioritize_queue_order": {
            "type": {
              "type": "string",
              "enum": [
                "FIFO",
                "LIFO"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_cumulative_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "avg_task_acceptance_time": {
            "type": {
              "type": "integer"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "reservations_created": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_accepted": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rejected": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_timed_out": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "reservations_rescinded": {
            "type": {
              "type": "integer"
            }
          },
          "split_by_wait_time": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_accepted": {
            "type": {
              "type": "object"
            }
          },
          "wait_duration_until_canceled": {
            "type": {
              "type": "object"
            }
          },
          "tasks_canceled": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_completed": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_created": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_deleted": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_moved": {
            "type": {
              "type": "integer"
            }
          },
          "tasks_timed_out_in_workflow": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_real_time_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "activity_statistics": {
            "type": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "longest_task_waiting_age": {
            "type": {
              "type": "integer"
            }
          },
          "longest_task_waiting_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WT[0-9a-fA-F]{32}$"
            }
          },
          "tasks_by_priority": {
            "type": {
              "type": "object"
            }
          },
          "tasks_by_status": {
            "type": {
              "type": "object"
            }
          },
          "total_tasks": {
            "type": {
              "type": "integer"
            }
          },
          "total_workers": {
            "type": {
              "type": "integer"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "taskrouter.v1.workspace.workspace_statistics": {
        "type": "object",
        "properties": {
          "realtime": {
            "type": {
              "type": "object"
            }
          },
          "cumulative": {
            "type": {
              "type": "object"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "workspace_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.credential_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.ip_access_control_list": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.origination_url": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^OU[0-9a-fA-F]{32}$"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "weight": {
            "type": {
              "type": "integer"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sip_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "priority": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.phone_number": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "address_requirements": {
            "type": {
              "type": "string",
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ]
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          "sms_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_application_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "trunking.v1.trunk.terminating_sip_domain": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_status_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sip_registration": {
            "type": {
              "type": "boolean"
            }
          },
          "trunk_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "trunking.v1.trunk": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "disaster_recovery_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "disaster_recovery_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "secure": {
            "type": {
              "type": "boolean"
            }
          },
          "recording": {
            "type": {
              "type": "object"
            }
          },
          "cnam_lookup_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "auth_type_set": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.composition.composition_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          "source_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "container_format": {
            "type": {
              "type": "string",
              "enum": [
                "mka",
                "mkv"
              ]
            }
          },
          "codec": {
            "type": {
              "type": "string",
              "enum": [
                "VP8",
                "H264",
                "OPUS",
                "PCMU"
              ]
            }
          },
          "grouping_sids": {
            "type": {
              "type": "object"
            }
          },
          "track_name": {
            "type": {
              "type": "string"
            }
          },
          "offset": {
            "type": {
              "type": "integer"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.recording.recording_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.room": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "enable_turn": {
            "type": {
              "type": "boolean"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "status_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "peer-to-peer",
                "group",
                "group-small"
              ]
            }
          },
          "max_participants": {
            "type": {
              "type": "integer"
            }
          },
          "record_participants_on_connect": {
            "type": {
              "type": "boolean"
            }
          },
          "video_codecs": {
            "type": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "VP8",
                  "H264"
                ]
              }
            }
          },
          "media_region": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_participant": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "connected",
                "disconnected"
              ]
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "start_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end_time": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_participant.room_participant_published_track": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          "participant_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "kind": {
            "type": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "video.v1.room.room_participant.room_participant_subscribed_track": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "publisher_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "subscriber_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "kind": {
            "type": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          }
        }
      },
      "video.v1.room.room_recording": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$"
            }
          },
          "source_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "type": {
            "type": {
              "type": "string",
              "enum": [
                "audio",
                "video",
                "data"
              ]
            }
          },
          "duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "container_format": {
            "type": {
              "type": "string",
              "enum": [
                "mka",
                "mkv"
              ]
            }
          },
          "codec": {
            "type": {
              "type": "string",
              "enum": [
                "VP8",
                "H264",
                "OPUS",
                "PCMU"
              ]
            }
          },
          "grouping_sids": {
            "type": {
              "type": "object"
            }
          },
          "track_name": {
            "type": {
              "type": "string"
            }
          },
          "offset": {
            "type": {
              "type": "integer"
            }
          },
          "room_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "video.v1.room.room_recording.room_recording_media": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.command": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "command": {
            "type": {
              "type": "string"
            }
          },
          "command_mode": {
            "type": {
              "type": "string",
              "enum": [
                "text",
                "binary"
              ]
            }
          },
          "transport": {
            "type": {
              "type": "string",
              "enum": [
                "sms",
                "ip"
              ]
            }
          },
          "delivery_receipt_requested": {
            "type": {
              "type": "boolean"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "queued",
                "sent",
                "delivered",
                "received",
                "failed"
              ]
            }
          },
          "direction": {
            "type": {
              "type": "string",
              "enum": [
                "from_sim",
                "to_sim"
              ]
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.sim.data_session": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WN[0-9a-fA-F]{32}$"
            }
          },
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "radio_link": {
            "type": {
              "type": "string"
            }
          },
          "operator_mcc": {
            "type": {
              "type": "string"
            }
          },
          "operator_mnc": {
            "type": {
              "type": "string"
            }
          },
          "operator_country": {
            "type": {
              "type": "string"
            }
          },
          "operator_name": {
            "type": {
              "type": "string"
            }
          },
          "cell_id": {
            "type": {
              "type": "string"
            }
          },
          "cell_location_estimate": {
            "type": {
              "type": "object"
            }
          },
          "packets_uploaded": {
            "type": {
              "type": "integer"
            }
          },
          "packets_downloaded": {
            "type": {
              "type": "integer"
            }
          },
          "last_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "start": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "end": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "wireless.v1.rate_plan": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "data_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "data_metering": {
            "type": {
              "type": "string"
            }
          },
          "data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "messaging_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "international_roaming": {
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "international_roaming_data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "wireless.v1.sim": {
        "type": "object",
        "properties": {
          "sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "rate_plan_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iccid": {
            "type": {
              "type": "string"
            }
          },
          "e_id": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string",
              "enum": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ]
            }
          },
          "reset_status": {
            "type": {
              "type": "string",
              "enum": [
                "resetting"
              ]
            }
          },
          "commands_callback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "commands_callback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "sms_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "sms_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_fallback_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_fallback_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "voice_method": {
            "type": {
              "type": "string",
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ]
            }
          },
          "voice_url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "date_created": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "date_updated": {
            "type": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": {
              "type": "string",
              "format": "uri"
            }
          },
          "links": {
            "type": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          }
        }
      },
      "wireless.v1.sim.usage_record": {
        "type": "object",
        "properties": {
          "sim_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$"
            }
          },
          "account_sid": {
            "type": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$"
            }
          },
          "period": {
            "type": {
              "type": "object"
            }
          },
          "commands": {
            "type": {
              "type": "object"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}